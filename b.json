[
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "TestInterfaceEventInitConstructor", 
        "FileName": "TestInterfaceEventInitConstructor.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "TestInterfaceConstructor4", 
        "FileName": "TestInterfaceConstructor4.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "ArrayBufferView", 
        "FileName": "ArrayBufferView.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "type"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGTestInterface", 
        "FileName": "SVGTestInterface.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "TestInterfaceGarbageCollected", 
                "Name": "attr1"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "func", 
                "Argument": [
                    {
                        "Type": "TestInterfaceGarbageCollected", 
                        "Name": "arg"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TestInterfaceGarbageCollected", 
        "FileName": "TestInterfaceGarbageCollected.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "voidMethod", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "booleanMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodBooleanArg", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "boolArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodSequenceArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "sequenceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodFloatArg", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "floatArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestInterfaceEmptyStringArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "callbackWithThisValueVoidMethodStringArg", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "customVoidMethodTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodWillBeGarbageCollectedSequenceArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "sequenceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodWillBeGarbageCollectedArrayArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceWillBeGarbageCollected", 
                        "Name": "arrayArg"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TestCallbackInterface", 
        "FileName": "TestCallbackInterface.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "voidMethodDocument", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "d"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TestInterface3", 
        "FileName": "TestPartialInterface4.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "implements3StringAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "implements3StaticStringAttribute"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "implements3VoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "implements3StaticVoidMethod", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "TestImplements3", 
        "FileName": "TestImplements3.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "octet", 
                "Name": "getUint8", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "byteOffset"
                    }
                ]
            }, 
            {
                "Type": "double", 
                "Name": "getFloat64", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "byteOffset"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "littleEndian"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setUint8", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "byteOffset"
                    }, 
                    {
                        "Type": "octet", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setFloat64", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "byteOffset"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "value"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "littleEndian"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DataView", 
        "FileName": "DataView.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "TestInterfaceConstructor2", 
        "FileName": "TestInterfaceConstructor2.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "TestInterfaceNamedConstructor2", 
        "FileName": "TestInterfaceNamedConstructor2.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "TestInterface", 
                "Name": "testInterfaceAttribute"
            }, 
            {
                "Type": "TestInterfaceConstructor", 
                "Name": "testInterfaceConstructorAttribute"
            }, 
            {
                "Type": "TestInterfaceConstructor", 
                "Name": "TestInterface"
            }, 
            {
                "Type": "TestInterface2Constructor", 
                "Name": "TestInterface2"
            }, 
            {
                "Type": "double", 
                "Name": "doubleAttribute"
            }, 
            {
                "Type": "float", 
                "Name": "floatAttribute"
            }, 
            {
                "Type": "double", 
                "Name": "unrestrictedDoubleAttribute"
            }, 
            {
                "Type": "float", 
                "Name": "unrestrictedFloatAttribute"
            }, 
            {
                "Type": "TestEnum", 
                "Name": "testEnumAttribute"
            }, 
            {
                "Type": "DOMStringOrDouble", 
                "Name": "stringOrDoubleAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "conditionalLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "conditionalReadOnlyLongAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "staticStringAttribute"
            }, 
            {
                "Type": "TestInterface", 
                "Name": "staticReturnDOMWrapperAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "staticReadOnlyStringAttribute"
            }, 
            {
                "Type": "TestInterface", 
                "Name": "staticReadOnlyReturnDOMWrapperAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "staticConditionalReadOnlyLongAttribute"
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "legacyInterfaceTypeCheckingAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "alwaysExposedAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "workerExposedAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "windowExposedAttribute"
            }, 
            {
                "Type": null, 
                "Name": "lenientThisAttribute"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "voidMethodTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDoubleArgFloatArg", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "doubleArg"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "floatArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodUnrestrictedDoubleArgUnrestrictedFloatArg", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "unrestrictedDoubleArg"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "unrestrictedFloatArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestEnumArg", 
                "Argument": [
                    {
                        "Type": "TestEnum", 
                        "Name": "testEnumArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethod", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__deleter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__deleter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "alwaysExposedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "workerExposedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "windowExposedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "alwaysExposedStaticMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "workerExposedStaticMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "windowExposedStaticMethod", 
                "Argument": []
            }, 
            {
                "Type": "TestInterface", 
                "Name": "staticReturnDOMWrapperMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "methodWithExposedAndRuntimeEnabledFlag", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "overloadMethodWithExposedAndRuntimeEnabledFlag", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadMethodWithExposedAndRuntimeEnabledFlag", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "string"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadMethodWithExposedAndRuntimeEnabledFlag", 
                "Argument": [
                    {
                        "Type": "Window", 
                        "Name": "window"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "methodWithExposedHavingRuntimeEnabldFlag", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "windowAndServiceWorkerExposedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodPartialOverload", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodPartialOverload", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "doubleArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "staticVoidMethodPartialOverload", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseMethodPartialOverload", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseMethodPartialOverload", 
                "Argument": [
                    {
                        "Type": "Window", 
                        "Name": "window"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "staticPromiseMethodPartialOverload", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "legacyInterfaceTypeCheckingMethod", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "UNSIGNED_LONG", 
                "Value": "0"
            }, 
            {
                "Type": "short", 
                "Name": "CONST_JAVASCRIPT", 
                "Value": "1"
            }
        ], 
        "Name": "TestInterface", 
        "FileName": "TestInterface.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "TestInterfaceEmpty", 
        "FileName": "TestInterfaceEmpty.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "Uint8ClampedArray", 
        "FileName": "Uint8ClampedArray.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "partial2LongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "partial2StaticLongAttribute"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "partial2VoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "partial2StaticVoidMethod", 
                "Argument": []
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "PARTIAL2_UNSIGNED_SHORT", 
                "Value": "0"
            }
        ], 
        "Name": "TestInterface", 
        "FileName": "TestPartialInterface2.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "TestInterfaceDocument", 
        "FileName": "TestInterfaceDocument.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "partialLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "partialStaticLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "partialCallWithExecutionContextLongAttribute"
            }, 
            {
                "Type": "PartialEnumType", 
                "Name": "partialPartialEnumTypeAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringAttribute"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "partialVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "partialStaticVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "partialVoidMethodLongArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "partialCallWithExecutionContextRaisesExceptionVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "partialVoidMethodPartialCallbackTypeArg", 
                "Argument": [
                    {
                        "Type": "PartialCallbackType", 
                        "Name": "partialCallbackTypeArg"
                    }
                ]
            }, 
            {
                "Type": "short", 
                "Name": "shortMethodWithShortArgumentImplementedInPrivateScript", 
                "Argument": [
                    {
                        "Type": "short", 
                        "Name": "value"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "PARTIAL_UNSIGNED_SHORT", 
                "Value": "0"
            }
        ], 
        "Name": "TestInterface", 
        "FileName": "TestPartialInterface.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": null, 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "value"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TestSpecialOperations", 
        "FileName": "TestSpecialOperations.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "TestInterfaceConstructor3", 
        "FileName": "TestInterfaceConstructor3.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "href"
            }, 
            {
                "Type": "DOMString", 
                "Name": "hrefThrows"
            }, 
            {
                "Type": "DOMString", 
                "Name": "hrefCallWith"
            }, 
            {
                "Type": "ByteString", 
                "Name": "hrefByteString"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "TestNode", 
        "FileName": "TestNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "readonlyStringAttribute"
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "readonlyTestInterfaceEmptyAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "readonlyLongAttribute"
            }, 
            {
                "Type": "Date", 
                "Name": "dateAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringAttribute"
            }, 
            {
                "Type": "ByteString", 
                "Name": "byteStringAttribute"
            }, 
            {
                "Type": "USVString", 
                "Name": "usvStringAttribute"
            }, 
            {
                "Type": "DOMTimeStamp", 
                "Name": "domTimeStampAttribute"
            }, 
            {
                "Type": "boolean", 
                "Name": "booleanAttribute"
            }, 
            {
                "Type": "byte", 
                "Name": "byteAttribute"
            }, 
            {
                "Type": "double", 
                "Name": "doubleAttribute"
            }, 
            {
                "Type": "float", 
                "Name": "floatAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "longAttribute"
            }, 
            {
                "Type": "long long", 
                "Name": "longLongAttribute"
            }, 
            {
                "Type": "octet", 
                "Name": "octetAttribute"
            }, 
            {
                "Type": "short", 
                "Name": "shortAttribute"
            }, 
            {
                "Type": "double", 
                "Name": "unrestrictedDoubleAttribute"
            }, 
            {
                "Type": "float", 
                "Name": "unrestrictedFloatAttribute"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "unsignedLongAttribute"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "unsignedLongLongAttribute"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "unsignedShortAttribute"
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "testInterfaceEmptyAttribute"
            }, 
            {
                "Type": "TestObject", 
                "Name": "testObjectAttribute"
            }, 
            {
                "Type": "VoidCallbackFunction", 
                "Name": "voidCallbackFunctionAttribute"
            }, 
            {
                "Type": "AnyCallbackFunctionOptionalAnyArg", 
                "Name": "anyCallbackFunctionOptionalAnyArgAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "cssAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "imeAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "svgAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "xmlAttribute"
            }, 
            {
                "Type": "NodeFilter", 
                "Name": "nodeFilterAttribute"
            }, 
            {
                "Type": "SerializedScriptValue", 
                "Name": "serializedScriptValueAttribute"
            }, 
            {
                "Type": null, 
                "Name": "anyAttribute"
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseAttribute"
            }, 
            {
                "Type": "Window", 
                "Name": "windowAttribute"
            }, 
            {
                "Type": "Document", 
                "Name": "documentAttribute"
            }, 
            {
                "Type": "DocumentFragment", 
                "Name": "documentFragmentAttribute"
            }, 
            {
                "Type": "DocumentType", 
                "Name": "documentTypeAttribute"
            }, 
            {
                "Type": "Element", 
                "Name": "elementAttribute"
            }, 
            {
                "Type": "Node", 
                "Name": "nodeAttribute"
            }, 
            {
                "Type": "ShadowRoot", 
                "Name": "shadowRootAttribute"
            }, 
            {
                "Type": "ArrayBuffer", 
                "Name": "arrayBufferAttribute"
            }, 
            {
                "Type": "Float32Array", 
                "Name": "float32ArrayAttribute"
            }, 
            {
                "Type": "Uint8Array", 
                "Name": "uint8ArrayAttribute"
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "self"
            }, 
            {
                "Type": "EventTarget", 
                "Name": "readonlyEventTargetAttribute"
            }, 
            {
                "Type": "EventTarget", 
                "Name": "readonlyEventTargetOrNullAttribute"
            }, 
            {
                "Type": "Window", 
                "Name": "readonlyWindowAttribute"
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "htmlCollectionAttribute"
            }, 
            {
                "Type": "HTMLElement", 
                "Name": "htmlElementAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringArrayAttribute"
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "testInterfaceEmptyArrayAttribute"
            }, 
            {
                "Type": "float", 
                "Name": "floatArrayAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringOrNullAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "longOrNullAttribute"
            }, 
            {
                "Type": "TestInterface", 
                "Name": "testInterfaceOrNullAttribute"
            }, 
            {
                "Type": "TestEnum", 
                "Name": "testEnumAttribute"
            }, 
            {
                "Type": "TestEnum", 
                "Name": "testEnumOrNullAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "staticStringAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "staticLongAttribute"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "eventHandlerAttribute"
            }, 
            {
                "Type": null, 
                "Name": "doubleOrStringAttribute"
            }, 
            {
                "Type": null, 
                "Name": "doubleOrStringOrNullAttribute"
            }, 
            {
                "Type": null, 
                "Name": "doubleOrNullStringAttribute"
            }, 
            {
                "Type": null, 
                "Name": "stringOrStringSequenceAttribute"
            }, 
            {
                "Type": null, 
                "Name": "testEnumOrDoubleAttribute"
            }, 
            {
                "Type": null, 
                "Name": "unrestrictedDoubleOrStringAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "activityLoggingAccessForAllWorldsLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "activityLoggingGetterForAllWorldsLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "activityLoggingSetterForAllWorldsLongAttribute"
            }, 
            {
                "Type": null, 
                "Name": "cachedAttributeAnyAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "cachedArrayAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "cachedStringOrNoneAttribute"
            }, 
            {
                "Type": null, 
                "Name": "callWithExecutionContextAnyAttribute"
            }, 
            {
                "Type": null, 
                "Name": "callWithScriptStateAnyAttribute"
            }, 
            {
                "Type": null, 
                "Name": "callWithExecutionContextAndScriptStateAnyAttribute"
            }, 
            {
                "Type": "Document", 
                "Name": "checkSecurityForNodeReadonlyDocumentAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "conditionalLongAttribute"
            }, 
            {
                "Type": "TestInterfaceEmptyConstructor", 
                "Name": "testInterfaceEmptyConstructorAttribute"
            }, 
            {
                "Type": "TestInterfaceEmptyConstructor", 
                "Name": "testInterfaceEmptyConstructorAttribute"
            }, 
            {
                "Type": "TestInterfaceEmptyConstructor", 
                "Name": "measureAsFeatureNameTestInterfaceEmptyConstructorAttribute"
            }, 
            {
                "Type": "object", 
                "Name": "customObjectAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "customGetterLongAttribute"
            }, 
            {
                "Type": "object", 
                "Name": "customGetterReadonlyObjectAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "customSetterLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "customLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "customElementsCallbacksReadonlyLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "deprecatedLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "enforceRangeLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "implementedAsLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "customImplementedAsLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "customGetterImplementedAsLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "customSetterImplementedAsLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "measureAsLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "notEnumerableLongAttribute"
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "perWorldBindingsReadonlyTestInterfaceEmptyAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "activityLoggingAccessPerWorldBindingsLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "activityLoggingAccessForIsolatedWorldsPerWorldBindingsLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "activityLoggingGetterPerWorldBindingsLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "activityLoggingGetterForIsolatedWorldsPerWorldBindingsLongAttribute"
            }, 
            {
                "Type": "TestNode", 
                "Name": "location"
            }, 
            {
                "Type": "TestNode", 
                "Name": "locationWithException"
            }, 
            {
                "Type": "TestNode", 
                "Name": "locationWithCallWith"
            }, 
            {
                "Type": "TestNode", 
                "Name": "locationByteString"
            }, 
            {
                "Type": "TestNode", 
                "Name": "locationWithPerWorldBindings"
            }, 
            {
                "Type": "TestNode", 
                "Name": "locationTypeCheckingInterface"
            }, 
            {
                "Type": "TestInterfaceGarbageCollected", 
                "Name": "locationGarbageCollected"
            }, 
            {
                "Type": "TestInterfaceWillBeGarbageCollected", 
                "Name": "locationWillBeGarbageCollected"
            }, 
            {
                "Type": "long", 
                "Name": "raisesExceptionLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "raisesExceptionGetterLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "setterRaisesExceptionLongAttribute"
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "raisesExceptionTestInterfaceEmptyAttribute"
            }, 
            {
                "Type": null, 
                "Name": "cachedAttributeRaisesExceptionGetterAnyAttribute"
            }, 
            {
                "Type": "TestInterface", 
                "Name": "reflectTestInterfaceAttribute"
            }, 
            {
                "Type": "TestInterface", 
                "Name": "reflectReflectedNameAttributeTestAttribute"
            }, 
            {
                "Type": "boolean", 
                "Name": "reflectBooleanAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "reflectLongAttribute"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "reflectUnsignedShortAttribute"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "reflectUnsignedLongAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "class"
            }, 
            {
                "Type": "DOMString", 
                "Name": "reflectedId"
            }, 
            {
                "Type": "DOMString", 
                "Name": "reflectedName"
            }, 
            {
                "Type": "DOMString", 
                "Name": "reflectedClass"
            }, 
            {
                "Type": "DOMString", 
                "Name": "limitedToOnlyOneAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "limitedToOnlyAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "limitedToOnlyOtherAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "limitedWithMissingDefaultAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "limitedWithInvalidMissingDefaultAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "corsSettingAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "limitedWithEmptyMissingInvalidAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "replaceableReadonlyLongAttribute"
            }, 
            {
                "Type": "TestNode", 
                "Name": "locationPutForwards"
            }, 
            {
                "Type": "long", 
                "Name": "runtimeEnabledLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "conditionalRuntimeEnabledLongAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "setterCallWithActiveWindowAndFirstWindowStringAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "setterCallWithExecutionContextStringAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "treatNullAsEmptyStringStringAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "treatNullAsNullStringStringAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "treatReturnedNullStringAsNullStringAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "treatReturnedNullStringAsUndefinedStringAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "cachedTreatReturnedNullStringAsUndefinedStringAttribute"
            }, 
            {
                "Type": "ByteString", 
                "Name": "treatReturnedNullStringAsNullByteStringAttribute"
            }, 
            {
                "Type": "ByteString", 
                "Name": "treatReturnedNullStringAsUndefinedByteStringAttribute"
            }, 
            {
                "Type": "USVString", 
                "Name": "treatReturnedNullStringAsNullUSVStringAttribute"
            }, 
            {
                "Type": "USVString", 
                "Name": "treatReturnedNullStringAsUndefinedUSVStringAttribute"
            }, 
            {
                "Type": "float", 
                "Name": "typeCheckingInterfaceFloatAttribute"
            }, 
            {
                "Type": "TestInterface", 
                "Name": "typeCheckingInterfaceTestInterfaceAttribute"
            }, 
            {
                "Type": "TestInterface", 
                "Name": "typeCheckingInterfaceTestInterfaceOrNullAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "urlStringAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "urlStringAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "unforgeableLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "measuredLongAttribute"
            }, 
            {
                "Type": "TestInterface", 
                "Name": "sameObjectAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "unscopeableLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "unscopeableRuntimeEnabledLongAttribute"
            }, 
            {
                "Type": "TestInterface", 
                "Name": "testInterfaceAttribute"
            }, 
            {
                "Type": "TestInterfaceGarbageCollected", 
                "Name": "testInterfaceGarbageCollectedAttribute"
            }, 
            {
                "Type": "TestInterfaceGarbageCollected", 
                "Name": "testInterfaceGarbageCollectedOrNullAttribute"
            }, 
            {
                "Type": "TestInterfaceWillBeGarbageCollected", 
                "Name": "testInterfaceWillBeGarbageCollectedAttribute"
            }, 
            {
                "Type": "TestInterfaceWillBeGarbageCollected", 
                "Name": "testInterfaceWillBeGarbageCollectedOrNullAttribute"
            }, 
            {
                "Type": "short", 
                "Name": "readonlyShortAttribute"
            }, 
            {
                "Type": "short", 
                "Name": "shortAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringAttribute"
            }, 
            {
                "Type": "Node", 
                "Name": "nodeAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "attributeImplementedInCPPForPrivateScriptOnly"
            }, 
            {
                "Type": "DOMString", 
                "Name": "attributeForPrivateScriptOnly"
            }, 
            {
                "Type": "TestEnum", 
                "Name": "enumForPrivateScript"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "unscopeableVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "unscopeableRuntimeEnabledVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "staticVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "Date", 
                "Name": "dateMethod", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringMethod", 
                "Argument": []
            }, 
            {
                "Type": "ByteString", 
                "Name": "byteStringMethod", 
                "Argument": []
            }, 
            {
                "Type": "USVString", 
                "Name": "usvStringMethod", 
                "Argument": []
            }, 
            {
                "Type": "DOMTimeStamp", 
                "Name": "readonlyDOMTimeStampMethod", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "booleanMethod", 
                "Argument": []
            }, 
            {
                "Type": "byte", 
                "Name": "byteMethod", 
                "Argument": []
            }, 
            {
                "Type": "double", 
                "Name": "doubleMethod", 
                "Argument": []
            }, 
            {
                "Type": "float", 
                "Name": "floatMethod", 
                "Argument": []
            }, 
            {
                "Type": "long", 
                "Name": "longMethod", 
                "Argument": []
            }, 
            {
                "Type": "long long", 
                "Name": "longLongMethod", 
                "Argument": []
            }, 
            {
                "Type": "octet", 
                "Name": "octetMethod", 
                "Argument": []
            }, 
            {
                "Type": "short", 
                "Name": "shortMethod", 
                "Argument": []
            }, 
            {
                "Type": "unsigned long", 
                "Name": "unsignedLongMethod", 
                "Argument": []
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "unsignedLongLongMethod", 
                "Argument": []
            }, 
            {
                "Type": "unsigned short", 
                "Name": "unsignedShortMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDateArg", 
                "Argument": [
                    {
                        "Type": "Date", 
                        "Name": "dateArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodStringArg", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodByteStringArg", 
                "Argument": [
                    {
                        "Type": "ByteString", 
                        "Name": "stringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodUSVStringArg", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "usvStringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDOMTimeStampArg", 
                "Argument": [
                    {
                        "Type": "DOMTimeStamp", 
                        "Name": "domTimeStampArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodBooleanArg", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "booleanArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodByteArg", 
                "Argument": [
                    {
                        "Type": "byte", 
                        "Name": "byteArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDoubleArg", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "doubleArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodFloatArg", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "floatArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodLongArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodLongLongArg", 
                "Argument": [
                    {
                        "Type": "long long", 
                        "Name": "longLongArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodOctetArg", 
                "Argument": [
                    {
                        "Type": "octet", 
                        "Name": "octetArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodShortArg", 
                "Argument": [
                    {
                        "Type": "short", 
                        "Name": "shortArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodUnsignedLongArg", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "unsignedLongArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodUnsignedLongLongArg", 
                "Argument": [
                    {
                        "Type": "unsigned long long", 
                        "Name": "unsignedLongLongArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodUnsignedShortArg", 
                "Argument": [
                    {
                        "Type": "unsigned short", 
                        "Name": "unsignedShortArg"
                    }
                ]
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "testInterfaceEmptyMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodLongArgTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }, 
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "VoidCallbackFunction", 
                "Name": "voidCallbackFunctionMethod", 
                "Argument": []
            }, 
            {
                "Type": "AnyCallbackFunctionOptionalAnyArg", 
                "Name": "anyCallbackFunctionOptionalAnyArgMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodVoidCallbackFunctionArg", 
                "Argument": [
                    {
                        "Type": "VoidCallbackFunction", 
                        "Name": "voidCallbackFunctionArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodOptionalVoidCallbackFunctionArg", 
                "Argument": [
                    {
                        "Type": "VoidCallbackFunction", 
                        "Name": "voidCallbackFunctionArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodNullableVoidCallbackFunctionArg", 
                "Argument": [
                    {
                        "Type": "VoidCallbackFunction", 
                        "Name": "voidCallbackFunctionArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodAnyCallbackFunctionOptionalAnyArg", 
                "Argument": [
                    {
                        "Type": "AnyCallbackFunctionOptionalAnyArg", 
                        "Name": "anyCallbackFunctionOptionalAnyArgArg"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "anyMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodEventTargetArg", 
                "Argument": [
                    {
                        "Type": "EventTarget", 
                        "Name": "eventTargetArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodAnyArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "anyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodAttrArg", 
                "Argument": [
                    {
                        "Type": "Attr", 
                        "Name": "attrArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDocumentArg", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "documentArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDocumentTypeArg", 
                "Argument": [
                    {
                        "Type": "DocumentType", 
                        "Name": "documentTypeArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodElementArg", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "elementArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodNodeArg", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "nodeArg"
                    }
                ]
            }, 
            {
                "Type": "ArrayBuffer", 
                "Name": "arrayBufferMethod", 
                "Argument": []
            }, 
            {
                "Type": "ArrayBufferView", 
                "Name": "arrayBufferViewMethod", 
                "Argument": []
            }, 
            {
                "Type": "Float32Array", 
                "Name": "float32ArrayMethod", 
                "Argument": []
            }, 
            {
                "Type": "Int32Array", 
                "Name": "int32ArrayMethod", 
                "Argument": []
            }, 
            {
                "Type": "Uint8Array", 
                "Name": "uint8ArrayMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodArrayBufferArg", 
                "Argument": [
                    {
                        "Type": "ArrayBuffer", 
                        "Name": "arrayBufferArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodArrayBufferOrNullArg", 
                "Argument": [
                    {
                        "Type": "ArrayBuffer", 
                        "Name": "arrayBufferArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodArrayBufferViewArg", 
                "Argument": [
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "arrayBufferViewArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodFlexibleArrayBufferViewArg", 
                "Argument": [
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "arrayBufferViewArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodFlexibleArrayBufferViewTypedArg", 
                "Argument": [
                    {
                        "Type": "Float32Array", 
                        "Name": "typedArrayBufferViewArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodFloat32ArrayArg", 
                "Argument": [
                    {
                        "Type": "Float32Array", 
                        "Name": "float32ArrayArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodInt32ArrayArg", 
                "Argument": [
                    {
                        "Type": "Int32Array", 
                        "Name": "int32ArrayArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodUint8ArrayArg", 
                "Argument": [
                    {
                        "Type": "Uint8Array", 
                        "Name": "uint8ArrayArg"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "longArrayMethod", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringArrayMethod", 
                "Argument": []
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "testInterfaceEmptyArrayMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodArrayLongArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "arrayLongArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodArrayStringArg", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "arrayStringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodArrayTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "arrayTestInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodNullableArrayLongArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "arrayLongArg"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "longSequenceMethod", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "stringSequenceMethod", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "testInterfaceEmptySequenceMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodSequenceLongArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "longSequenceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodSequenceStringArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "stringSequenceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodSequenceTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "testInterfaceEmptySequenceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodSequenceSequenceDOMStringArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "stringSequenceSequenceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodNullableSequenceLongArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "longSequenceArg"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "nullableLongMethod", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "nullableStringMethod", 
                "Argument": []
            }, 
            {
                "Type": "TestInterface", 
                "Name": "nullableTestInterfaceMethod", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "nullableLongSequenceMethod", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "testInterfaceGarbageCollectedOrDOMStringMethod", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "testInterfaceWillBeGarbageCollectedOrTestDictionaryMethod", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "booleanOrDOMStringOrUnrestrictedDoubleMethod", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "testInterfaceOrLongMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDoubleOrDOMStringArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDoubleOrDOMStringOrNullArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDoubleOrNullOrDOMStringArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDOMStringOrArrayBufferOrArrayBufferViewArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodArrayBufferOrArrayBufferViewOrDictionaryArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodArrayOfDoubleOrDOMStringArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestInterfaceEmptyOrNullArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "nullableTestInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestCallbackInterfaceArg", 
                "Argument": [
                    {
                        "Type": "TestCallbackInterface", 
                        "Name": "testCallbackInterfaceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodOptionalTestCallbackInterfaceArg", 
                "Argument": [
                    {
                        "Type": "TestCallbackInterface", 
                        "Name": "optionalTestCallbackInterfaceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestCallbackInterfaceOrNullArg", 
                "Argument": [
                    {
                        "Type": "TestCallbackInterface", 
                        "Name": "testCallbackInterfaceArg"
                    }
                ]
            }, 
            {
                "Type": "TestEnum", 
                "Name": "testEnumMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestEnumArg", 
                "Argument": [
                    {
                        "Type": "TestEnum", 
                        "Name": "testEnumTypeArg"
                    }
                ]
            }, 
            {
                "Type": "Dictionary", 
                "Name": "dictionaryMethod", 
                "Argument": []
            }, 
            {
                "Type": "TestDictionary", 
                "Name": "testDictionaryMethod", 
                "Argument": []
            }, 
            {
                "Type": "TestDictionary", 
                "Name": "nullableTestDictionaryMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "passPermissiveDictionaryMethod", 
                "Argument": [
                    {
                        "Type": "TestDictionary", 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "NodeFilter", 
                "Name": "nodeFilterMethod", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "arg1"
                    }, 
                    {
                        "Type": "Dictionary", 
                        "Name": "arg2"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "arg3"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "variadic"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseMethodWithoutExceptionState", 
                "Argument": [
                    {
                        "Type": "Dictionary", 
                        "Name": "arg1"
                    }
                ]
            }, 
            {
                "Type": "SerializedScriptValue", 
                "Name": "serializedScriptValueMethod", 
                "Argument": []
            }, 
            {
                "Type": "XPathNSResolver", 
                "Name": "xPathNSResolverMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDictionaryArg", 
                "Argument": [
                    {
                        "Type": "Dictionary", 
                        "Name": "dictionaryArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodNodeFilterArg", 
                "Argument": [
                    {
                        "Type": "NodeFilter", 
                        "Name": "nodeFilterArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodPromiseArg", 
                "Argument": [
                    {
                        "Type": "Promise", 
                        "Name": "promiseArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodSerializedScriptValueArg", 
                "Argument": [
                    {
                        "Type": "SerializedScriptValue", 
                        "Name": "serializedScriptValueArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodXPathNSResolverArg", 
                "Argument": [
                    {
                        "Type": "XPathNSResolver", 
                        "Name": "xPathNSResolverArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDictionarySequenceArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "dictionarySequenceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodStringArgLongArg", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodOptionalStringArg", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "optionalStringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodOptionalTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "optionalTestInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodOptionalLongArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "optionalLongArg"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringMethodOptionalLongArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "optionalLongArg"
                    }
                ]
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "testInterfaceEmptyMethodOptionalLongArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "optionalLongArg"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "longMethodOptionalLongArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "optionalLongArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodLongArgOptionalLongArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "optionalLongArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodLongArgOptionalLongArgOptionalLongArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "optionalLongArg1"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "optionalLongArg2"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodLongArgOptionalTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }, 
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "optionalTestInterfaceEmpty"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestInterfaceEmptyArgOptionalLongArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "optionalTestInterfaceEmpty"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodOptionalDictionaryArg", 
                "Argument": [
                    {
                        "Type": "Dictionary", 
                        "Name": "optionalDictionaryArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDefaultByteStringArg", 
                "Argument": [
                    {
                        "Type": "ByteString", 
                        "Name": "defaultByteStringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDefaultStringArg", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "defaultStringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDefaultIntegerArgs", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "defaultLongArg"
                    }, 
                    {
                        "Type": "long long", 
                        "Name": "defaultLongLongArg"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "defaultUnsignedArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDefaultDoubleArg", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "defaultDoubleArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDefaultTrueBooleanArg", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "defaultBooleanArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDefaultFalseBooleanArg", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "defaultBooleanArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDefaultNullableByteStringArg", 
                "Argument": [
                    {
                        "Type": "ByteString", 
                        "Name": "defaultStringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDefaultNullableStringArg", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "defaultStringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDefaultNullableTestInterfaceArg", 
                "Argument": [
                    {
                        "Type": "TestInterface", 
                        "Name": "defaultTestInterfaceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDefaultDoubleOrStringArgs", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "defaultLongArg"
                    }, 
                    {
                        "Type": null, 
                        "Name": "defaultStringArg"
                    }, 
                    {
                        "Type": null, 
                        "Name": "defaultNullArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDefaultStringSequenceArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "defaultStringSequenceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodVariadicStringArg", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "variadicStringArgs"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodStringArgVariadicStringArg", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "variadicStringArgs"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodVariadicTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "variadicTestInterfaceEmptyArgs"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestInterfaceEmptyArgVariadicTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }, 
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "variadicTestInterfaceEmptyArgs"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodVariadicTestInterfaceGarbageCollectedArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceGarbageCollected", 
                        "Name": "variadicTestInterfaceGarbageCollectedArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodVariadicTestInterfaceWillBeGarbageCollectedArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceWillBeGarbageCollected", 
                        "Name": "variadicTestInterfaceWillBeGarbageCollectedArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodA", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodA", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg1"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "longArg2"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodB", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodB", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodC", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodC", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodD", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodD", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArrayArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodE", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodE", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyOrNullArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodF", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodF", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "doubleArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodG", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodG", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyOrNullArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodH", 
                "Argument": [
                    {
                        "Type": "TestInterface", 
                        "Name": "testInterfaceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodH", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodI", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodI", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "doubleArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodJ", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodJ", 
                "Argument": [
                    {
                        "Type": "TestDictionary", 
                        "Name": "testDictionaryArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodK", 
                "Argument": [
                    {
                        "Type": "Function", 
                        "Name": "functionArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodK", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodL", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }, 
                    {
                        "Type": null, 
                        "Name": "restArgs"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedMethodL", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }, 
                    {
                        "Type": null, 
                        "Name": "restArgs"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseOverloadMethod", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseOverloadMethod", 
                "Argument": [
                    {
                        "Type": "Window", 
                        "Name": "arg1"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "arg2"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseOverloadMethod", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "arg1"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "arg2"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedPerWorldBindingsMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "overloadedPerWorldBindingsMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedStaticMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "overloadedStaticMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg1"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "longArg2"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "object", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__deleter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__deleter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodClampUnsignedShortArg", 
                "Argument": [
                    {
                        "Type": "unsigned short", 
                        "Name": "clampUnsignedShortArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodClampUnsignedLongArg", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "clampUnsignedLongArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDefaultUndefinedTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "defaultUndefinedTestInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDefaultUndefinedLongArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "defaultUndefinedLongArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDefaultUndefinedStringArg", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "defaultUndefinedStringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodEnforceRangeLongArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "enforceRangeLongArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTreatNullAsEmptyStringStringArg", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "treatNullAsEmptyStringStringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTreatNullAsNullStringStringArg", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "treatNullAsNullStringStringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTreatNullAsNullStringTreatUndefinedAsNullStringStringArg", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "treatNullAsNullStringStringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "activityLoggingAccessForAllWorldsMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "callWithExecutionContextVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "callWithScriptStateVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "long", 
                "Name": "callWithScriptStateLongMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "callWithScriptStateExecutionContextVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "callWithScriptStateScriptArgumentsVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "callWithScriptStateScriptArgumentsVoidMethodOptionalBooleanArg", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "optionalBooleanArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "callWithActiveWindow", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "callWithActiveWindowScriptWindow", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "callWithThisValue", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "checkSecurityForNodeVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "conditionalConditionVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "conditionalConditionStaticVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "customVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "customCallPrologueVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "customCallEpilogueVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "conditionalConditionCustomVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "customElementCallbacksVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "deprecatedVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "doNotCheckSignatureVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "implementedAsVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "measureAsVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "measureMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "measureOverloadedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "measureOverloadedMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "DeprecateAsOverloadedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "DeprecateAsOverloadedMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "DeprecateAsSameValueOverloadedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "DeprecateAsSameValueOverloadedMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "measureAsOverloadedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "measureAsOverloadedMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "measureAsSameValueOverloadedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "measureAsSameValueOverloadedMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deprecateAsMeasureAsSameValueOverloadedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "deprecateAsMeasureAsSameValueOverloadedMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deprecateAsSameValueMeasureAsOverloadedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "deprecateAsSameValueMeasureAsOverloadedMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deprecateAsSameValueMeasureAsSameValueOverloadedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "deprecateAsSameValueMeasureAsSameValueOverloadedMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "notEnumerableVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "perWorldBindingsVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "perWorldBindingsVoidMethodTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "postMessage", 
                "Argument": [
                    {
                        "Type": "SerializedScriptValue", 
                        "Name": "message"
                    }, 
                    {
                        "Type": null, 
                        "Name": "transfer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "activityLoggingForAllWorldsPerWorldBindingsVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "activityLoggingForIsolatedWorldsPerWorldBindingsVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "raisesExceptionVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "raisesExceptionStringMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "raisesExceptionVoidMethodOptionalLongArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "optionalLongArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "raisesExceptionVoidMethodTestCallbackInterfaceArg", 
                "Argument": [
                    {
                        "Type": "TestCallbackInterface", 
                        "Name": "testCallbackInterfaceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "raisesExceptionVoidMethodOptionalTestCallbackInterfaceArg", 
                "Argument": [
                    {
                        "Type": "TestCallbackInterface", 
                        "Name": "optionalTestCallbackInterfaceArg"
                    }
                ]
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "raisesExceptionTestInterfaceEmptyVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "XPathNSResolver", 
                "Name": "raisesExceptionXPathNSResolverVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "callWithExecutionContextRaisesExceptionVoidMethodLongArg", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "runtimeEnabledVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "perWorldBindingsRuntimeEnabledVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "runtimeEnabledOverloadedVoidMethod", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "runtimeEnabledOverloadedVoidMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "partiallyRuntimeEnabledOverloadedVoidMethod", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "partiallyRuntimeEnabledOverloadedVoidMethod", 
                "Argument": [
                    {
                        "Type": "TestInterface", 
                        "Name": "testInterfaceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "partiallyRuntimeEnabledOverloadedVoidMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "partiallyRuntimeEnabledOverloadedVoidMethod", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "longArg"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "stringArg"
                    }, 
                    {
                        "Type": "TestInterface", 
                        "Name": "testInterfaceArg"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "treatReturnedNullStringAsNullStringMethod", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "treatReturnedNullStringAsUndefinedStringMethod", 
                "Argument": []
            }, 
            {
                "Type": "ByteString", 
                "Name": "treatReturnedNullStringAsNullByteStringMethod", 
                "Argument": []
            }, 
            {
                "Type": "ByteString", 
                "Name": "treatReturnedNullStringAsUndefinedByteStringMethod", 
                "Argument": []
            }, 
            {
                "Type": "USVString", 
                "Name": "treatReturnedNullStringAsNullUSVStringMethod", 
                "Argument": []
            }, 
            {
                "Type": "USVString", 
                "Name": "treatReturnedNullStringAsUndefinedUSVStringMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "typeCheckingInterfaceVoidMethodTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "typeCheckingInterfaceVoidMethodTestInterfaceEmptyVariadicArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "useToImpl4ArgumentsCheckingIfPossibleWithOptionalArg", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node1"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "node2"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "useToImpl4ArgumentsCheckingIfPossibleWithNullableArg", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node1"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "node2"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "useToImpl4ArgumentsCheckingIfPossibleWithUndefinedArg", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node1"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "node2"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "typeCheckingUnrestrictedVoidMethodFloatArgDoubleArg", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "floatArg"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "doubleArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "unforgeableVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestInterfaceGarbageCollectedSequenceArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "testInterfaceGarbageCollectedSequenceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestInterfaceGarbageCollectedArrayArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceGarbageCollected", 
                        "Name": "testInterfaceGarbageCollectedArrayArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestInterfaceWillBeGarbageCollectedSequenceArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "testInterfaceWillBeGarbageCollectedSequenceArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestInterfaceWillBeGarbageCollectedArrayArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceWillBeGarbageCollected", 
                        "Name": "testInterfaceWillBeGarbageCollectedArrayArg"
                    }
                ]
            }, 
            {
                "Type": "TestInterface", 
                "Name": "newObjectTestInterfaceMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodImplementedInPrivateScript", 
                "Argument": []
            }, 
            {
                "Type": "short", 
                "Name": "shortMethodImplementedInPrivateScript", 
                "Argument": []
            }, 
            {
                "Type": "short", 
                "Name": "shortMethodWithShortArgumentImplementedInPrivateScript", 
                "Argument": [
                    {
                        "Type": "short", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringMethodWithStringArgumentImplementedInPrivateScript", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "nodeMethodWithNodeArgumentImplementedInPrivateScript", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "nodeMethodWithVariousArgumentsImplementedInPrivateScript", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "short", 
                        "Name": "value1"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "value2"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "string"
                    }
                ]
            }, 
            {
                "Type": "short", 
                "Name": "methodImplementedInCPPForPrivateScriptOnly", 
                "Argument": [
                    {
                        "Type": "short", 
                        "Name": "value1"
                    }, 
                    {
                        "Type": "short", 
                        "Name": "value2"
                    }
                ]
            }, 
            {
                "Type": "short", 
                "Name": "methodForPrivateScriptOnly", 
                "Argument": [
                    {
                        "Type": "short", 
                        "Name": "value1"
                    }, 
                    {
                        "Type": "short", 
                        "Name": "value2"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "CONST_VALUE_0", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CONST_VALUE_1", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CONST_VALUE_2", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CONST_VALUE_4", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CONST_VALUE_8", 
                "Value": "8"
            }, 
            {
                "Type": "short", 
                "Name": "CONST_VALUE_9", 
                "Value": "-1"
            }, 
            {
                "Type": "DOMString", 
                "Name": "CONST_VALUE_10", 
                "Value": "my constant string"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CONST_VALUE_11", 
                "Value": "0xffffffff"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CONST_VALUE_12", 
                "Value": "0x01"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CONST_VALUE_13", 
                "Value": "0X20"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CONST_VALUE_14", 
                "Value": "0x1abc"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CONST_VALUE_15", 
                "Value": "010"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CONST_VALUE_16", 
                "Value": "-010"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CONST_VALUE_16", 
                "Value": "-0x1A"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CONST_VALUE_17", 
                "Value": "-0X1a"
            }, 
            {
                "Type": "double", 
                "Name": "CONST_VALUE_18", 
                "Value": null
            }, 
            {
                "Type": "double", 
                "Name": "CONST_VALUE_19", 
                "Value": null
            }, 
            {
                "Type": "double", 
                "Name": "CONST_VALUE_20", 
                "Value": null
            }, 
            {
                "Type": "double", 
                "Name": "CONST_VALUE_21", 
                "Value": null
            }, 
            {
                "Type": "double", 
                "Name": "CONST_VALUE_22", 
                "Value": null
            }, 
            {
                "Type": "double", 
                "Name": "CONST_VALUE_23", 
                "Value": null
            }, 
            {
                "Type": "double", 
                "Name": "CONST_VALUE_24", 
                "Value": null
            }, 
            {
                "Type": "float", 
                "Name": "CONST_VALUE_25", 
                "Value": "1"
            }, 
            {
                "Type": "short", 
                "Name": "DEPRECATED_CONSTANT", 
                "Value": "1"
            }, 
            {
                "Type": "short", 
                "Name": "MEASURED_CONSTANT", 
                "Value": "1"
            }, 
            {
                "Type": "short", 
                "Name": "FEATURE_ENABLED_CONST", 
                "Value": "1"
            }, 
            {
                "Type": "short", 
                "Name": "CONST_JAVASCRIPT", 
                "Value": "1"
            }
        ], 
        "Name": "TestObject", 
        "FileName": "TestObject.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__deleter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__deleter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "CONST_VALUE_1", 
                "Value": "1"
            }
        ], 
        "Name": "TestInterface2", 
        "FileName": "TestInterface2.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "TestInterfaceConstructor", 
        "FileName": "TestInterfaceConstructor.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "readonlyLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "longAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "doNotCheckSecurityLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "doNotCheckSecurityReadonlyLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "doNotCheckSecurityOnSetterLongAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "doNotCheckSecurityReplaceableReadonlyLongAttribute"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "voidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "doNotCheckSecurityVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "doNotCheckSecurityDoNotCheckSignatureVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "doNotCheckSecurityPerWorldBindingsVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "doNotCheckSecurityUnforgeableVoidMethod", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "TestInterfaceCheckSecurity", 
        "FileName": "TestInterfaceCheckSecurity.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "ULongLong", 
                "Name": "uLongLongAttribute"
            }, 
            {
                "Type": "T", 
                "Name": "tAttribute"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "voidMethodArrayOfLongsArg", 
                "Argument": [
                    {
                        "Type": "ArrayOfLongs", 
                        "Name": "arrayOfLongsArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodFloatArgStringArg", 
                "Argument": [
                    {
                        "Type": "Float", 
                        "Name": "floatArg"
                    }, 
                    {
                        "Type": "String", 
                        "Name": "stringArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodTestCallbackInterfaceTypeArg", 
                "Argument": [
                    {
                        "Type": "TestCallbackInterfaceType", 
                        "Name": "testCallbackInterfaceTypeArg"
                    }
                ]
            }, 
            {
                "Type": "ULongLong", 
                "Name": "uLongLongMethodTestInterfaceEmptyTypeSequenceArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "testInterfaceEmptyTypeSequenceArg"
                    }
                ]
            }, 
            {
                "Type": "TestInterfaceOrTestInterfaceEmpty", 
                "Name": "testInterfaceOrTestInterfaceEmptyMethod", 
                "Argument": []
            }, 
            {
                "Type": "DOMStringOrDouble", 
                "Name": "domStringOrDoubleMethod", 
                "Argument": []
            }, 
            {
                "Type": "ArrayOfStrings", 
                "Name": "arrayOfStringsMethodArrayOfStringsArg", 
                "Argument": [
                    {
                        "Type": "ArrayOfStrings", 
                        "Name": "arrayOfStringsArg"
                    }
                ]
            }, 
            {
                "Type": "String", 
                "Name": "stringArrayMethodStringArrayArg", 
                "Argument": [
                    {
                        "Type": "String", 
                        "Name": "stringArrayArg"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TestTypedefs", 
        "FileName": "TestTypedefs.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "TestInterfaceEventTarget", 
        "FileName": "TestInterfaceEventTarget.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "TestInterfaceCustomConstructor", 
        "FileName": "TestInterfaceCustomConstructor.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "TestNamedConstructorConstructor", 
                "Name": "testNamedConstructorConstructorAttribute"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "TestInterfaceNamedConstructor", 
        "FileName": "TestInterfaceNamedConstructor.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "implements2StaticStringAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "implements2StringAttribute"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "implements2VoidMethod", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "TestImplements2", 
        "FileName": "TestImplements2.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "implementsStaticReadOnlyLongAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "implementsStaticStringAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "implementsReadonlyStringAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "implementsStringAttribute"
            }, 
            {
                "Type": "Node", 
                "Name": "implementsNodeAttribute"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "implementsEventHandlerAttribute"
            }, 
            {
                "Type": "Node", 
                "Name": "implementsRuntimeEnabledNodeAttribute"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "implementsVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "implementsComplexMethod", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "strArg"
                    }, 
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "implementsCustomVoidMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "implementsStaticVoidMethod", 
                "Argument": []
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "IMPLEMENTS_CONSTANT_1", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "IMPLEMENTS_CONSTANT_2", 
                "Value": "2"
            }
        ], 
        "Name": "TestImplements", 
        "FileName": "TestImplements.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "byteLength"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ArrayBuffer", 
        "FileName": "ArrayBuffer.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "TestInterfaceWillBeGarbageCollected", 
                "Name": "attr1"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "func", 
                "Argument": [
                    {
                        "Type": "TestInterfaceWillBeGarbageCollected", 
                        "Name": "arg"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TestInterfaceWillBeGarbageCollected", 
        "FileName": "TestInterfaceWillBeGarbageCollected.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TestSpecialOperationsNotEnumerable", 
        "FileName": "TestSpecialOperationsNotEnumerable.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__deleter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__deleter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDocument", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "Iterator", 
                "Name": "keys", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "TestInterface3", 
        "FileName": "TestInterface3.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "nodeName"
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringAttribute"
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "readonlyTestInterfaceEmptyAttribute"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "eventHandlerAttribute"
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "perWorldBindingsReadonlyTestInterfaceEmptyAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "reflectStringAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "reflectUrlStringAttribute"
            }
        ], 
        "Operation": [
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "testInterfaceEmptyMethod", 
                "Argument": []
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "perWorldBindingsTestInterfaceEmptyMethod", 
                "Argument": []
            }, 
            {
                "Type": "TestInterfaceEmpty", 
                "Name": "perWorldBindingsTestInterfaceEmptyMethodOptionalBooleanArg", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "optionalBooleanArgument"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TestInterfaceNode", 
        "FileName": "TestInterfaceNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "TestInterface5", 
                "Name": "testInterfaceAttribute"
            }, 
            {
                "Type": "TestInterface5Constructor", 
                "Name": "testInterfaceConstructorAttribute"
            }, 
            {
                "Type": "double", 
                "Name": "doubleAttribute"
            }, 
            {
                "Type": "float", 
                "Name": "floatAttribute"
            }, 
            {
                "Type": "double", 
                "Name": "unrestrictedDoubleAttribute"
            }, 
            {
                "Type": "float", 
                "Name": "unrestrictedFloatAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "staticStringAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "alwaysExposedAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "workerExposedAttribute"
            }, 
            {
                "Type": "long", 
                "Name": "windowExposedAttribute"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "voidMethodTestInterfaceEmptyArg", 
                "Argument": [
                    {
                        "Type": "TestInterfaceEmpty", 
                        "Name": "testInterfaceEmptyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDoubleArgFloatArg", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "doubleArg"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "floatArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodUnrestrictedDoubleArgUnrestrictedFloatArg", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "unrestrictedDoubleArg"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "unrestrictedFloatArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethod", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__deleter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__deleter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "alwaysExposedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "workerExposedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "windowExposedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "alwaysExposedStaticMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "workerExposedStaticMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "windowExposedStaticMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "windowAndServiceWorkerExposedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodBooleanOrDOMStringArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodDoubleOrDOMStringArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "UNSIGNED_LONG", 
                "Value": "0"
            }, 
            {
                "Type": "short", 
                "Name": "CONST_JAVASCRIPT", 
                "Value": "1"
            }
        ], 
        "Name": "TestInterface5", 
        "FileName": "TestInterface5.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "voidMethodPartialOverload", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "staticVoidMethodPartialOverload", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseMethodPartialOverload", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "staticPromiseMethodPartialOverload", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "partial2VoidMethod", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "partial2VoidMethod", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "partialVoidTestEnumModulesArgMethod", 
                "Argument": [
                    {
                        "Type": "TestEnumModules", 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "partial2StaticVoidMethod", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "unscopeableVoidMethod", 
                "Argument": []
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "PARTIAL3_UNSIGNED_SHORT", 
                "Value": "0"
            }
        ], 
        "Name": "TestInterface", 
        "FileName": "TestPartialInterface3.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "createImageBitmap", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "blob"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "createImageBitmap", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "blob"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sx"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sy"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sw"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sh"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "createImageBitmap", 
                "Argument": [
                    {
                        "Type": "ImageData", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "createImageBitmap", 
                "Argument": [
                    {
                        "Type": "ImageData", 
                        "Name": "data"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sx"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sy"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sw"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sh"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "createImageBitmap", 
                "Argument": [
                    {
                        "Type": "ImageBitmap", 
                        "Name": "bitmap"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "createImageBitmap", 
                "Argument": [
                    {
                        "Type": "ImageBitmap", 
                        "Name": "bitmap"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sx"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sy"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sw"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sh"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "ImageBitmapFactories", 
        "FileName": "ImageBitmapFactories.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "set", 
                "Argument": [
                    {
                        "Type": "InternalDictionary", 
                        "Name": "testingDictionary"
                    }
                ]
            }, 
            {
                "Type": "InternalDictionary", 
                "Name": "get", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setDerived", 
                "Argument": [
                    {
                        "Type": "InternalDictionaryDerived", 
                        "Name": "derived"
                    }
                ]
            }, 
            {
                "Type": "InternalDictionaryDerived", 
                "Name": "getDerived", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "DictionaryTest", 
        "FileName": "DictionaryTest.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "testLong"
            }, 
            {
                "Type": "long", 
                "Name": "testEnforceRangeLong"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "testUnsignedLong"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "testEnforceRangeUnsignedLong"
            }, 
            {
                "Type": "long long", 
                "Name": "testLongLong"
            }, 
            {
                "Type": "long long", 
                "Name": "testEnforceRangeLongLong"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "testUnsignedLongLong"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "testEnforceRangeUnsignedLongLong"
            }, 
            {
                "Type": "byte", 
                "Name": "testByte"
            }, 
            {
                "Type": "byte", 
                "Name": "testEnforceRangeByte"
            }, 
            {
                "Type": "octet", 
                "Name": "testOctet"
            }, 
            {
                "Type": "octet", 
                "Name": "testEnforceRangeOctet"
            }, 
            {
                "Type": "short", 
                "Name": "testShort"
            }, 
            {
                "Type": "short", 
                "Name": "testEnforceRangeShort"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "testUnsignedShort"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "testEnforceRangeUnsignedShort"
            }, 
            {
                "Type": "ByteString", 
                "Name": "testByteString"
            }, 
            {
                "Type": "ByteString", 
                "Name": "testByteStringTreatReturnedNullStringAsNullAttribute"
            }, 
            {
                "Type": "ByteString", 
                "Name": "testByteStringTreatReturnedNullStringAsUndefinedAttribute"
            }, 
            {
                "Type": "USVString", 
                "Name": "testUSVString"
            }, 
            {
                "Type": "USVString", 
                "Name": "testUSVStringTreatReturnedNullStringAsNullAttribute"
            }, 
            {
                "Type": "USVString", 
                "Name": "testUSVStringTreatReturnedNullStringAsUndefinedAttribute"
            }
        ], 
        "Operation": [
            {
                "Type": "ByteString", 
                "Name": "getTestByteStringTreatReturnedNullStringAsNullMethod", 
                "Argument": []
            }, 
            {
                "Type": "ByteString", 
                "Name": "getTestByteStringTreatReturnedNullStringAsUndefinedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setTestByteString", 
                "Argument": [
                    {
                        "Type": "ByteString", 
                        "Name": "byteString"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setTestByteStringDefaultNull", 
                "Argument": [
                    {
                        "Type": "ByteString", 
                        "Name": "byteString"
                    }
                ]
            }, 
            {
                "Type": "USVString", 
                "Name": "getTestUSVStringTreatReturnedNullStringAsNullMethod", 
                "Argument": []
            }, 
            {
                "Type": "USVString", 
                "Name": "getTestUSVStringTreatReturnedNullStringAsUndefinedMethod", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setTestUSVString", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "usvString"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setTestUSVStringDefaultNull", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "usvString"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TypeConversions", 
        "FileName": "TypeConversions.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "wasCollected"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "GCObservation", 
        "FileName": "GCObservation.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setMockScrollbarsEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setMockGestureTapHighlightsEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setStandardFontFamily", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "family"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "script"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setSerifFontFamily", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "family"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "script"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setSansSerifFontFamily", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "family"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "script"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setFixedFontFamily", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "family"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "script"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setCursiveFontFamily", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "family"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "script"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setFantasyFontFamily", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "family"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "script"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setPictographFontFamily", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "family"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "script"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setTextAutosizingEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setTextAutosizingWindowSizeOverride", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "height"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setTextTrackKindUserPreference", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "preference"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setAccessibilityFontScaleFactor", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "fontScaleFactor"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setMediaTypeOverride", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "mediaTypeOverride"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setDisplayModeOverride", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "displayModeOverride"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setEditingBehavior", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "behavior"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setImagesEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setDefaultVideoPosterURL", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "poster"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setViewportEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setViewportMetaEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setAvailablePointerTypes", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "pointers"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setPrimaryPointerType", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "pointer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setAvailableHoverTypes", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "types"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setPrimaryHoverType", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setImageAnimationPolicy", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "policy"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setAuthorShadowDOMForAnyElementEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setCSSStickyPositionEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setLangAttributeAwareFormControlUIEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setOverlayScrollbarsEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setExperimentalContentSecurityPolicyFeaturesEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setImageColorProfilesEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setScrollTopLeftInteropEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setLinkHeaderEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "InternalSettings", 
        "FileName": "InternalSettings.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "LayerRect", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "LayerRectList", 
        "FileName": "LayerRectList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Node", 
                "Name": "layerAssociatedNode"
            }, 
            {
                "Type": "DOMString", 
                "Name": "layerType"
            }, 
            {
                "Type": "long", 
                "Name": "associatedNodeOffsetX"
            }, 
            {
                "Type": "long", 
                "Name": "associatedNodeOffsetY"
            }, 
            {
                "Type": "ClientRect", 
                "Name": "layerRelativeRect"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "LayerRect", 
        "FileName": "LayerRect.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Window", 
                "Name": "pagePopupWindow"
            }, 
            {
                "Type": "InternalSettings", 
                "Name": "settings"
            }, 
            {
                "Type": "InternalRuntimeFlags", 
                "Name": "runtimeFlags"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "workerThreadCount"
            }, 
            {
                "Type": "boolean", 
                "Name": "cursorUpdatePending"
            }, 
            {
                "Type": "DOMString", 
                "Name": "unscopeableAttribute"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "address", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "GCObservation", 
                "Name": "observeGC", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "observed"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "elementLayoutTreeAsText", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isPreloaded", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isPreloadedBy", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }, 
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isLoadingFromMemoryCache", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isSharingStyle", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element1"
                    }, 
                    {
                        "Type": "Element", 
                        "Name": "element2"
                    }
                ]
            }, 
            {
                "Type": "CSSStyleDeclaration", 
                "Name": "computedStyleIncludingVisitedInfo", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "ShadowRoot", 
                "Name": "createUserAgentShadowRoot", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "host"
                    }
                ]
            }, 
            {
                "Type": "ShadowRoot", 
                "Name": "shadowRoot", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "host"
                    }
                ]
            }, 
            {
                "Type": "ShadowRoot", 
                "Name": "youngestShadowRoot", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "host"
                    }
                ]
            }, 
            {
                "Type": "ShadowRoot", 
                "Name": "oldestShadowRoot", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "host"
                    }
                ]
            }, 
            {
                "Type": "ShadowRoot", 
                "Name": "youngerShadowRoot", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "root"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "shadowRootType", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "root"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "hasShadowInsertionPoint", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "root"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "hasContentElement", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "root"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "countElementShadow", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "Root"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "shadowPseudoId", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isValidContentSelect", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "contentElement"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "treeScopeRootNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "parentTreeScope", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "hasSelectorForIdInShadow", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "host"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "id"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "hasSelectorForClassInShadow", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "host"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "className"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "hasSelectorForAttributeInShadow", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "host"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "attributeName"
                    }
                ]
            }, 
            {
                "Type": "unsigned short", 
                "Name": "compareTreeScopePosition", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "treeScope1"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "treeScope2"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "updateStyleAndReturnAffectedElementCount", 
                "Argument": []
            }, 
            {
                "Type": "unsigned long", 
                "Name": "needsLayoutCount", 
                "Argument": []
            }, 
            {
                "Type": "unsigned long", 
                "Name": "hitTestCount", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "hitTestCacheHits", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "Element", 
                "Name": "elementFromPoint", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "ignoreClipping"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "allowChildFrameContent"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearHitTestCache", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "pauseAnimations", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "pauseTime"
                    }
                ]
            }, 
            {
                "Type": "bool", 
                "Name": "isCompositedAnimation", 
                "Argument": [
                    {
                        "Type": "Animation", 
                        "Name": "animation"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "advanceTimeForImage", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "image"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "deltaTimeInSeconds"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "nextSiblingInComposedTree", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "firstChildInComposedTree", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "lastChildInComposedTree", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "nextInComposedTree", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "previousInComposedTree", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "visiblePlaceholder", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "selectColorInColorChooser", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "colorValue"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "endColorChooser", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "hasAutofocusRequest", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "formControlStateOfHistoryItem", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setFormControlStateOfHistoryItem", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "values"
                    }
                ]
            }, 
            {
                "Type": "ClientRect", 
                "Name": "absoluteCaretBounds", 
                "Argument": []
            }, 
            {
                "Type": "ClientRect", 
                "Name": "boundingBox", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "markerCountForNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "markerType"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "activeMarkerCountForNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "Range", 
                "Name": "markerRangeForNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "markerType"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "markerDescriptionForNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "markerType"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "addTextMatchMarker", 
                "Argument": [
                    {
                        "Type": "Range", 
                        "Name": "range"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "isActive"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setMarkersActive", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "startOffset"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "endOffset"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "active"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setMarkedTextMatchesAreHighlighted", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "highlight"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setFrameViewPosition", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "viewportAsText", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "devicePixelRatio"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "availableWidth"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "availableHeight"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "wasLastChangeUserEdit", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "textField"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "elementShouldAutoComplete", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "inputElement"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "suggestedValue", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "inputElement"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setSuggestedValue", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "inputElement"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setEditingValue", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "inputElement"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setAutofilled", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "inputElement"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scrollElementToRect", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "w"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "h"
                    }
                ]
            }, 
            {
                "Type": "Range", 
                "Name": "rangeFromLocationAndLength", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "scope"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "rangeLocation"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "rangeLength"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "locationFromRange", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "scope"
                    }, 
                    {
                        "Type": "Range", 
                        "Name": "range"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "lengthFromRange", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "scope"
                    }, 
                    {
                        "Type": "Range", 
                        "Name": "range"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "rangeAsText", 
                "Argument": [
                    {
                        "Type": "Range", 
                        "Name": "range"
                    }
                ]
            }, 
            {
                "Type": "DOMPoint", 
                "Name": "touchPositionAdjustedToBestClickableNode", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "touchNodeAdjustedToBestClickableNode", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "DOMPoint", 
                "Name": "touchPositionAdjustedToBestContextMenuNode", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "touchNodeAdjustedToBestContextMenuNode", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "ClientRect", 
                "Name": "bestZoomableAreaForTouchPoint", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "lastSpellCheckRequestSequence", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "lastSpellCheckProcessedSequence", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "userPreferredLanguages", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setUserPreferredLanguages", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "languages"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "activeDOMObjectCount", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "wheelEventHandlerCount", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "scrollEventHandlerCount", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "touchEventHandlerCount", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "LayerRectList", 
                "Name": "touchEventTargetLayerRects", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "executeCommand", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "htmlNamespace", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "htmlTags", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "svgNamespace", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "svgTags", 
                "Argument": []
            }, 
            {
                "Type": "NodeList", 
                "Name": "nodesFromRect", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "topPadding"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "rightPadding"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "bottomPadding"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "leftPadding"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "ignoreClipping"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "allowChildFrameContent"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "hasSpellingMarker", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "from"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "length"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "hasGrammarMarker", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "from"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "length"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setContinuousSpellCheckingEnabled", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isOverwriteModeEnabled", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "toggleOverwriteModeEnabled", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "numberOfScrollableAreas", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isPageBoxVisible", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "pageNumber"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "layerTreeAsText", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "unsigned short", 
                        "Name": "flags"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "elementLayerTreeAsText", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }, 
                    {
                        "Type": "unsigned short", 
                        "Name": "flags"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "scrollsWithRespectTo", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element1"
                    }, 
                    {
                        "Type": "Element", 
                        "Name": "element2"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "scrollingStateTreeAsText", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "mainThreadScrollingReasons", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "ClientRectList", 
                "Name": "nonFastScrollableRects", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "garbageCollectDocumentResources", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "evictAllResources", 
                "Argument": []
            }, 
            {
                "Type": "unsigned long", 
                "Name": "numberOfLiveNodes", 
                "Argument": []
            }, 
            {
                "Type": "unsigned long", 
                "Name": "numberOfLiveDocuments", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "dumpRefCountedInstanceCounts", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "consoleMessageArgumentCounts", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "setMemoryCacheCapacities", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "minDeadBytes"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "maxDeadBytes"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "totalBytes"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "counterValue", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "pageNumber", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "pageWidth"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "pageHeight"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "shortcutIconURLs", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "allIconURLs", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "numberOfPages", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "pageWidthInPixels"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "pageHeightInPixels"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "pageProperty", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "propertyName"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "pageNumber"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "pageSizeAndMarginsInPixels", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "pageIndex"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "marginTop"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "marginRight"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "marginBottom"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "marginLeft"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setDeviceScaleFactor", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "scaleFactor"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setPageScaleFactor", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "scaleFactor"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setPageScaleFactorLimits", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "minScaleFactor"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "maxScaleFactor"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setIsCursorVisible", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "isVisible"
                    }
                ]
            }, 
            {
                "Type": "double", 
                "Name": "effectiveMediaVolume", 
                "Argument": [
                    {
                        "Type": "HTMLMediaElement", 
                        "Name": "mediaElement"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "mediaPlayerRemoteRouteAvailabilityChanged", 
                "Argument": [
                    {
                        "Type": "HTMLMediaElement", 
                        "Name": "mediaElement"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "available"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "mediaPlayerPlayingRemotelyChanged", 
                "Argument": [
                    {
                        "Type": "HTMLMediaElement", 
                        "Name": "mediaElement"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "remote"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setAllowHiddenVolumeControls", 
                "Argument": [
                    {
                        "Type": "HTMLMediaElement", 
                        "Name": "mediaElement"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "allow"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "registerURLSchemeAsBypassingContentSecurityPolicy", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "scheme"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "registerURLSchemeAsBypassingContentSecurityPolicy", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "scheme"
                    }, 
                    {
                        "Type": null, 
                        "Name": "policyAreas"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeURLSchemeRegisteredAsBypassingContentSecurityPolicy", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "scheme"
                    }
                ]
            }, 
            {
                "Type": "TypeConversions", 
                "Name": "typeConversions", 
                "Argument": []
            }, 
            {
                "Type": "PrivateScriptTest", 
                "Name": "privateScriptTest", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "getReferencedFilePaths", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "startTrackingRepaints", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "stopTrackingRepaints", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "updateLayoutIgnorePendingStylesheetsAndRunPostLayoutTasks", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "forceFullRepaint", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "ClientRectList", 
                "Name": "draggableRegions", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "ClientRectList", 
                "Name": "nonDraggableRegions", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "getCurrentCursorInfo", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "markerTextForListItem", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }
                ]
            }, 
            {
                "Type": "SerializedScriptValue", 
                "Name": "deserializeBuffer", 
                "Argument": [
                    {
                        "Type": "ArrayBuffer", 
                        "Name": "buffer"
                    }
                ]
            }, 
            {
                "Type": "ArrayBuffer", 
                "Name": "serializeObject", 
                "Argument": [
                    {
                        "Type": "SerializedScriptValue", 
                        "Name": "obj"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "forceReload", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "endToEnd"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "getImageSourceURL", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "selectMenuListText", 
                "Argument": [
                    {
                        "Type": "HTMLSelectElement", 
                        "Name": "select"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isSelectPopupVisible", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "selectPopupItemStyleIsRtl", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "select"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "itemIndex"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "selectPopupItemStyleFontHeight", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "select"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "itemIndex"
                    }
                ]
            }, 
            {
                "Type": "ClientRect", 
                "Name": "selectionBounds", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "loseSharedGraphicsContext3D", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "forceCompositingUpdate", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setZoomFactor", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "factor"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setShouldRevealPassword", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "reveal"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "createResolvedPromise", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "createRejectedPromise", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "reason"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "addOneToPromise", 
                "Argument": [
                    {
                        "Type": "Promise", 
                        "Name": "promise"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseCheck", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "arg1"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "arg2"
                    }, 
                    {
                        "Type": "Dictionary", 
                        "Name": "arg3"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "arg4"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "arg5"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseCheckWithoutExceptionState", 
                "Argument": [
                    {
                        "Type": "Dictionary", 
                        "Name": "arg1"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "arg2"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "variadic"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseCheckRange", 
                "Argument": [
                    {
                        "Type": "octet", 
                        "Name": "arg1"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseCheckOverload", 
                "Argument": [
                    {
                        "Type": "Location", 
                        "Name": "arg1"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseCheckOverload", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "arg1"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "promiseCheckOverload", 
                "Argument": [
                    {
                        "Type": "Location", 
                        "Name": "arg1"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "arg2"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "arg3"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setValueForUser", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "textSurroundingNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "maxLength"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setFocused", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "focused"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setInitialFocus", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "reverse"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "ignoreLayoutWithPendingStylesheets", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setNetworkStateNotifierTestOnly", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "testOnly"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setNetworkConnectionInfo", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "countHitRegions", 
                "Argument": [
                    {
                        "Type": "CanvasRenderingContext2D", 
                        "Name": "context"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isInCanvasFontCache", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "fontString"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "canvasFontCacheMaxFonts", 
                "Argument": []
            }, 
            {
                "Type": "ClientRect", 
                "Name": "boundsInViewportSpace", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "forcePluginPlaceholder", 
                "Argument": [
                    {
                        "Type": "HTMLElement", 
                        "Name": "plugin"
                    }, 
                    {
                        "Type": "DocumentFragment", 
                        "Name": "fragment"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "forcePluginPlaceholder", 
                "Argument": [
                    {
                        "Type": "HTMLElement", 
                        "Name": "plugin"
                    }, 
                    {
                        "Type": "PluginPlaceholderOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "DictionaryTest", 
                "Name": "dictionaryTest", 
                "Argument": []
            }, 
            {
                "Type": "UnionTypesTest", 
                "Name": "unionTypesTest", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "forceBlinkGCWithoutV8GC", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "selectedHTMLForClipboard", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "selectedTextForClipboard", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setVisualViewportOffset", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isUseCounted", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "useCounterId"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "unscopeableMethod", 
                "Argument": []
            }, 
            {
                "Type": "ClientRectList", 
                "Name": "outlineRects", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setCapsLockState", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "enabled"
                    }
                ]
            }, 
            {
                "Type": "bool", 
                "Name": "setScrollbarVisibilityInScrollableArea", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "visible"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "forceRestrictIFramePermissions", 
                "Argument": []
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "LAYER_TREE_INCLUDES_REPAINT_RECTS", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "LAYER_TREE_INCLUDES_PAINTING_PHASES", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "LAYER_TREE_INCLUDES_ROOT_LAYER", 
                "Value": "8"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "LAYER_TREE_INCLUDES_CLIP_AND_SCROLL_PARENTS", 
                "Value": "16"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "LAYER_TREE_INCLUDES_SCROLL_BLOCKS_ON", 
                "Value": "32"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "LAYER_TREE_INCLUDES_PAINT_INVALIDATION_OBJECTS", 
                "Value": "64"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "LAYER_TREE_INCLUDES_COMPOSITING_REASONS", 
                "Value": "128"
            }
        ], 
        "Name": "Internals", 
        "FileName": "Internals.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "stringAttributeInPartial"
            }
        ], 
        "Operation": [
            {
                "Type": "short", 
                "Name": "addIntegerInPartial", 
                "Argument": [
                    {
                        "Type": "short", 
                        "Name": "value1"
                    }, 
                    {
                        "Type": "short", 
                        "Name": "value2"
                    }
                ]
            }, 
            {
                "Type": "short", 
                "Name": "addInteger2InPartial", 
                "Argument": [
                    {
                        "Type": "short", 
                        "Name": "value1"
                    }, 
                    {
                        "Type": "short", 
                        "Name": "value2"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "PrivateScriptTest", 
        "FileName": "PartialPrivateScriptTest.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "toString", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "GarbageCollectedScriptWrappable", 
        "FileName": "GarbageCollectedScriptWrappable.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "toString", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "RefCountedScriptWrappable", 
        "FileName": "RefCountedScriptWrappable.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "short", 
                "Name": "readonlyShortAttribute"
            }, 
            {
                "Type": "short", 
                "Name": "shortAttribute"
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringAttribute"
            }, 
            {
                "Type": "Node", 
                "Name": "nodeAttribute"
            }, 
            {
                "Type": "Node", 
                "Name": "nodeAttributeThrowsIndexSizeError"
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringAttributeForPrivateScriptOnly"
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringAttributeImplementedInCPP"
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringAttributeImplementedInCPPForPrivateScriptOnly"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "doNothing", 
                "Argument": []
            }, 
            {
                "Type": "short", 
                "Name": "return123", 
                "Argument": []
            }, 
            {
                "Type": "short", 
                "Name": "echoInteger", 
                "Argument": [
                    {
                        "Type": "short", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "echoString", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "echoNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "short", 
                "Name": "addInteger", 
                "Argument": [
                    {
                        "Type": "short", 
                        "Name": "value1"
                    }, 
                    {
                        "Type": "short", 
                        "Name": "value2"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "addString", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "value1"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value2"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setIntegerToPrototype", 
                "Argument": [
                    {
                        "Type": "short", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "short", 
                "Name": "getIntegerFromPrototype", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setIntegerToDocument", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "short", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "short", 
                "Name": "getIntegerFromDocument", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "createElement", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "appendChild", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node1"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "node2"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "firstChild", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "nextSibling", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "innerHTML", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setInnerHTML", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "string"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "addClickListener", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clickNode", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodThrowsDOMSyntaxError", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodThrowsError", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodThrowsTypeError", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodThrowsRangeError", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodThrowsSyntaxError", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodThrowsReferenceError", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "voidMethodThrowsStackOverflowError", 
                "Argument": []
            }, 
            {
                "Type": "short", 
                "Name": "addIntegerForPrivateScriptOnly", 
                "Argument": [
                    {
                        "Type": "short", 
                        "Name": "value1"
                    }, 
                    {
                        "Type": "short", 
                        "Name": "value2"
                    }
                ]
            }, 
            {
                "Type": "short", 
                "Name": "addIntegerImplementedInCPP", 
                "Argument": [
                    {
                        "Type": "short", 
                        "Name": "value1"
                    }, 
                    {
                        "Type": "short", 
                        "Name": "value2"
                    }
                ]
            }, 
            {
                "Type": "short", 
                "Name": "addIntegerImplementedInCPPForPrivateScriptOnly", 
                "Argument": [
                    {
                        "Type": "short", 
                        "Name": "value1"
                    }, 
                    {
                        "Type": "short", 
                        "Name": "value2"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "dispatchDocumentOnload", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "PrivateScriptTest", 
        "FileName": "PrivateScriptTest.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": null, 
                "Name": "doubleOrStringOrStringArrayAttribute"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "doubleOrStringArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "doubleOrInternalEnumArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "doubleOrStringDefaultDoubleArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "doubleOrStringDefaultStringArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "doubleOrStringDefaultNullArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "doubleOrStringArrayArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "doubleOrStringSequenceArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "nodeListOrElementArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "nodeListOrElementOrNullArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "doubleOrStringOrStringArrayArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "doubleOrStringOrStringSequenceArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "doubleOrStringOrStringArrayNullableArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "doubleOrStringOrStringSequenceNullableArg", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "arg"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "UnionTypesTest", 
        "FileName": "UnionTypesTest.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "handleItem", 
                "Argument": [
                    {
                        "Type": "FontFace", 
                        "Name": "fontFace"
                    }, 
                    {
                        "Type": "FontFace", 
                        "Name": "fontFaceAgain"
                    }, 
                    {
                        "Type": "FontFaceSet", 
                        "Name": "set"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "handleItem", 
                "Argument": [
                    {
                        "Type": "FontFace", 
                        "Name": "fontFace"
                    }, 
                    {
                        "Type": "FontFace", 
                        "Name": "fontFaceAgain"
                    }, 
                    {
                        "Type": "FontFaceSet", 
                        "Name": "set"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "FontFaceSetForEachCallback", 
        "FileName": "FontFaceSetForEachCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "media"
            }, 
            {
                "Type": "boolean", 
                "Name": "matches"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onchange"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "addListener", 
                "Argument": [
                    {
                        "Type": "EventListener", 
                        "Name": "listener"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeListener", 
                "Argument": [
                    {
                        "Type": "EventListener", 
                        "Name": "listener"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "MediaQueryList", 
        "FileName": "MediaQueryList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "cssText"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "CSSRule", 
                "Name": "parentRule"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "getPropertyValue", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "property"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "getPropertyPriority", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "property"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setProperty", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "property"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "priority"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "removeProperty", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "property"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "property"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "propertyValue"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CSSStyleDeclaration", 
        "FileName": "CSSStyleDeclaration.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "href"
            }, 
            {
                "Type": "MediaList", 
                "Name": "media"
            }, 
            {
                "Type": "CSSStyleSheet", 
                "Name": "styleSheet"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "CSSImportRule", 
        "FileName": "CSSImportRule.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "family"
            }, 
            {
                "Type": "DOMString", 
                "Name": "style"
            }, 
            {
                "Type": "DOMString", 
                "Name": "weight"
            }, 
            {
                "Type": "DOMString", 
                "Name": "stretch"
            }, 
            {
                "Type": "DOMString", 
                "Name": "unicodeRange"
            }, 
            {
                "Type": "DOMString", 
                "Name": "variant"
            }, 
            {
                "Type": "DOMString", 
                "Name": "featureSettings"
            }, 
            {
                "Type": "FontFaceLoadStatus", 
                "Name": "status"
            }, 
            {
                "Type": "Promise", 
                "Name": "loaded"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "load", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "FontFace", 
        "FileName": "FontFace.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "CSSRuleList", 
                "Name": "cssRules"
            }
        ], 
        "Operation": [
            {
                "Type": "unsigned long", 
                "Name": "insertRule", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "rule"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteRule", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CSSGroupingRule", 
        "FileName": "CSSGroupingRule.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "CSSStyleDeclaration", 
                "Name": "style"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "CSSViewportRule", 
        "FileName": "CSSViewportRule.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "cssText"
            }, 
            {
                "Type": "CSSRule", 
                "Name": "parentRule"
            }, 
            {
                "Type": "CSSStyleSheet", 
                "Name": "parentStyleSheet"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "STYLE_RULE", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CHARSET_RULE", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "IMPORT_RULE", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MEDIA_RULE", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "FONT_FACE_RULE", 
                "Value": "5"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PAGE_RULE", 
                "Value": "6"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "KEYFRAMES_RULE", 
                "Value": "7"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "KEYFRAME_RULE", 
                "Value": "8"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SUPPORTS_RULE", 
                "Value": "12"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "VIEWPORT_RULE", 
                "Value": "15"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "WEBKIT_KEYFRAMES_RULE", 
                "Value": "7"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "WEBKIT_KEYFRAME_RULE", 
                "Value": "8"
            }
        ], 
        "Name": "CSSRule", 
        "FileName": "CSSRule.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "supports", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "property"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "supports", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "conditionText"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "escape", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "ident"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CSS", 
        "FileName": "CSS.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "StyleSheet", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "CSSStyleSheet", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "StyleSheetList", 
        "FileName": "StyleSheetList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "a"
            }, 
            {
                "Type": "double", 
                "Name": "b"
            }, 
            {
                "Type": "double", 
                "Name": "c"
            }, 
            {
                "Type": "double", 
                "Name": "d"
            }, 
            {
                "Type": "double", 
                "Name": "e"
            }, 
            {
                "Type": "double", 
                "Name": "f"
            }, 
            {
                "Type": "double", 
                "Name": "m11"
            }, 
            {
                "Type": "double", 
                "Name": "m12"
            }, 
            {
                "Type": "double", 
                "Name": "m13"
            }, 
            {
                "Type": "double", 
                "Name": "m14"
            }, 
            {
                "Type": "double", 
                "Name": "m21"
            }, 
            {
                "Type": "double", 
                "Name": "m22"
            }, 
            {
                "Type": "double", 
                "Name": "m23"
            }, 
            {
                "Type": "double", 
                "Name": "m24"
            }, 
            {
                "Type": "double", 
                "Name": "m31"
            }, 
            {
                "Type": "double", 
                "Name": "m32"
            }, 
            {
                "Type": "double", 
                "Name": "m33"
            }, 
            {
                "Type": "double", 
                "Name": "m34"
            }, 
            {
                "Type": "double", 
                "Name": "m41"
            }, 
            {
                "Type": "double", 
                "Name": "m42"
            }, 
            {
                "Type": "double", 
                "Name": "m43"
            }, 
            {
                "Type": "double", 
                "Name": "m44"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setMatrixValue", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "string"
                    }
                ]
            }, 
            {
                "Type": "WebKitCSSMatrix", 
                "Name": "multiply", 
                "Argument": [
                    {
                        "Type": "WebKitCSSMatrix", 
                        "Name": "secondMatrix"
                    }
                ]
            }, 
            {
                "Type": "WebKitCSSMatrix", 
                "Name": "inverse", 
                "Argument": []
            }, 
            {
                "Type": "WebKitCSSMatrix", 
                "Name": "translate", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "z"
                    }
                ]
            }, 
            {
                "Type": "WebKitCSSMatrix", 
                "Name": "scale", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "scaleX"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "scaleY"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "scaleZ"
                    }
                ]
            }, 
            {
                "Type": "WebKitCSSMatrix", 
                "Name": "rotate", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "rotX"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "rotY"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "rotZ"
                    }
                ]
            }, 
            {
                "Type": "WebKitCSSMatrix", 
                "Name": "rotateAxisAngle", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "z"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "angle"
                    }
                ]
            }, 
            {
                "Type": "WebKitCSSMatrix", 
                "Name": "skewX", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "angle"
                    }
                ]
            }, 
            {
                "Type": "WebKitCSSMatrix", 
                "Name": "skewY", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "angle"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "WebKitCSSMatrix", 
        "FileName": "WebKitCSSMatrix.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MediaList", 
                "Name": "media"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "CSSMediaRule", 
        "FileName": "CSSMediaRule.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "CSSRule", 
                "Name": "ownerRule"
            }, 
            {
                "Type": "CSSRuleList", 
                "Name": "cssRules"
            }, 
            {
                "Type": "CSSRuleList", 
                "Name": "rules"
            }
        ], 
        "Operation": [
            {
                "Type": "unsigned long", 
                "Name": "insertRule", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "rule"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteRule", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "addRule", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "selector"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "style"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeRule", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CSSStyleSheet", 
        "FileName": "CSSStyleSheet.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "selectorText"
            }, 
            {
                "Type": "CSSStyleDeclaration", 
                "Name": "style"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "CSSPageRule", 
        "FileName": "CSSPageRule.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "media"
            }, 
            {
                "Type": "boolean", 
                "Name": "matches"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MediaQueryListEvent", 
        "FileName": "MediaQueryListEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "size"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onloading"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onloadingdone"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onloadingerror"
            }, 
            {
                "Type": "Promise", 
                "Name": "ready"
            }, 
            {
                "Type": "FontFaceSetLoadStatus", 
                "Name": "status"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "forEach", 
                "Argument": [
                    {
                        "Type": "FontFaceSetForEachCallback", 
                        "Name": "callback"
                    }, 
                    {
                        "Type": null, 
                        "Name": "thisArg"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "has", 
                "Argument": [
                    {
                        "Type": "FontFace", 
                        "Name": "fontFace"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "add", 
                "Argument": [
                    {
                        "Type": "FontFace", 
                        "Name": "fontFace"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "delete", 
                "Argument": [
                    {
                        "Type": "FontFace", 
                        "Name": "fontFace"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clear", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "load", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "font"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "text"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "check", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "font"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "text"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "FontFaceSet", 
        "FileName": "FontFaceSet.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "FontFaceSet", 
                "Name": "fonts"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Document", 
        "FileName": "DocumentFontFaceSet.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "CSSStyleDeclaration", 
                "Name": "style"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "CSSFontFaceRule", 
        "FileName": "CSSFontFaceRule.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "mediaText"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "appendMedium", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "medium"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteMedium", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "medium"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "MediaList", 
        "FileName": "MediaList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "keyText"
            }, 
            {
                "Type": "CSSStyleDeclaration", 
                "Name": "style"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "CSSKeyframeRule", 
        "FileName": "CSSKeyframeRule.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": null, 
                "Name": "fontfaces"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "FontFaceSetLoadEvent", 
        "FileName": "FontFaceSetLoadEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "type"
            }
        ], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "matchMedium", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "mediaquery"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "StyleMedia", 
        "FileName": "StyleMedia.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "CSSRuleList", 
                "Name": "cssRules"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "appendRule", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "rule"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteRule", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "select"
                    }
                ]
            }, 
            {
                "Type": "CSSKeyframeRule", 
                "Name": "findRule", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "select"
                    }
                ]
            }, 
            {
                "Type": "CSSKeyframeRule", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CSSKeyframesRule", 
        "FileName": "CSSKeyframesRule.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "conditionText"
            }, 
            {
                "Type": "CSSRuleList", 
                "Name": "cssRules"
            }
        ], 
        "Operation": [
            {
                "Type": "unsigned long", 
                "Name": "insertRule", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "rule"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteRule", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CSSSupportsRule", 
        "FileName": "CSSSupportsRule.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "href"
            }, 
            {
                "Type": "Node", 
                "Name": "ownerNode"
            }, 
            {
                "Type": "StyleSheet", 
                "Name": "parentStyleSheet"
            }, 
            {
                "Type": "DOMString", 
                "Name": "title"
            }, 
            {
                "Type": "MediaList", 
                "Name": "media"
            }, 
            {
                "Type": "boolean", 
                "Name": "disabled"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "StyleSheet", 
        "FileName": "StyleSheet.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "CSSRule", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CSSRuleList", 
        "FileName": "CSSRuleList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "selectorText"
            }, 
            {
                "Type": "CSSStyleDeclaration", 
                "Name": "style"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "CSSStyleRule", 
        "FileName": "CSSStyleRule.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "code"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "systemCode"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "MEDIA_KEYERR_UNKNOWN", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MEDIA_KEYERR_CLIENT", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MEDIA_KEYERR_SERVICE", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MEDIA_KEYERR_OUTPUT", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MEDIA_KEYERR_HARDWARECHANGE", 
                "Value": "5"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MEDIA_KEYERR_DOMAIN", 
                "Value": "6"
            }
        ], 
        "Name": "MediaKeyError", 
        "FileName": "MediaKeyError.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "value"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "valueType"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLParamElement", 
        "FileName": "HTMLParamElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "value"
            }, 
            {
                "Type": "double", 
                "Name": "max"
            }, 
            {
                "Type": "double", 
                "Name": "position"
            }, 
            {
                "Type": "NodeList", 
                "Name": "labels"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLProgressElement", 
        "FileName": "HTMLProgressElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "acceptCharset"
            }, 
            {
                "Type": "DOMString", 
                "Name": "action"
            }, 
            {
                "Type": "DOMString", 
                "Name": "autocomplete"
            }, 
            {
                "Type": "DOMString", 
                "Name": "enctype"
            }, 
            {
                "Type": "DOMString", 
                "Name": "encoding"
            }, 
            {
                "Type": "DOMString", 
                "Name": "method"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "boolean", 
                "Name": "noValidate"
            }, 
            {
                "Type": "DOMString", 
                "Name": "target"
            }, 
            {
                "Type": "HTMLFormControlsCollection", 
                "Name": "elements"
            }, 
            {
                "Type": "long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "Element", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "submit", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "reset", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "checkValidity", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "reportValidity", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "requestAutocomplete", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "HTMLFormElement", 
        "FileName": "HTMLFormElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "src"
            }, 
            {
                "Type": "DOMString", 
                "Name": "srcdoc"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMSettableTokenList", 
                "Name": "sandbox"
            }, 
            {
                "Type": "boolean", 
                "Name": "allowFullscreen"
            }, 
            {
                "Type": "DOMString", 
                "Name": "width"
            }, 
            {
                "Type": "DOMString", 
                "Name": "height"
            }, 
            {
                "Type": "Document", 
                "Name": "contentDocument"
            }, 
            {
                "Type": "Window", 
                "Name": "contentWindow"
            }, 
            {
                "Type": "DOMString", 
                "Name": "align"
            }, 
            {
                "Type": "DOMString", 
                "Name": "scrolling"
            }, 
            {
                "Type": "DOMString", 
                "Name": "frameBorder"
            }, 
            {
                "Type": "DOMString", 
                "Name": "longDesc"
            }, 
            {
                "Type": "DOMString", 
                "Name": "marginHeight"
            }, 
            {
                "Type": "DOMString", 
                "Name": "marginWidth"
            }
        ], 
        "Operation": [
            {
                "Type": "Document", 
                "Name": "getSVGDocument", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "HTMLIFrameElement", 
        "FileName": "HTMLIFrameElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "data"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "useMap"
            }, 
            {
                "Type": "HTMLFormElement", 
                "Name": "form"
            }, 
            {
                "Type": "DOMString", 
                "Name": "width"
            }, 
            {
                "Type": "DOMString", 
                "Name": "height"
            }, 
            {
                "Type": "Document", 
                "Name": "contentDocument"
            }, 
            {
                "Type": "boolean", 
                "Name": "willValidate"
            }, 
            {
                "Type": "ValidityState", 
                "Name": "validity"
            }, 
            {
                "Type": "DOMString", 
                "Name": "validationMessage"
            }, 
            {
                "Type": "DOMString", 
                "Name": "align"
            }, 
            {
                "Type": "DOMString", 
                "Name": "archive"
            }, 
            {
                "Type": "DOMString", 
                "Name": "code"
            }, 
            {
                "Type": "boolean", 
                "Name": "declare"
            }, 
            {
                "Type": "long", 
                "Name": "hspace"
            }, 
            {
                "Type": "DOMString", 
                "Name": "standby"
            }, 
            {
                "Type": "long", 
                "Name": "vspace"
            }, 
            {
                "Type": "DOMString", 
                "Name": "codeBase"
            }, 
            {
                "Type": "DOMString", 
                "Name": "codeType"
            }, 
            {
                "Type": "DOMString", 
                "Name": "border"
            }
        ], 
        "Operation": [
            {
                "Type": "Document", 
                "Name": "getSVGDocument", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "checkValidity", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "reportValidity", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setCustomValidity", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "error"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "value"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLObjectElement", 
        "FileName": "HTMLObjectElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "disabled"
            }, 
            {
                "Type": "DOMString", 
                "Name": "href"
            }, 
            {
                "Type": "DOMString", 
                "Name": "crossOrigin"
            }, 
            {
                "Type": "DOMString", 
                "Name": "rel"
            }, 
            {
                "Type": "DOMString", 
                "Name": "media"
            }, 
            {
                "Type": "DOMString", 
                "Name": "hreflang"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMSettableTokenList", 
                "Name": "sizes"
            }, 
            {
                "Type": "DOMString", 
                "Name": "charset"
            }, 
            {
                "Type": "DOMString", 
                "Name": "rev"
            }, 
            {
                "Type": "DOMString", 
                "Name": "target"
            }, 
            {
                "Type": "StyleSheet", 
                "Name": "sheet"
            }, 
            {
                "Type": "Document", 
                "Name": "import"
            }, 
            {
                "Type": "DOMString", 
                "Name": "integrity"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLLinkElement", 
        "FileName": "HTMLLinkElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "open"
            }, 
            {
                "Type": "DOMString", 
                "Name": "returnValue"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "show", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "showModal", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "returnValue"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLDialogElement", 
        "FileName": "HTMLDialogElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "disabled"
            }, 
            {
                "Type": "HTMLFormElement", 
                "Name": "form"
            }, 
            {
                "Type": "DOMString", 
                "Name": "label"
            }, 
            {
                "Type": "boolean", 
                "Name": "defaultSelected"
            }, 
            {
                "Type": "boolean", 
                "Name": "selected"
            }, 
            {
                "Type": "DOMString", 
                "Name": "value"
            }, 
            {
                "Type": "DOMString", 
                "Name": "text"
            }, 
            {
                "Type": "long", 
                "Name": "index"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLOptionElement", 
        "FileName": "HTMLOptionElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "disabled"
            }, 
            {
                "Type": "DOMString", 
                "Name": "label"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLOptGroupElement", 
        "FileName": "HTMLOptGroupElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "cite"
            }, 
            {
                "Type": "DOMString", 
                "Name": "dateTime"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLModElement", 
        "FileName": "HTMLModElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLUnknownElement", 
        "FileName": "HTMLUnknownElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "scrolling"
            }, 
            {
                "Type": "DOMString", 
                "Name": "src"
            }, 
            {
                "Type": "DOMString", 
                "Name": "frameBorder"
            }, 
            {
                "Type": "DOMString", 
                "Name": "longDesc"
            }, 
            {
                "Type": "boolean", 
                "Name": "noResize"
            }, 
            {
                "Type": "Document", 
                "Name": "contentDocument"
            }, 
            {
                "Type": "Window", 
                "Name": "contentWindow"
            }, 
            {
                "Type": "DOMString", 
                "Name": "marginHeight"
            }, 
            {
                "Type": "DOMString", 
                "Name": "marginWidth"
            }
        ], 
        "Operation": [
            {
                "Type": "Document", 
                "Name": "getSVGDocument", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "HTMLFrameElement", 
        "FileName": "HTMLFrameElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "title"
            }, 
            {
                "Type": "DOMString", 
                "Name": "lang"
            }, 
            {
                "Type": "boolean", 
                "Name": "translate"
            }, 
            {
                "Type": "DOMString", 
                "Name": "dir"
            }, 
            {
                "Type": "DOMStringMap", 
                "Name": "dataset"
            }, 
            {
                "Type": "boolean", 
                "Name": "hidden"
            }, 
            {
                "Type": "long", 
                "Name": "tabIndex"
            }, 
            {
                "Type": "DOMString", 
                "Name": "accessKey"
            }, 
            {
                "Type": "boolean", 
                "Name": "draggable"
            }, 
            {
                "Type": "HTMLMenuElement", 
                "Name": "contextMenu"
            }, 
            {
                "Type": "boolean", 
                "Name": "spellcheck"
            }, 
            {
                "Type": "DOMString", 
                "Name": "contentEditable"
            }, 
            {
                "Type": "boolean", 
                "Name": "isContentEditable"
            }, 
            {
                "Type": "Element", 
                "Name": "offsetParent"
            }, 
            {
                "Type": "long", 
                "Name": "offsetTop"
            }, 
            {
                "Type": "long", 
                "Name": "offsetLeft"
            }, 
            {
                "Type": "long", 
                "Name": "offsetWidth"
            }, 
            {
                "Type": "long", 
                "Name": "offsetHeight"
            }, 
            {
                "Type": "CSSStyleDeclaration", 
                "Name": "style"
            }, 
            {
                "Type": "DOMString", 
                "Name": "innerText"
            }, 
            {
                "Type": "DOMString", 
                "Name": "outerText"
            }, 
            {
                "Type": "DOMString", 
                "Name": "webkitdropzone"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "click", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "focus", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "blur", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "HTMLElement", 
        "FileName": "HTMLElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "kind"
            }, 
            {
                "Type": "DOMString", 
                "Name": "src"
            }, 
            {
                "Type": "DOMString", 
                "Name": "srclang"
            }, 
            {
                "Type": "DOMString", 
                "Name": "label"
            }, 
            {
                "Type": "boolean", 
                "Name": "default"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "readyState"
            }, 
            {
                "Type": "TextTrack", 
                "Name": "track"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "NONE", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "LOADING", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "LOADED", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "ERROR", 
                "Value": "3"
            }
        ], 
        "Name": "HTMLTrackElement", 
        "FileName": "HTMLTrackElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "autofocus"
            }, 
            {
                "Type": "boolean", 
                "Name": "disabled"
            }, 
            {
                "Type": "HTMLFormElement", 
                "Name": "form"
            }, 
            {
                "Type": "boolean", 
                "Name": "multiple"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "boolean", 
                "Name": "required"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "size"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "HTMLOptionsCollection", 
                "Name": "options"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "selectedOptions"
            }, 
            {
                "Type": "long", 
                "Name": "selectedIndex"
            }, 
            {
                "Type": "DOMString", 
                "Name": "value"
            }, 
            {
                "Type": "boolean", 
                "Name": "willValidate"
            }, 
            {
                "Type": "ValidityState", 
                "Name": "validity"
            }, 
            {
                "Type": "DOMString", 
                "Name": "validationMessage"
            }, 
            {
                "Type": "NodeList", 
                "Name": "labels"
            }
        ], 
        "Operation": [
            {
                "Type": "Element", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "HTMLOptionElement", 
                "Name": "namedItem", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "add", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "element"
                    }, 
                    {
                        "Type": null, 
                        "Name": "before"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "remove", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "remove", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "HTMLOptionElement", 
                        "Name": "option"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "checkValidity", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "reportValidity", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setCustomValidity", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "error"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLSelectElement", 
        "FileName": "HTMLSelectElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "VoidCallback", 
        "FileName": "VoidCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "src"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "charset"
            }, 
            {
                "Type": "boolean", 
                "Name": "async"
            }, 
            {
                "Type": "boolean", 
                "Name": "defer"
            }, 
            {
                "Type": "DOMString", 
                "Name": "crossOrigin"
            }, 
            {
                "Type": "DOMString", 
                "Name": "text"
            }, 
            {
                "Type": "DOMString", 
                "Name": "event"
            }, 
            {
                "Type": "DOMString", 
                "Name": "htmlFor"
            }, 
            {
                "Type": "DOMString", 
                "Name": "nonce"
            }, 
            {
                "Type": "DOMString", 
                "Name": "integrity"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLScriptElement", 
        "FileName": "HTMLScriptElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "href"
            }, 
            {
                "Type": "DOMString", 
                "Name": "target"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLBaseElement", 
        "FileName": "HTMLBaseElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "disabled"
            }, 
            {
                "Type": "DOMString", 
                "Name": "media"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "StyleSheet", 
                "Name": "sheet"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLStyleElement", 
        "FileName": "HTMLStyleElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "Element", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "Element", 
                "Name": "item", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLAllCollection", 
        "FileName": "HTMLAllCollection.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "httpEquiv"
            }, 
            {
                "Type": "DOMString", 
                "Name": "content"
            }, 
            {
                "Type": "DOMString", 
                "Name": "scheme"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLMetaElement", 
        "FileName": "HTMLMetaElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "rowIndex"
            }, 
            {
                "Type": "long", 
                "Name": "sectionRowIndex"
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "cells"
            }, 
            {
                "Type": "DOMString", 
                "Name": "align"
            }, 
            {
                "Type": "DOMString", 
                "Name": "ch"
            }, 
            {
                "Type": "DOMString", 
                "Name": "chOff"
            }, 
            {
                "Type": "DOMString", 
                "Name": "vAlign"
            }, 
            {
                "Type": "DOMString", 
                "Name": "bgColor"
            }
        ], 
        "Operation": [
            {
                "Type": "HTMLElement", 
                "Name": "insertCell", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteCell", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLTableRowElement", 
        "FileName": "HTMLTableRowElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "NodeList", 
                "Name": "getDistributedNodes", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "HTMLShadowElement", 
        "FileName": "HTMLShadowElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "disabled"
            }, 
            {
                "Type": "HTMLFormElement", 
                "Name": "form"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "HTMLFormControlsCollection", 
                "Name": "elements"
            }, 
            {
                "Type": "boolean", 
                "Name": "willValidate"
            }, 
            {
                "Type": "ValidityState", 
                "Name": "validity"
            }, 
            {
                "Type": "DOMString", 
                "Name": "validationMessage"
            }
        ], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "checkValidity", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "reportValidity", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setCustomValidity", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "error"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLFieldSetElement", 
        "FileName": "HTMLFieldSetElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "label"
            }, 
            {
                "Type": "DOMString", 
                "Name": "icon"
            }, 
            {
                "Type": "boolean", 
                "Name": "disabled"
            }, 
            {
                "Type": "boolean", 
                "Name": "checked"
            }, 
            {
                "Type": "DOMString", 
                "Name": "radiogroup"
            }, 
            {
                "Type": "boolean", 
                "Name": "default"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLMenuItemElement", 
        "FileName": "HTMLMenuItemElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "HTMLFormElement", 
                "Name": "form"
            }, 
            {
                "Type": "DOMString", 
                "Name": "htmlFor"
            }, 
            {
                "Type": "HTMLElement", 
                "Name": "control"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLLabelElement", 
        "FileName": "HTMLLabelElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "HTMLFormElement", 
                "Name": "form"
            }, 
            {
                "Type": "DOMString", 
                "Name": "align"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLLegendElement", 
        "FileName": "HTMLLegendElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "cite"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLQuoteElement", 
        "FileName": "HTMLQuoteElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DocumentFragment", 
                "Name": "content"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLTemplateElement", 
        "FileName": "HTMLTemplateElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "clear"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLBRElement", 
        "FileName": "HTMLBRElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "open"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLDetailsElement", 
        "FileName": "HTMLDetailsElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "align"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLTableCaptionElement", 
        "FileName": "HTMLTableCaptionElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "text"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLTitleElement", 
        "FileName": "HTMLTitleElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MediaError", 
                "Name": "error"
            }, 
            {
                "Type": "DOMString", 
                "Name": "src"
            }, 
            {
                "Type": "DOMString", 
                "Name": "currentSrc"
            }, 
            {
                "Type": "DOMString", 
                "Name": "crossOrigin"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "networkState"
            }, 
            {
                "Type": "DOMString", 
                "Name": "preload"
            }, 
            {
                "Type": "TimeRanges", 
                "Name": "buffered"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "readyState"
            }, 
            {
                "Type": "boolean", 
                "Name": "seeking"
            }, 
            {
                "Type": "double", 
                "Name": "currentTime"
            }, 
            {
                "Type": "double", 
                "Name": "duration"
            }, 
            {
                "Type": "boolean", 
                "Name": "paused"
            }, 
            {
                "Type": "double", 
                "Name": "defaultPlaybackRate"
            }, 
            {
                "Type": "double", 
                "Name": "playbackRate"
            }, 
            {
                "Type": "TimeRanges", 
                "Name": "played"
            }, 
            {
                "Type": "TimeRanges", 
                "Name": "seekable"
            }, 
            {
                "Type": "boolean", 
                "Name": "ended"
            }, 
            {
                "Type": "boolean", 
                "Name": "autoplay"
            }, 
            {
                "Type": "boolean", 
                "Name": "loop"
            }, 
            {
                "Type": "DOMString", 
                "Name": "mediaGroup"
            }, 
            {
                "Type": "MediaController", 
                "Name": "controller"
            }, 
            {
                "Type": "boolean", 
                "Name": "controls"
            }, 
            {
                "Type": "double", 
                "Name": "volume"
            }, 
            {
                "Type": "boolean", 
                "Name": "muted"
            }, 
            {
                "Type": "boolean", 
                "Name": "defaultMuted"
            }, 
            {
                "Type": "AudioTrackList", 
                "Name": "audioTracks"
            }, 
            {
                "Type": "VideoTrackList", 
                "Name": "videoTracks"
            }, 
            {
                "Type": "TextTrackList", 
                "Name": "textTracks"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "webkitAudioDecodedByteCount"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "webkitVideoDecodedByteCount"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "load", 
                "Argument": []
            }, 
            {
                "Type": "CanPlayTypeResult", 
                "Name": "canPlayType", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "play", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "pause", 
                "Argument": []
            }, 
            {
                "Type": "TextTrack", 
                "Name": "addTextTrack", 
                "Argument": [
                    {
                        "Type": "TextTrackKind", 
                        "Name": "kind"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "label"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "language"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "canPlayType", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "keySystem"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "NETWORK_EMPTY", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "NETWORK_IDLE", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "NETWORK_LOADING", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "NETWORK_NO_SOURCE", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "HAVE_NOTHING", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "HAVE_METADATA", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "HAVE_CURRENT_DATA", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "HAVE_FUTURE_DATA", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "HAVE_ENOUGH_DATA", 
                "Value": "4"
            }
        ], 
        "Name": "HTMLMediaElement", 
        "FileName": "HTMLMediaElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "alt"
            }, 
            {
                "Type": "DOMString", 
                "Name": "src"
            }, 
            {
                "Type": "DOMString", 
                "Name": "srcset"
            }, 
            {
                "Type": "DOMString", 
                "Name": "sizes"
            }, 
            {
                "Type": "DOMString", 
                "Name": "crossOrigin"
            }, 
            {
                "Type": "DOMString", 
                "Name": "useMap"
            }, 
            {
                "Type": "boolean", 
                "Name": "isMap"
            }, 
            {
                "Type": "long", 
                "Name": "width"
            }, 
            {
                "Type": "long", 
                "Name": "height"
            }, 
            {
                "Type": "long", 
                "Name": "naturalWidth"
            }, 
            {
                "Type": "long", 
                "Name": "naturalHeight"
            }, 
            {
                "Type": "boolean", 
                "Name": "complete"
            }, 
            {
                "Type": "DOMString", 
                "Name": "currentSrc"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "lowsrc"
            }, 
            {
                "Type": "DOMString", 
                "Name": "align"
            }, 
            {
                "Type": "long", 
                "Name": "hspace"
            }, 
            {
                "Type": "long", 
                "Name": "vspace"
            }, 
            {
                "Type": "DOMString", 
                "Name": "longDesc"
            }, 
            {
                "Type": "DOMString", 
                "Name": "border"
            }, 
            {
                "Type": "long", 
                "Name": "x"
            }, 
            {
                "Type": "long", 
                "Name": "y"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLImageElement", 
        "FileName": "HTMLImageElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "value"
            }
        ], 
        "Operation": [
            {
                "Type": "Node", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "RadioNodeList", 
        "FileName": "RadioNodeList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "fgColor"
            }, 
            {
                "Type": "DOMString", 
                "Name": "linkColor"
            }, 
            {
                "Type": "DOMString", 
                "Name": "vlinkColor"
            }, 
            {
                "Type": "DOMString", 
                "Name": "alinkColor"
            }, 
            {
                "Type": "DOMString", 
                "Name": "bgColor"
            }, 
            {
                "Type": "HTMLAllCollection", 
                "Name": "all"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "clear", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "captureEvents", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "releaseEvents", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "HTMLDocument", 
        "FileName": "HTMLDocument.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLHeadElement", 
        "FileName": "HTMLHeadElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "value"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLLIElement", 
        "FileName": "HTMLLIElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "accept"
            }, 
            {
                "Type": "DOMString", 
                "Name": "alt"
            }, 
            {
                "Type": "DOMString", 
                "Name": "autocomplete"
            }, 
            {
                "Type": "boolean", 
                "Name": "autofocus"
            }, 
            {
                "Type": "boolean", 
                "Name": "defaultChecked"
            }, 
            {
                "Type": "boolean", 
                "Name": "checked"
            }, 
            {
                "Type": "DOMString", 
                "Name": "dirName"
            }, 
            {
                "Type": "boolean", 
                "Name": "disabled"
            }, 
            {
                "Type": "HTMLFormElement", 
                "Name": "form"
            }, 
            {
                "Type": "FileList", 
                "Name": "files"
            }, 
            {
                "Type": "DOMString", 
                "Name": "formAction"
            }, 
            {
                "Type": "DOMString", 
                "Name": "formEnctype"
            }, 
            {
                "Type": "DOMString", 
                "Name": "formMethod"
            }, 
            {
                "Type": "boolean", 
                "Name": "formNoValidate"
            }, 
            {
                "Type": "DOMString", 
                "Name": "formTarget"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "height"
            }, 
            {
                "Type": "boolean", 
                "Name": "indeterminate"
            }, 
            {
                "Type": "DOMString", 
                "Name": "inputMode"
            }, 
            {
                "Type": "HTMLElement", 
                "Name": "list"
            }, 
            {
                "Type": "DOMString", 
                "Name": "max"
            }, 
            {
                "Type": "long", 
                "Name": "maxLength"
            }, 
            {
                "Type": "DOMString", 
                "Name": "min"
            }, 
            {
                "Type": "long", 
                "Name": "minLength"
            }, 
            {
                "Type": "boolean", 
                "Name": "multiple"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "pattern"
            }, 
            {
                "Type": "DOMString", 
                "Name": "placeholder"
            }, 
            {
                "Type": "boolean", 
                "Name": "readOnly"
            }, 
            {
                "Type": "boolean", 
                "Name": "required"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "size"
            }, 
            {
                "Type": "DOMString", 
                "Name": "src"
            }, 
            {
                "Type": "DOMString", 
                "Name": "step"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "defaultValue"
            }, 
            {
                "Type": "DOMString", 
                "Name": "value"
            }, 
            {
                "Type": "Date", 
                "Name": "valueAsDate"
            }, 
            {
                "Type": "double", 
                "Name": "valueAsNumber"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "width"
            }, 
            {
                "Type": "boolean", 
                "Name": "willValidate"
            }, 
            {
                "Type": "ValidityState", 
                "Name": "validity"
            }, 
            {
                "Type": "DOMString", 
                "Name": "validationMessage"
            }, 
            {
                "Type": "NodeList", 
                "Name": "labels"
            }, 
            {
                "Type": "long", 
                "Name": "selectionStart"
            }, 
            {
                "Type": "long", 
                "Name": "selectionEnd"
            }, 
            {
                "Type": "DOMString", 
                "Name": "selectionDirection"
            }, 
            {
                "Type": "DOMString", 
                "Name": "align"
            }, 
            {
                "Type": "DOMString", 
                "Name": "useMap"
            }, 
            {
                "Type": "DOMString", 
                "Name": "autocapitalize"
            }, 
            {
                "Type": "boolean", 
                "Name": "capture"
            }, 
            {
                "Type": "boolean", 
                "Name": "webkitdirectory"
            }, 
            {
                "Type": "boolean", 
                "Name": "incremental"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "stepUp", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "n"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "stepDown", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "n"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "checkValidity", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "reportValidity", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setCustomValidity", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "error"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "select", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setRangeText", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "replacement"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setRangeText", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "replacement"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "start"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "end"
                    }, 
                    {
                        "Type": "SelectionMode", 
                        "Name": "selectionMode"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setSelectionRange", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "start"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "end"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "direction"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLInputElement", 
        "FileName": "HTMLInputElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "TimeRanges", 
                "Name": "buffered"
            }, 
            {
                "Type": "TimeRanges", 
                "Name": "seekable"
            }, 
            {
                "Type": "double", 
                "Name": "duration"
            }, 
            {
                "Type": "double", 
                "Name": "currentTime"
            }, 
            {
                "Type": "boolean", 
                "Name": "paused"
            }, 
            {
                "Type": "MediaControllerPlaybackState", 
                "Name": "playbackState"
            }, 
            {
                "Type": "TimeRanges", 
                "Name": "played"
            }, 
            {
                "Type": "double", 
                "Name": "defaultPlaybackRate"
            }, 
            {
                "Type": "double", 
                "Name": "playbackRate"
            }, 
            {
                "Type": "double", 
                "Name": "volume"
            }, 
            {
                "Type": "boolean", 
                "Name": "muted"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "pause", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "unpause", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "play", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "MediaController", 
        "FileName": "MediaController.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "areas"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLMapElement", 
        "FileName": "HTMLMapElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "long", 
                "Name": "selectedIndex"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "HTMLOptionElement", 
                        "Name": "option"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "add", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "element"
                    }, 
                    {
                        "Type": null, 
                        "Name": "before"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "remove", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLOptionsCollection", 
        "FileName": "HTMLOptionsCollection.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "width"
            }, 
            {
                "Type": "long", 
                "Name": "height"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ImageData", 
        "FileName": "ImageData.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "width"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLPreElement", 
        "FileName": "HTMLPreElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "cols"
            }, 
            {
                "Type": "DOMString", 
                "Name": "rows"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onblur"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onfocus"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onload"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onresize"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onscroll"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onorientationchange"
            }
        ], 
        "Operation": [
            {
                "Type": "Window", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLFrameSetElement", 
        "FileName": "HTMLFrameSetElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "compact"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLUListElement", 
        "FileName": "HTMLUListElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "autofocus"
            }, 
            {
                "Type": "boolean", 
                "Name": "disabled"
            }, 
            {
                "Type": "HTMLFormElement", 
                "Name": "form"
            }, 
            {
                "Type": "DOMString", 
                "Name": "formAction"
            }, 
            {
                "Type": "DOMString", 
                "Name": "formEnctype"
            }, 
            {
                "Type": "DOMString", 
                "Name": "formMethod"
            }, 
            {
                "Type": "boolean", 
                "Name": "formNoValidate"
            }, 
            {
                "Type": "DOMString", 
                "Name": "formTarget"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "value"
            }, 
            {
                "Type": "boolean", 
                "Name": "willValidate"
            }, 
            {
                "Type": "ValidityState", 
                "Name": "validity"
            }, 
            {
                "Type": "DOMString", 
                "Name": "validationMessage"
            }, 
            {
                "Type": "NodeList", 
                "Name": "labels"
            }
        ], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "checkValidity", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "reportValidity", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setCustomValidity", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "error"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLButtonElement", 
        "FileName": "HTMLButtonElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "target"
            }, 
            {
                "Type": "DOMString", 
                "Name": "download"
            }, 
            {
                "Type": "DOMString", 
                "Name": "ping"
            }, 
            {
                "Type": "DOMString", 
                "Name": "rel"
            }, 
            {
                "Type": "DOMString", 
                "Name": "hreflang"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "referrerpolicy"
            }, 
            {
                "Type": "DOMString", 
                "Name": "text"
            }, 
            {
                "Type": "DOMString", 
                "Name": "coords"
            }, 
            {
                "Type": "DOMString", 
                "Name": "charset"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "rev"
            }, 
            {
                "Type": "DOMString", 
                "Name": "shape"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLAnchorElement", 
        "FileName": "HTMLAnchorElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLSpanElement", 
        "FileName": "HTMLSpanElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "Element", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "Element", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLCollection", 
        "FileName": "HTMLCollection.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "width"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "height"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "videoWidth"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "videoHeight"
            }, 
            {
                "Type": "DOMString", 
                "Name": "poster"
            }, 
            {
                "Type": "boolean", 
                "Name": "webkitSupportsFullscreen"
            }, 
            {
                "Type": "boolean", 
                "Name": "webkitDisplayingFullscreen"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "webkitDecodedFrameCount"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "webkitDroppedFrameCount"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "webkitEnterFullscreen", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "webkitExitFullscreen", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "webkitEnterFullScreen", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "webkitExitFullScreen", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "HTMLVideoElement", 
        "FileName": "HTMLVideoElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "width"
            }, 
            {
                "Type": "long", 
                "Name": "height"
            }
        ], 
        "Operation": [
            {
                "Type": null, 
                "Name": "getContext", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "contextId"
                    }, 
                    {
                        "Type": "CanvasContextCreationAttributes", 
                        "Name": "attributes"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "toDataURL", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": null, 
                        "Name": "arguments"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLCanvasElement", 
        "FileName": "HTMLCanvasElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "src"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "width"
            }, 
            {
                "Type": "DOMString", 
                "Name": "height"
            }, 
            {
                "Type": "DOMString", 
                "Name": "align"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }
        ], 
        "Operation": [
            {
                "Type": "Document", 
                "Name": "getSVGDocument", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "value"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLEmbedElement", 
        "FileName": "HTMLEmbedElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "valueMissing"
            }, 
            {
                "Type": "boolean", 
                "Name": "typeMismatch"
            }, 
            {
                "Type": "boolean", 
                "Name": "patternMismatch"
            }, 
            {
                "Type": "boolean", 
                "Name": "tooLong"
            }, 
            {
                "Type": "boolean", 
                "Name": "tooShort"
            }, 
            {
                "Type": "boolean", 
                "Name": "rangeUnderflow"
            }, 
            {
                "Type": "boolean", 
                "Name": "rangeOverflow"
            }, 
            {
                "Type": "boolean", 
                "Name": "stepMismatch"
            }, 
            {
                "Type": "boolean", 
                "Name": "badInput"
            }, 
            {
                "Type": "boolean", 
                "Name": "customError"
            }, 
            {
                "Type": "boolean", 
                "Name": "valid"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ValidityState", 
        "FileName": "ValidityState.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "colSpan"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "rowSpan"
            }, 
            {
                "Type": "DOMString", 
                "Name": "headers"
            }, 
            {
                "Type": "long", 
                "Name": "cellIndex"
            }, 
            {
                "Type": "DOMString", 
                "Name": "align"
            }, 
            {
                "Type": "DOMString", 
                "Name": "axis"
            }, 
            {
                "Type": "DOMString", 
                "Name": "height"
            }, 
            {
                "Type": "DOMString", 
                "Name": "width"
            }, 
            {
                "Type": "DOMString", 
                "Name": "ch"
            }, 
            {
                "Type": "DOMString", 
                "Name": "chOff"
            }, 
            {
                "Type": "boolean", 
                "Name": "noWrap"
            }, 
            {
                "Type": "DOMString", 
                "Name": "vAlign"
            }, 
            {
                "Type": "DOMString", 
                "Name": "bgColor"
            }, 
            {
                "Type": "DOMString", 
                "Name": "abbr"
            }, 
            {
                "Type": "DOMString", 
                "Name": "scope"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLTableCellElement", 
        "FileName": "HTMLTableCellElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "compact"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLDListElement", 
        "FileName": "HTMLDListElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "span"
            }, 
            {
                "Type": "DOMString", 
                "Name": "align"
            }, 
            {
                "Type": "DOMString", 
                "Name": "ch"
            }, 
            {
                "Type": "DOMString", 
                "Name": "chOff"
            }, 
            {
                "Type": "DOMString", 
                "Name": "vAlign"
            }, 
            {
                "Type": "DOMString", 
                "Name": "width"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLTableColElement", 
        "FileName": "HTMLTableColElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "select"
            }
        ], 
        "Operation": [
            {
                "Type": "NodeList", 
                "Name": "getDistributedNodes", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "HTMLContentElement", 
        "FileName": "HTMLContentElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLPictureElement", 
        "FileName": "HTMLPictureElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "align"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLHeadingElement", 
        "FileName": "HTMLHeadingElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "align"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLParagraphElement", 
        "FileName": "HTMLParagraphElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "label"
            }, 
            {
                "Type": "boolean", 
                "Name": "compact"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLMenuElement", 
        "FileName": "HTMLMenuElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "align"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLDivElement", 
        "FileName": "HTMLDivElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "double", 
                "Name": "start", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "double", 
                "Name": "end", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TimeRanges", 
        "FileName": "TimeRanges.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "code"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "MEDIA_ERR_ABORTED", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MEDIA_ERR_NETWORK", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MEDIA_ERR_DECODE", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MEDIA_ERR_SRC_NOT_SUPPORTED", 
                "Value": "4"
            }
        ], 
        "Name": "MediaError", 
        "FileName": "MediaError.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "align"
            }, 
            {
                "Type": "DOMString", 
                "Name": "alt"
            }, 
            {
                "Type": "DOMString", 
                "Name": "archive"
            }, 
            {
                "Type": "DOMString", 
                "Name": "code"
            }, 
            {
                "Type": "DOMString", 
                "Name": "codeBase"
            }, 
            {
                "Type": "DOMString", 
                "Name": "height"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "hspace"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "object"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "vspace"
            }, 
            {
                "Type": "DOMString", 
                "Name": "width"
            }
        ], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "value"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLAppletElement", 
        "FileName": "HTMLAppletElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "version"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLHtmlElement", 
        "FileName": "HTMLHtmlElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "alt"
            }, 
            {
                "Type": "DOMString", 
                "Name": "coords"
            }, 
            {
                "Type": "DOMString", 
                "Name": "shape"
            }, 
            {
                "Type": "DOMString", 
                "Name": "target"
            }, 
            {
                "Type": "DOMString", 
                "Name": "ping"
            }, 
            {
                "Type": "boolean", 
                "Name": "noHref"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLAreaElement", 
        "FileName": "HTMLAreaElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "width"
            }, 
            {
                "Type": "float", 
                "Name": "actualBoundingBoxLeft"
            }, 
            {
                "Type": "float", 
                "Name": "actualBoundingBoxRight"
            }, 
            {
                "Type": "float", 
                "Name": "fontBoundingBoxAscent"
            }, 
            {
                "Type": "float", 
                "Name": "fontBoundingBoxDescent"
            }, 
            {
                "Type": "float", 
                "Name": "actualBoundingBoxAscent"
            }, 
            {
                "Type": "float", 
                "Name": "actualBoundingBoxDescent"
            }, 
            {
                "Type": "float", 
                "Name": "emHeightAscent"
            }, 
            {
                "Type": "float", 
                "Name": "emHeightDescent"
            }, 
            {
                "Type": "float", 
                "Name": "hangingBaseline"
            }, 
            {
                "Type": "float", 
                "Name": "alphabeticBaseline"
            }, 
            {
                "Type": "float", 
                "Name": "ideographicBaseline"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "TextMetrics", 
        "FileName": "TextMetrics.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": null, 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLFormControlsCollection", 
        "FileName": "HTMLFormControlsCollection.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "append", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "Blob", 
                        "Name": "value"
                    }, 
                    {
                        "Type": "USVString", 
                        "Name": "filename"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "append", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "USVString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "delete", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "FormDataEntryValue", 
                "Name": "get", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getAll", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "has", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "set", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "Blob", 
                        "Name": "value"
                    }, 
                    {
                        "Type": "USVString", 
                        "Name": "filename"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "set", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "USVString", 
                        "Name": "value"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "FormData", 
        "FileName": "FormData.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLAudioElement", 
        "FileName": "HTMLAudioElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "color"
            }, 
            {
                "Type": "DOMString", 
                "Name": "face"
            }, 
            {
                "Type": "DOMString", 
                "Name": "size"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLFontElement", 
        "FileName": "HTMLFontElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "value"
            }, 
            {
                "Type": "double", 
                "Name": "min"
            }, 
            {
                "Type": "double", 
                "Name": "max"
            }, 
            {
                "Type": "double", 
                "Name": "low"
            }, 
            {
                "Type": "double", 
                "Name": "high"
            }, 
            {
                "Type": "double", 
                "Name": "optimum"
            }, 
            {
                "Type": "NodeList", 
                "Name": "labels"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLMeterElement", 
        "FileName": "HTMLMeterElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "src"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "srcset"
            }, 
            {
                "Type": "DOMString", 
                "Name": "sizes"
            }, 
            {
                "Type": "DOMString", 
                "Name": "media"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLSourceElement", 
        "FileName": "HTMLSourceElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "HTMLTableCaptionElement", 
                "Name": "caption"
            }, 
            {
                "Type": "HTMLTableSectionElement", 
                "Name": "tHead"
            }, 
            {
                "Type": "HTMLTableSectionElement", 
                "Name": "tFoot"
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "tBodies"
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "rows"
            }, 
            {
                "Type": "DOMString", 
                "Name": "align"
            }, 
            {
                "Type": "DOMString", 
                "Name": "border"
            }, 
            {
                "Type": "DOMString", 
                "Name": "frame"
            }, 
            {
                "Type": "DOMString", 
                "Name": "rules"
            }, 
            {
                "Type": "DOMString", 
                "Name": "summary"
            }, 
            {
                "Type": "DOMString", 
                "Name": "width"
            }, 
            {
                "Type": "DOMString", 
                "Name": "bgColor"
            }, 
            {
                "Type": "DOMString", 
                "Name": "cellPadding"
            }, 
            {
                "Type": "DOMString", 
                "Name": "cellSpacing"
            }
        ], 
        "Operation": [
            {
                "Type": "HTMLElement", 
                "Name": "createCaption", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "deleteCaption", 
                "Argument": []
            }, 
            {
                "Type": "HTMLElement", 
                "Name": "createTHead", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "deleteTHead", 
                "Argument": []
            }, 
            {
                "Type": "HTMLElement", 
                "Name": "createTFoot", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "deleteTFoot", 
                "Argument": []
            }, 
            {
                "Type": "HTMLElement", 
                "Name": "createTBody", 
                "Argument": []
            }, 
            {
                "Type": "HTMLElement", 
                "Name": "insertRow", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteRow", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLTableElement", 
        "FileName": "HTMLTableElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "align"
            }, 
            {
                "Type": "DOMString", 
                "Name": "color"
            }, 
            {
                "Type": "boolean", 
                "Name": "noShade"
            }, 
            {
                "Type": "DOMString", 
                "Name": "size"
            }, 
            {
                "Type": "DOMString", 
                "Name": "width"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLHRElement", 
        "FileName": "HTMLHRElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "keySystem"
            }, 
            {
                "Type": "DOMString", 
                "Name": "sessionId"
            }, 
            {
                "Type": "Uint8Array", 
                "Name": "initData"
            }, 
            {
                "Type": "Uint8Array", 
                "Name": "message"
            }, 
            {
                "Type": "DOMString", 
                "Name": "defaultURL"
            }, 
            {
                "Type": "MediaKeyError", 
                "Name": "errorCode"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "systemCode"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MediaKeyEvent", 
        "FileName": "MediaKeyEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "compact"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLDirectoryElement", 
        "FileName": "HTMLDirectoryElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "autofocus"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "cols"
            }, 
            {
                "Type": "DOMString", 
                "Name": "dirName"
            }, 
            {
                "Type": "boolean", 
                "Name": "disabled"
            }, 
            {
                "Type": "HTMLFormElement", 
                "Name": "form"
            }, 
            {
                "Type": "DOMString", 
                "Name": "inputMode"
            }, 
            {
                "Type": "long", 
                "Name": "maxLength"
            }, 
            {
                "Type": "long", 
                "Name": "minLength"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "placeholder"
            }, 
            {
                "Type": "boolean", 
                "Name": "readOnly"
            }, 
            {
                "Type": "boolean", 
                "Name": "required"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "rows"
            }, 
            {
                "Type": "DOMString", 
                "Name": "wrap"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "defaultValue"
            }, 
            {
                "Type": "DOMString", 
                "Name": "value"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "textLength"
            }, 
            {
                "Type": "boolean", 
                "Name": "willValidate"
            }, 
            {
                "Type": "ValidityState", 
                "Name": "validity"
            }, 
            {
                "Type": "DOMString", 
                "Name": "validationMessage"
            }, 
            {
                "Type": "NodeList", 
                "Name": "labels"
            }, 
            {
                "Type": "long", 
                "Name": "selectionStart"
            }, 
            {
                "Type": "long", 
                "Name": "selectionEnd"
            }, 
            {
                "Type": "DOMString", 
                "Name": "selectionDirection"
            }, 
            {
                "Type": "DOMString", 
                "Name": "autocapitalize"
            }
        ], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "checkValidity", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "reportValidity", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setCustomValidity", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "error"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "select", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setRangeText", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "replacement"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setRangeText", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "replacement"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "start"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "end"
                    }, 
                    {
                        "Type": "SelectionMode", 
                        "Name": "selectionMode"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setSelectionRange", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "start"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "end"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "direction"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLTextAreaElement", 
        "FileName": "HTMLTextAreaElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "HTMLCollection", 
                "Name": "rows"
            }, 
            {
                "Type": "DOMString", 
                "Name": "align"
            }, 
            {
                "Type": "DOMString", 
                "Name": "ch"
            }, 
            {
                "Type": "DOMString", 
                "Name": "chOff"
            }, 
            {
                "Type": "DOMString", 
                "Name": "vAlign"
            }
        ], 
        "Operation": [
            {
                "Type": "HTMLElement", 
                "Name": "insertRow", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteRow", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLTableSectionElement", 
        "FileName": "HTMLTableSectionElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMSettableTokenList", 
                "Name": "htmlFor"
            }, 
            {
                "Type": "HTMLFormElement", 
                "Name": "form"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "defaultValue"
            }, 
            {
                "Type": "DOMString", 
                "Name": "value"
            }, 
            {
                "Type": "boolean", 
                "Name": "willValidate"
            }, 
            {
                "Type": "ValidityState", 
                "Name": "validity"
            }, 
            {
                "Type": "DOMString", 
                "Name": "validationMessage"
            }, 
            {
                "Type": "NodeList", 
                "Name": "labels"
            }
        ], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "checkValidity", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "reportValidity", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setCustomValidity", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "error"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLOutputElement", 
        "FileName": "HTMLOutputElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "text"
            }, 
            {
                "Type": "DOMString", 
                "Name": "link"
            }, 
            {
                "Type": "DOMString", 
                "Name": "vLink"
            }, 
            {
                "Type": "DOMString", 
                "Name": "aLink"
            }, 
            {
                "Type": "DOMString", 
                "Name": "bgColor"
            }, 
            {
                "Type": "DOMString", 
                "Name": "background"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onblur"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onfocus"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onload"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onresize"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onscroll"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onorientationchange"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLBodyElement", 
        "FileName": "HTMLBodyElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "reversed"
            }, 
            {
                "Type": "long", 
                "Name": "start"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "boolean", 
                "Name": "compact"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLOListElement", 
        "FileName": "HTMLOListElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "autofocus"
            }, 
            {
                "Type": "DOMString", 
                "Name": "challenge"
            }, 
            {
                "Type": "boolean", 
                "Name": "disabled"
            }, 
            {
                "Type": "HTMLFormElement", 
                "Name": "form"
            }, 
            {
                "Type": "DOMString", 
                "Name": "keytype"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "boolean", 
                "Name": "willValidate"
            }, 
            {
                "Type": "ValidityState", 
                "Name": "validity"
            }, 
            {
                "Type": "DOMString", 
                "Name": "validationMessage"
            }, 
            {
                "Type": "NodeList", 
                "Name": "labels"
            }
        ], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "checkValidity", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "reportValidity", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setCustomValidity", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "error"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLKeygenElement", 
        "FileName": "HTMLKeygenElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "HTMLCollection", 
                "Name": "options"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLDataListElement", 
        "FileName": "HTMLDataListElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "behavior"
            }, 
            {
                "Type": "DOMString", 
                "Name": "bgColor"
            }, 
            {
                "Type": "DOMString", 
                "Name": "direction"
            }, 
            {
                "Type": "DOMString", 
                "Name": "height"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "hspace"
            }, 
            {
                "Type": "long", 
                "Name": "loop"
            }, 
            {
                "Type": "long", 
                "Name": "scrollAmount"
            }, 
            {
                "Type": "long", 
                "Name": "scrollDelay"
            }, 
            {
                "Type": "boolean", 
                "Name": "trueSpeed"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "vspace"
            }, 
            {
                "Type": "DOMString", 
                "Name": "width"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "start", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "stop", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "createdCallback", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "attachedCallback", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "detachedCallback", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "attributeChangedCallback", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "oldValue"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "newValue"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLMarqueeElement", 
        "FileName": "HTMLMarqueeElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "message"
            }, 
            {
                "Type": "boolean", 
                "Name": "closeable"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "createdCallback", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "PluginPlaceholderElement", 
        "FileName": "PluginPlaceholderElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "long", 
                "Name": "selectedIndex"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onchange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onaddtrack"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onremovetrack"
            }
        ], 
        "Operation": [
            {
                "Type": "VideoTrack", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "VideoTrack", 
                "Name": "getTrackById", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "id"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "VideoTrackList", 
        "FileName": "VideoTrackList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onchange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onaddtrack"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onremovetrack"
            }
        ], 
        "Operation": [
            {
                "Type": "TextTrack", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "TextTrack", 
                "Name": "getTrackById", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "id"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TextTrackList", 
        "FileName": "TextTrackList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onchange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onaddtrack"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onremovetrack"
            }
        ], 
        "Operation": [
            {
                "Type": "AudioTrack", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "AudioTrack", 
                "Name": "getTrackById", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "id"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "AudioTrackList", 
        "FileName": "AudioTrackList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "TextTrackCue", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "TextTrackCue", 
                "Name": "getCueById", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "id"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TextTrackCueList", 
        "FileName": "TextTrackCueList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "TextTrack", 
                "Name": "track"
            }, 
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "double", 
                "Name": "startTime"
            }, 
            {
                "Type": "double", 
                "Name": "endTime"
            }, 
            {
                "Type": "boolean", 
                "Name": "pauseOnExit"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onenter"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onexit"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "TextTrackCue", 
        "FileName": "TextTrackCue.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": null, 
                "Name": "track"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "TrackEvent", 
        "FileName": "TrackEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "DOMString", 
                "Name": "kind"
            }, 
            {
                "Type": "DOMString", 
                "Name": "label"
            }, 
            {
                "Type": "DOMString", 
                "Name": "language"
            }, 
            {
                "Type": "boolean", 
                "Name": "selected"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "VideoTrack", 
        "FileName": "VideoTrack.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "DOMString", 
                "Name": "kind"
            }, 
            {
                "Type": "DOMString", 
                "Name": "label"
            }, 
            {
                "Type": "DOMString", 
                "Name": "language"
            }, 
            {
                "Type": "boolean", 
                "Name": "enabled"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "AudioTrack", 
        "FileName": "AudioTrack.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "TextTrackKind", 
                "Name": "kind"
            }, 
            {
                "Type": "DOMString", 
                "Name": "label"
            }, 
            {
                "Type": "DOMString", 
                "Name": "language"
            }, 
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "TextTrackMode", 
                "Name": "mode"
            }, 
            {
                "Type": "TextTrackCueList", 
                "Name": "cues"
            }, 
            {
                "Type": "TextTrackCueList", 
                "Name": "activeCues"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oncuechange"
            }, 
            {
                "Type": "VTTRegionList", 
                "Name": "regions"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "addCue", 
                "Argument": [
                    {
                        "Type": "TextTrackCue", 
                        "Name": "cue"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeCue", 
                "Argument": [
                    {
                        "Type": "TextTrackCue", 
                        "Name": "cue"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "addRegion", 
                "Argument": [
                    {
                        "Type": "VTTRegion", 
                        "Name": "region"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeRegion", 
                "Argument": [
                    {
                        "Type": "VTTRegion", 
                        "Name": "region"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TextTrack", 
        "FileName": "TextTrack.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "regionId"
            }, 
            {
                "Type": "DirectionSetting", 
                "Name": "vertical"
            }, 
            {
                "Type": "boolean", 
                "Name": "snapToLines"
            }, 
            {
                "Type": null, 
                "Name": "line"
            }, 
            {
                "Type": null, 
                "Name": "position"
            }, 
            {
                "Type": "double", 
                "Name": "size"
            }, 
            {
                "Type": "AlignSetting", 
                "Name": "align"
            }, 
            {
                "Type": "DOMString", 
                "Name": "text"
            }
        ], 
        "Operation": [
            {
                "Type": "DocumentFragment", 
                "Name": "getCueAsHTML", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "VTTCue", 
        "FileName": "VTTCue.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "VTTRegion", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "VTTRegion", 
                "Name": "getRegionById", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "id"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "VTTRegionList", 
        "FileName": "VTTRegionList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "width"
            }, 
            {
                "Type": "long", 
                "Name": "height"
            }, 
            {
                "Type": "double", 
                "Name": "regionAnchorX"
            }, 
            {
                "Type": "double", 
                "Name": "regionAnchorY"
            }, 
            {
                "Type": "double", 
                "Name": "viewportAnchorX"
            }, 
            {
                "Type": "double", 
                "Name": "viewportAnchorY"
            }, 
            {
                "Type": "DOMString", 
                "Name": "scroll"
            }, 
            {
                "Type": "TextTrack", 
                "Name": "track"
            }, 
            {
                "Type": "DOMString", 
                "Name": "id"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "VTTRegion", 
        "FileName": "VTTRegion.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "url"
            }, 
            {
                "Type": "boolean", 
                "Name": "withCredentials"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "readyState"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onopen"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmessage"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": []
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "CONNECTING", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "OPEN", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CLOSED", 
                "Value": "2"
            }
        ], 
        "Name": "EventSource", 
        "FileName": "EventSource.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setValueAndClosePopup", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "numberValue"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "stringValue"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setValue", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "closePopup", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "selectFontsFromOwnerDocument", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "targetDocument"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "localizeNumberString", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "numberString"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "formatMonth", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "year"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "zeroBaseMonth"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "formatShortMonth", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "year"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "zeroBaseMonth"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "formatWeek", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "year"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "weekNumber"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "localizedStartDate"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "histogramEnumeration", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sample"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "boundaryValue"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setWindowRect", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "height"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "PagePopupController", 
        "FileName": "PagePopupController.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "deltaX"
            }, 
            {
                "Type": "double", 
                "Name": "deltaY"
            }, 
            {
                "Type": "double", 
                "Name": "deltaGranularity"
            }, 
            {
                "Type": "double", 
                "Name": "velocityX"
            }, 
            {
                "Type": "double", 
                "Name": "velocityY"
            }, 
            {
                "Type": "boolean", 
                "Name": "inInertialPhase"
            }, 
            {
                "Type": "boolean", 
                "Name": "isEnding"
            }, 
            {
                "Type": "boolean", 
                "Name": "isBeginning"
            }, 
            {
                "Type": "boolean", 
                "Name": "fromUserInput"
            }, 
            {
                "Type": "boolean", 
                "Name": "shouldPropagate"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "consumeDelta", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "y"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "ScrollState", 
        "FileName": "ScrollState.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "firesTouchEvents"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "InputDevice", 
        "FileName": "InputDevice.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WorkerNavigator", 
        "FileName": "WorkerNavigator.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onmessage"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "terminate", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "postMessage", 
                "Argument": [
                    {
                        "Type": "SerializedScriptValue", 
                        "Name": "message"
                    }, 
                    {
                        "Type": null, 
                        "Name": "transfer"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Worker", 
        "FileName": "Worker.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "AbstractWorker", 
        "FileName": "AbstractWorker.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MessagePort", 
                "Name": "port"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SharedWorker", 
        "FileName": "SharedWorker.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onmessage"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "postMessage", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "message"
                    }, 
                    {
                        "Type": null, 
                        "Name": "transfer"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DedicatedWorkerGlobalScope", 
        "FileName": "DedicatedWorkerGlobalScope.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WorkerLocation", 
        "FileName": "WorkerLocation.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "WorkerGlobalScope", 
                "Name": "self"
            }, 
            {
                "Type": "WorkerLocation", 
                "Name": "location"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }, 
            {
                "Type": "WorkerNavigator", 
                "Name": "navigator"
            }, 
            {
                "Type": "WorkerConsole", 
                "Name": "console"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onrejectionhandled"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onunhandledrejection"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "importScripts", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "urls"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "WorkerGlobalScope", 
        "FileName": "WorkerGlobalScope.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WorkerConsole", 
        "FileName": "WorkerConsole.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onconnect"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SharedWorkerGlobalScope", 
        "FileName": "SharedWorkerGlobalScope.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "debug", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "error", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "info", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "log", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "warn", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "dir", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "dirxml", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "table", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "trace", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "assert", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "condition"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "count", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "markTimeline", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "title"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "profile", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "title"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "profileEnd", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "title"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "time", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "title"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "timeEnd", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "title"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "timeStamp", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "title"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "timeline", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "title"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "timelineEnd", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "title"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "group", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "groupCollapsed", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "groupEnd", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "clear", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "ConsoleBase", 
        "FileName": "ConsoleBase.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "appCodeName"
            }, 
            {
                "Type": "DOMString", 
                "Name": "appName"
            }, 
            {
                "Type": "DOMString", 
                "Name": "appVersion"
            }, 
            {
                "Type": "DOMString", 
                "Name": "platform"
            }, 
            {
                "Type": "DOMString", 
                "Name": "product"
            }, 
            {
                "Type": "DOMString", 
                "Name": "userAgent"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "NavigatorID", 
        "FileName": "NavigatorID.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "Console", 
        "FileName": "Console.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "vendorSub"
            }, 
            {
                "Type": "DOMString", 
                "Name": "productSub"
            }, 
            {
                "Type": "DOMString", 
                "Name": "vendor"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "Navigator.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "width"
            }, 
            {
                "Type": "long", 
                "Name": "height"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ImageBitmap", 
        "FileName": "ImageBitmap.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "cookieEnabled"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "getStorageUpdates", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "NavigatorStorageUtils", 
        "FileName": "NavigatorStorageUtils.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "btoa", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "btoa"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "atob", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "atob"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "WindowBase64", 
        "FileName": "WindowBase64.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "hardwareConcurrency"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "NavigatorCPU", 
        "FileName": "NavigatorCPU.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "visible"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "BarProp", 
        "FileName": "BarProp.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMStringList", 
                "Name": "ancestorOrigins"
            }, 
            {
                "Type": "DOMString", 
                "Name": "href"
            }, 
            {
                "Type": "DOMString", 
                "Name": "origin"
            }, 
            {
                "Type": "DOMString", 
                "Name": "protocol"
            }, 
            {
                "Type": "DOMString", 
                "Name": "host"
            }, 
            {
                "Type": "DOMString", 
                "Name": "hostname"
            }, 
            {
                "Type": "DOMString", 
                "Name": "port"
            }, 
            {
                "Type": "DOMString", 
                "Name": "pathname"
            }, 
            {
                "Type": "DOMString", 
                "Name": "search"
            }, 
            {
                "Type": "DOMString", 
                "Name": "hash"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "assign", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "replace", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "reload", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "toString", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "valueOf", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Location", 
        "FileName": "Location.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "long", 
                "Name": "setTimeout", 
                "Argument": [
                    {
                        "Type": "Function", 
                        "Name": "handler"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "timeout"
                    }, 
                    {
                        "Type": null, 
                        "Name": "arguments"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "setTimeout", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "handler"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "timeout"
                    }, 
                    {
                        "Type": null, 
                        "Name": "arguments"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearTimeout", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "handle"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "setInterval", 
                "Argument": [
                    {
                        "Type": "Function", 
                        "Name": "handler"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "timeout"
                    }, 
                    {
                        "Type": null, 
                        "Name": "arguments"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "setInterval", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "handler"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "timeout"
                    }, 
                    {
                        "Type": null, 
                        "Name": "arguments"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearInterval", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "handle"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "WindowTimers", 
        "FileName": "WindowTimers.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "onLine"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "NavigatorOnLine", 
        "FileName": "NavigatorOnLine.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onbeforeunload"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onhashchange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onlanguagechange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmessage"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onoffline"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ononline"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpagehide"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpageshow"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpopstate"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onstorage"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onunload"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onrejectionhandled"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onunhandledrejection"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "WindowEventHandlers", 
        "FileName": "WindowEventHandlers.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Window", 
                "Name": "window"
            }, 
            {
                "Type": "Window", 
                "Name": "self"
            }, 
            {
                "Type": "Document", 
                "Name": "document"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "Location", 
                "Name": "location"
            }, 
            {
                "Type": "History", 
                "Name": "history"
            }, 
            {
                "Type": "BarProp", 
                "Name": "locationbar"
            }, 
            {
                "Type": "BarProp", 
                "Name": "menubar"
            }, 
            {
                "Type": "BarProp", 
                "Name": "personalbar"
            }, 
            {
                "Type": "BarProp", 
                "Name": "scrollbars"
            }, 
            {
                "Type": "BarProp", 
                "Name": "statusbar"
            }, 
            {
                "Type": "BarProp", 
                "Name": "toolbar"
            }, 
            {
                "Type": "DOMString", 
                "Name": "status"
            }, 
            {
                "Type": "boolean", 
                "Name": "closed"
            }, 
            {
                "Type": "Window", 
                "Name": "frames"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "Window", 
                "Name": "top"
            }, 
            {
                "Type": "Window", 
                "Name": "opener"
            }, 
            {
                "Type": "Window", 
                "Name": "parent"
            }, 
            {
                "Type": "Element", 
                "Name": "frameElement"
            }, 
            {
                "Type": "Navigator", 
                "Name": "navigator"
            }, 
            {
                "Type": "ApplicationCache", 
                "Name": "applicationCache"
            }, 
            {
                "Type": "Screen", 
                "Name": "screen"
            }, 
            {
                "Type": "long", 
                "Name": "innerWidth"
            }, 
            {
                "Type": "long", 
                "Name": "innerHeight"
            }, 
            {
                "Type": "double", 
                "Name": "scrollX"
            }, 
            {
                "Type": "double", 
                "Name": "pageXOffset"
            }, 
            {
                "Type": "double", 
                "Name": "scrollY"
            }, 
            {
                "Type": "double", 
                "Name": "pageYOffset"
            }, 
            {
                "Type": "long", 
                "Name": "screenX"
            }, 
            {
                "Type": "long", 
                "Name": "screenY"
            }, 
            {
                "Type": "long", 
                "Name": "outerWidth"
            }, 
            {
                "Type": "long", 
                "Name": "outerHeight"
            }, 
            {
                "Type": "double", 
                "Name": "devicePixelRatio"
            }, 
            {
                "Type": "Console", 
                "Name": "console"
            }, 
            {
                "Type": "Navigator", 
                "Name": "clientInformation"
            }, 
            {
                "Type": "Event", 
                "Name": "event"
            }, 
            {
                "Type": "boolean", 
                "Name": "offscreenBuffering"
            }, 
            {
                "Type": "long", 
                "Name": "screenLeft"
            }, 
            {
                "Type": "long", 
                "Name": "screenTop"
            }, 
            {
                "Type": "DOMString", 
                "Name": "defaultStatus"
            }, 
            {
                "Type": "DOMString", 
                "Name": "defaultstatus"
            }, 
            {
                "Type": "StyleMedia", 
                "Name": "styleMedia"
            }, 
            {
                "Type": "long", 
                "Name": "orientation"
            }, 
            {
                "Type": "TransitionEventConstructor", 
                "Name": "WebKitTransitionEvent"
            }, 
            {
                "Type": "AnimationEventConstructor", 
                "Name": "WebKitAnimationEvent"
            }, 
            {
                "Type": "URLConstructor", 
                "Name": "webkitURL"
            }, 
            {
                "Type": "MutationObserverConstructor", 
                "Name": "WebKitMutationObserver"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onanimationend"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onanimationiteration"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onanimationstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onorientationchange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onsearch"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontouchcancel"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontouchend"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontouchmove"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontouchstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontransitionend"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwebkitanimationend"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwebkitanimationiteration"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwebkitanimationstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwebkittransitionend"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwheel"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "stop", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "focus", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "blur", 
                "Argument": []
            }, 
            {
                "Type": "Window", 
                "Name": "open", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "features"
                    }
                ]
            }, 
            {
                "Type": "Window", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "object", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "alert", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "alert", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "message"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "confirm", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "message"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "prompt", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "message"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "defaultValue"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "print", 
                "Argument": []
            }, 
            {
                "Type": "long", 
                "Name": "requestAnimationFrame", 
                "Argument": [
                    {
                        "Type": "FrameRequestCallback", 
                        "Name": "callback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "cancelAnimationFrame", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "handle"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "postMessage", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "message"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "targetOrigin"
                    }, 
                    {
                        "Type": null, 
                        "Name": "transfer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "captureEvents", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "releaseEvents", 
                "Argument": []
            }, 
            {
                "Type": "CSSStyleDeclaration", 
                "Name": "getComputedStyle", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "elt"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "pseudoElt"
                    }
                ]
            }, 
            {
                "Type": "MediaQueryList", 
                "Name": "matchMedia", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "query"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "moveTo", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "moveBy", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "resizeTo", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "resizeBy", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scroll", 
                "Argument": [
                    {
                        "Type": "ScrollToOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scroll", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scrollTo", 
                "Argument": [
                    {
                        "Type": "ScrollToOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scrollTo", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scrollBy", 
                "Argument": [
                    {
                        "Type": "ScrollToOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scrollBy", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "Selection", 
                "Name": "getSelection", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "find", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "string"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "caseSensitive"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "backwards"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "wrap"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "wholeWord"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "searchInFrames"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "showDialog"
                    }
                ]
            }, 
            {
                "Type": "CSSRuleList", 
                "Name": "getMatchedCSSRules", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "pseudoElement"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "webkitRequestAnimationFrame", 
                "Argument": [
                    {
                        "Type": "FrameRequestCallback", 
                        "Name": "callback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "webkitCancelAnimationFrame", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "id"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "webkitCancelRequestAnimationFrame", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "id"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "Window.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "availWidth"
            }, 
            {
                "Type": "long", 
                "Name": "availHeight"
            }, 
            {
                "Type": "long", 
                "Name": "width"
            }, 
            {
                "Type": "long", 
                "Name": "height"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "colorDepth"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "pixelDepth"
            }, 
            {
                "Type": "long", 
                "Name": "availLeft"
            }, 
            {
                "Type": "long", 
                "Name": "availTop"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Screen", 
        "FileName": "Screen.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "language"
            }, 
            {
                "Type": "DOMString", 
                "Name": "languages"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "NavigatorLanguage", 
        "FileName": "NavigatorLanguage.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "SerializedScriptValue", 
                "Name": "state"
            }, 
            {
                "Type": "ScrollRestoration", 
                "Name": "scrollRestoration"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "go", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "delta"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "back", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "forward", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "pushState", 
                "Argument": [
                    {
                        "Type": "SerializedScriptValue", 
                        "Name": "data"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "title"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "replaceState", 
                "Argument": [
                    {
                        "Type": "SerializedScriptValue", 
                        "Name": "data"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "title"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "History", 
        "FileName": "History.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Promise", 
                "Name": "closed"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "read", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "cancel", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "reason"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "releaseLock", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "ReadableByteStreamReader", 
        "FileName": "ReadableByteStreamReader.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "type"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Stream", 
        "FileName": "Stream.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Promise", 
                "Name": "closed"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "read", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "cancel", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "reason"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "releaseLock", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "ReadableStreamReader", 
        "FileName": "ReadableStreamReader.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "ReadableStreamReader", 
                "Name": "getReader", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "cancel", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "reason"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "ReadableStream", 
        "FileName": "ReadableStream.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "ReadableByteStreamReader", 
                "Name": "getReader", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "cancel", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "reason"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "ReadableByteStream", 
        "FileName": "ReadableByteStream.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "status"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onchecking"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onnoupdate"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ondownloading"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onprogress"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onupdateready"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oncached"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onobsolete"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "update", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "abort", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "swapCache", 
                "Argument": []
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "UNCACHED", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "IDLE", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CHECKING", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DOWNLOADING", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "UPDATEREADY", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "OBSOLETE", 
                "Value": "5"
            }
        ], 
        "Name": "ApplicationCache", 
        "FileName": "ApplicationCache.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Node", 
                "Name": "anchorNode"
            }, 
            {
                "Type": "long", 
                "Name": "anchorOffset"
            }, 
            {
                "Type": "Node", 
                "Name": "focusNode"
            }, 
            {
                "Type": "long", 
                "Name": "focusOffset"
            }, 
            {
                "Type": "boolean", 
                "Name": "isCollapsed"
            }, 
            {
                "Type": "long", 
                "Name": "rangeCount"
            }, 
            {
                "Type": "Node", 
                "Name": "baseNode"
            }, 
            {
                "Type": "long", 
                "Name": "baseOffset"
            }, 
            {
                "Type": "Node", 
                "Name": "extentNode"
            }, 
            {
                "Type": "long", 
                "Name": "extentOffset"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }
        ], 
        "Operation": [
            {
                "Type": "Range", 
                "Name": "getRangeAt", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "addRange", 
                "Argument": [
                    {
                        "Type": "Range", 
                        "Name": "range"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeAllRanges", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "collapse", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "offset"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "collapseToStart", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "collapseToEnd", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "extend", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "offset"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setBaseAndExtent", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "baseNode"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "baseOffset"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "extentNode"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "extentOffset"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "selectAllChildren", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteFromDocument", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "containsNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "allowPartialContainment"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "empty", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "modify", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "alter"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "direction"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "granularity"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setPosition", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "offset"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Selection", 
        "FileName": "Selection.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Element", 
                "Name": "getElementById", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "elementId"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "NonElementParentNode", 
        "FileName": "NonElementParentNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Node", 
                "Name": "root"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "whatToShow"
            }, 
            {
                "Type": "NodeFilter", 
                "Name": "filter"
            }, 
            {
                "Type": "Node", 
                "Name": "currentNode"
            }
        ], 
        "Operation": [
            {
                "Type": "Node", 
                "Name": "parentNode", 
                "Argument": []
            }, 
            {
                "Type": "Node", 
                "Name": "firstChild", 
                "Argument": []
            }, 
            {
                "Type": "Node", 
                "Name": "lastChild", 
                "Argument": []
            }, 
            {
                "Type": "Node", 
                "Name": "previousSibling", 
                "Argument": []
            }, 
            {
                "Type": "Node", 
                "Name": "nextSibling", 
                "Argument": []
            }, 
            {
                "Type": "Node", 
                "Name": "previousNode", 
                "Argument": []
            }, 
            {
                "Type": "Node", 
                "Name": "nextNode", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "TreeWalker", 
        "FileName": "TreeWalker.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "target"
            }, 
            {
                "Type": "StyleSheet", 
                "Name": "sheet"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ProcessingInstruction", 
        "FileName": "ProcessingInstruction.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "ArrayBuffer", 
                "Name": "buffer"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "byteOffset"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "byteLength"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ArrayBufferView", 
        "FileName": "ArrayBufferView.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "Touch", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TouchList", 
        "FileName": "TouchList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "ClientRect", 
                "Name": "item", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "ClientRect", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "ClientRectList", 
        "FileName": "ClientRectList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "item", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "contains", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "string"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DOMStringList", 
        "FileName": "DOMStringList.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "DataView", 
        "FileName": "DataView.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "__deleter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "__deleter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DOMStringMap", 
        "FileName": "DOMStringMap.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Element", 
                "Name": "previousElementSibling"
            }, 
            {
                "Type": "Element", 
                "Name": "nextElementSibling"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "NonDocumentTypeChildNode", 
        "FileName": "NonDocumentTypeChildNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "a"
            }, 
            {
                "Type": "double", 
                "Name": "b"
            }, 
            {
                "Type": "double", 
                "Name": "c"
            }, 
            {
                "Type": "double", 
                "Name": "d"
            }, 
            {
                "Type": "double", 
                "Name": "e"
            }, 
            {
                "Type": "double", 
                "Name": "f"
            }, 
            {
                "Type": "double", 
                "Name": "m11"
            }, 
            {
                "Type": "double", 
                "Name": "m12"
            }, 
            {
                "Type": "double", 
                "Name": "m13"
            }, 
            {
                "Type": "double", 
                "Name": "m14"
            }, 
            {
                "Type": "double", 
                "Name": "m21"
            }, 
            {
                "Type": "double", 
                "Name": "m22"
            }, 
            {
                "Type": "double", 
                "Name": "m23"
            }, 
            {
                "Type": "double", 
                "Name": "m24"
            }, 
            {
                "Type": "double", 
                "Name": "m31"
            }, 
            {
                "Type": "double", 
                "Name": "m32"
            }, 
            {
                "Type": "double", 
                "Name": "m33"
            }, 
            {
                "Type": "double", 
                "Name": "m34"
            }, 
            {
                "Type": "double", 
                "Name": "m41"
            }, 
            {
                "Type": "double", 
                "Name": "m42"
            }, 
            {
                "Type": "double", 
                "Name": "m43"
            }, 
            {
                "Type": "double", 
                "Name": "m44"
            }, 
            {
                "Type": "boolean", 
                "Name": "is2D"
            }, 
            {
                "Type": "boolean", 
                "Name": "isIdentity"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMMatrix", 
                "Name": "translate", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "tx"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "ty"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "tz"
                    }
                ]
            }, 
            {
                "Type": "DOMMatrix", 
                "Name": "scale", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "scale"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originX"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originY"
                    }
                ]
            }, 
            {
                "Type": "DOMMatrix", 
                "Name": "scale3d", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "scale"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originX"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originY"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originZ"
                    }
                ]
            }, 
            {
                "Type": "DOMMatrix", 
                "Name": "scaleNonUniform", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "scaleX"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "scaleY"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "scaleZn"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originX"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originY"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originZ"
                    }
                ]
            }, 
            {
                "Type": "DOMMatrix", 
                "Name": "multiply", 
                "Argument": [
                    {
                        "Type": "DOMMatrix", 
                        "Name": "other"
                    }
                ]
            }, 
            {
                "Type": "Float32Array", 
                "Name": "toFloat32Array", 
                "Argument": []
            }, 
            {
                "Type": "Float64Array", 
                "Name": "toFloat64Array", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "DOMMatrixReadOnly", 
        "FileName": "DOMMatrixReadOnly.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "nodeType"
            }, 
            {
                "Type": "DOMString", 
                "Name": "nodeName"
            }, 
            {
                "Type": "DOMString", 
                "Name": "baseURI"
            }, 
            {
                "Type": "Document", 
                "Name": "ownerDocument"
            }, 
            {
                "Type": "Node", 
                "Name": "parentNode"
            }, 
            {
                "Type": "Element", 
                "Name": "parentElement"
            }, 
            {
                "Type": "NodeList", 
                "Name": "childNodes"
            }, 
            {
                "Type": "Node", 
                "Name": "firstChild"
            }, 
            {
                "Type": "Node", 
                "Name": "lastChild"
            }, 
            {
                "Type": "Node", 
                "Name": "previousSibling"
            }, 
            {
                "Type": "Node", 
                "Name": "nextSibling"
            }, 
            {
                "Type": "DOMString", 
                "Name": "nodeValue"
            }, 
            {
                "Type": "DOMString", 
                "Name": "textContent"
            }
        ], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "hasChildNodes", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "normalize", 
                "Argument": []
            }, 
            {
                "Type": "Node", 
                "Name": "cloneNode", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "deep"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isEqualNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "unsigned short", 
                "Name": "compareDocumentPosition", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "other"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "contains", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "other"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "lookupPrefix", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "lookupNamespaceURI", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "prefix"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isDefaultNamespace", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "insertBefore", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "child"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "appendChild", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "replaceChild", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "child"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "removeChild", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "child"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isSameNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "other"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "ELEMENT_NODE", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "ATTRIBUTE_NODE", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "TEXT_NODE", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CDATA_SECTION_NODE", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "ENTITY_REFERENCE_NODE", 
                "Value": "5"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "ENTITY_NODE", 
                "Value": "6"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PROCESSING_INSTRUCTION_NODE", 
                "Value": "7"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "COMMENT_NODE", 
                "Value": "8"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DOCUMENT_NODE", 
                "Value": "9"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DOCUMENT_TYPE_NODE", 
                "Value": "10"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DOCUMENT_FRAGMENT_NODE", 
                "Value": "11"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "NOTATION_NODE", 
                "Value": "12"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DOCUMENT_POSITION_DISCONNECTED", 
                "Value": "0x01"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DOCUMENT_POSITION_PRECEDING", 
                "Value": "0x02"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DOCUMENT_POSITION_FOLLOWING", 
                "Value": "0x04"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DOCUMENT_POSITION_CONTAINS", 
                "Value": "0x08"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DOCUMENT_POSITION_CONTAINED_BY", 
                "Value": "0x10"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC", 
                "Value": "0x20"
            }
        ], 
        "Name": "Node", 
        "FileName": "Node.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "x"
            }, 
            {
                "Type": "double", 
                "Name": "y"
            }, 
            {
                "Type": "double", 
                "Name": "z"
            }, 
            {
                "Type": "double", 
                "Name": "w"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "DOMPoint", 
        "FileName": "DOMPoint.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "unsigned short", 
                "Name": "acceptNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "FILTER_ACCEPT", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "FILTER_REJECT", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "FILTER_SKIP", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SHOW_ALL", 
                "Value": "0xFFFFFFFF"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SHOW_ELEMENT", 
                "Value": "0x1"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SHOW_ATTRIBUTE", 
                "Value": "0x2"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SHOW_TEXT", 
                "Value": "0x4"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SHOW_CDATA_SECTION", 
                "Value": "0x8"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SHOW_ENTITY_REFERENCE", 
                "Value": "0x10"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SHOW_ENTITY", 
                "Value": "0x20"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SHOW_PROCESSING_INSTRUCTION", 
                "Value": "0x40"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SHOW_COMMENT", 
                "Value": "0x80"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SHOW_DOCUMENT", 
                "Value": "0x100"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SHOW_DOCUMENT_TYPE", 
                "Value": "0x200"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SHOW_DOCUMENT_FRAGMENT", 
                "Value": "0x400"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SHOW_NOTATION", 
                "Value": "0x800"
            }
        ], 
        "Name": "NodeFilter", 
        "FileName": "NodeFilter.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "data"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "substringData", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "offset"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "count"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "appendData", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "insertData", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "offset"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteData", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "offset"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "count"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "replaceData", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "offset"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "count"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "data"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CharacterData", 
        "FileName": "CharacterData.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Node", 
                "Name": "startContainer"
            }, 
            {
                "Type": "long", 
                "Name": "startOffset"
            }, 
            {
                "Type": "Node", 
                "Name": "endContainer"
            }, 
            {
                "Type": "long", 
                "Name": "endOffset"
            }, 
            {
                "Type": "boolean", 
                "Name": "collapsed"
            }, 
            {
                "Type": "Node", 
                "Name": "commonAncestorContainer"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setStart", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "offset"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setEnd", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "offset"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setStartBefore", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setStartAfter", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setEndBefore", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setEndAfter", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "collapse", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "toStart"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "selectNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "selectNodeContents", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "short", 
                "Name": "compareBoundaryPoints", 
                "Argument": [
                    {
                        "Type": "unsigned short", 
                        "Name": "how"
                    }, 
                    {
                        "Type": "Range", 
                        "Name": "sourceRange"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteContents", 
                "Argument": []
            }, 
            {
                "Type": "DocumentFragment", 
                "Name": "extractContents", 
                "Argument": []
            }, 
            {
                "Type": "DocumentFragment", 
                "Name": "cloneContents", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "insertNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "surroundContents", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "newParent"
                    }
                ]
            }, 
            {
                "Type": "Range", 
                "Name": "cloneRange", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "detach", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "isPointInRange", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "offset"
                    }
                ]
            }, 
            {
                "Type": "short", 
                "Name": "comparePoint", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "offset"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "intersectsNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "ClientRectList", 
                "Name": "getClientRects", 
                "Argument": []
            }, 
            {
                "Type": "ClientRect", 
                "Name": "getBoundingClientRect", 
                "Argument": []
            }, 
            {
                "Type": "DocumentFragment", 
                "Name": "createContextualFragment", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "fragment"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "expand", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "unit"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "START_TO_START", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "START_TO_END", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "END_TO_END", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "END_TO_START", 
                "Value": "3"
            }
        ], 
        "Name": "Range", 
        "FileName": "Range.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": null, 
                "Name": "next", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Iterator", 
        "FileName": "Iterator.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "CDATASection", 
        "FileName": "CDATASection.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "DocumentFragment", 
        "FileName": "DocumentFragment.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "message"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "DOMError", 
        "FileName": "DOMError.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "Int8Array", 
        "FileName": "Int8Array.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "top"
            }, 
            {
                "Type": "float", 
                "Name": "right"
            }, 
            {
                "Type": "float", 
                "Name": "bottom"
            }, 
            {
                "Type": "float", 
                "Name": "left"
            }, 
            {
                "Type": "float", 
                "Name": "width"
            }, 
            {
                "Type": "float", 
                "Name": "height"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ClientRect", 
        "FileName": "ClientRect.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "Uint8ClampedArray", 
        "FileName": "Uint8ClampedArray.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "Attr", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "Attr", 
                "Name": "getNamedItem", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "Attr", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "Attr", 
                "Name": "getNamedItemNS", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }
                ]
            }, 
            {
                "Type": "Attr", 
                "Name": "setNamedItem", 
                "Argument": [
                    {
                        "Type": "Attr", 
                        "Name": "attr"
                    }
                ]
            }, 
            {
                "Type": "Attr", 
                "Name": "setNamedItemNS", 
                "Argument": [
                    {
                        "Type": "Attr", 
                        "Name": "attr"
                    }
                ]
            }, 
            {
                "Type": "Attr", 
                "Name": "removeNamedItem", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "Attr", 
                "Name": "removeNamedItemNS", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "NamedNodeMap", 
        "FileName": "NamedNodeMap.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "observe", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "MutationObserverInit", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "disconnect", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "takeRecords", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "MutationObserver", 
        "FileName": "MutationObserver.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "publicId"
            }, 
            {
                "Type": "DOMString", 
                "Name": "systemId"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "DocumentType", 
        "FileName": "DocumentType.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DocumentType", 
                "Name": "createDocumentType", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "qualifiedName"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "publicId"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "systemId"
                    }
                ]
            }, 
            {
                "Type": "XMLDocument", 
                "Name": "createDocument", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "qualifiedName"
                    }, 
                    {
                        "Type": "DocumentType", 
                        "Name": "doctype"
                    }
                ]
            }, 
            {
                "Type": "HTMLDocument", 
                "Name": "createHTMLDocument", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "title"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "hasFeature", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "DOMImplementation", 
        "FileName": "DOMImplementation.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "Int32Array", 
        "FileName": "Int32Array.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "Uint8Array", 
        "FileName": "Uint8Array.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "namespaceURI"
            }, 
            {
                "Type": "DOMString", 
                "Name": "prefix"
            }, 
            {
                "Type": "DOMString", 
                "Name": "localName"
            }, 
            {
                "Type": "DOMString", 
                "Name": "tagName"
            }, 
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "DOMString", 
                "Name": "className"
            }, 
            {
                "Type": "DOMTokenList", 
                "Name": "classList"
            }, 
            {
                "Type": "NamedNodeMap", 
                "Name": "attributes"
            }, 
            {
                "Type": "DOMString", 
                "Name": "innerHTML"
            }, 
            {
                "Type": "DOMString", 
                "Name": "outerHTML"
            }, 
            {
                "Type": "ShadowRoot", 
                "Name": "shadowRoot"
            }, 
            {
                "Type": "double", 
                "Name": "scrollTop"
            }, 
            {
                "Type": "double", 
                "Name": "scrollLeft"
            }, 
            {
                "Type": "long", 
                "Name": "scrollWidth"
            }, 
            {
                "Type": "long", 
                "Name": "scrollHeight"
            }, 
            {
                "Type": "long", 
                "Name": "clientTop"
            }, 
            {
                "Type": "long", 
                "Name": "clientLeft"
            }, 
            {
                "Type": "long", 
                "Name": "clientWidth"
            }, 
            {
                "Type": "long", 
                "Name": "clientHeight"
            }, 
            {
                "Type": "Element", 
                "Name": "offsetParent"
            }, 
            {
                "Type": "long", 
                "Name": "offsetTop"
            }, 
            {
                "Type": "long", 
                "Name": "offsetLeft"
            }, 
            {
                "Type": "long", 
                "Name": "offsetWidth"
            }, 
            {
                "Type": "long", 
                "Name": "offsetHeight"
            }, 
            {
                "Type": "DOMString", 
                "Name": "computedRole"
            }, 
            {
                "Type": "DOMString", 
                "Name": "computedName"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onbeforecopy"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onbeforecut"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onbeforepaste"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oncopy"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oncut"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpaste"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onsearch"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onselectstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontouchcancel"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontouchend"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontouchmove"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontouchstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwheel"
            }
        ], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "hasAttributes", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "getAttribute", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "getAttributeNS", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setAttribute", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setAttributeNS", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeAttribute", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeAttributeNS", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "hasAttribute", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "hasAttributeNS", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }
                ]
            }, 
            {
                "Type": "Attr", 
                "Name": "getAttributeNode", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "Attr", 
                "Name": "getAttributeNodeNS", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }
                ]
            }, 
            {
                "Type": "Attr", 
                "Name": "setAttributeNode", 
                "Argument": [
                    {
                        "Type": "Attr", 
                        "Name": "attr"
                    }
                ]
            }, 
            {
                "Type": "Attr", 
                "Name": "setAttributeNodeNS", 
                "Argument": [
                    {
                        "Type": "Attr", 
                        "Name": "attr"
                    }
                ]
            }, 
            {
                "Type": "Attr", 
                "Name": "removeAttributeNode", 
                "Argument": [
                    {
                        "Type": "Attr", 
                        "Name": "attr"
                    }
                ]
            }, 
            {
                "Type": "Element", 
                "Name": "closest", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "selectors"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "matches", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "selectors"
                    }
                ]
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "getElementsByTagName", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }
                ]
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "getElementsByTagNameNS", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }
                ]
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "getElementsByClassName", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "classNames"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "insertAdjacentHTML", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "position"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "text"
                    }
                ]
            }, 
            {
                "Type": "ShadowRoot", 
                "Name": "createShadowRoot", 
                "Argument": []
            }, 
            {
                "Type": "ShadowRoot", 
                "Name": "createShadowRoot", 
                "Argument": [
                    {
                        "Type": "ShadowRootInit", 
                        "Name": "shadowRootInitDict"
                    }
                ]
            }, 
            {
                "Type": "NodeList", 
                "Name": "getDestinationInsertionPoints", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "requestPointerLock", 
                "Argument": []
            }, 
            {
                "Type": "ClientRectList", 
                "Name": "getClientRects", 
                "Argument": []
            }, 
            {
                "Type": "ClientRect", 
                "Name": "getBoundingClientRect", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "scrollIntoView", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "alignWithTop"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scroll", 
                "Argument": [
                    {
                        "Type": "ScrollToOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scroll", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scrollTo", 
                "Argument": [
                    {
                        "Type": "ScrollToOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scrollTo", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scrollBy", 
                "Argument": [
                    {
                        "Type": "ScrollToOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scrollBy", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "Element", 
                "Name": "insertAdjacentElement", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "where"
                    }, 
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "insertAdjacentText", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "where"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "text"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scrollIntoViewIfNeeded", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "centerIfNeeded"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "webkitMatchesSelector", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "selectors"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Element", 
        "FileName": "Element.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "Uint16Array", 
        "FileName": "Uint16Array.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "data"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "StringCallback", 
        "FileName": "StringCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Node", 
                "Name": "root"
            }, 
            {
                "Type": "Node", 
                "Name": "referenceNode"
            }, 
            {
                "Type": "boolean", 
                "Name": "pointerBeforeReferenceNode"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "whatToShow"
            }, 
            {
                "Type": "NodeFilter", 
                "Name": "filter"
            }
        ], 
        "Operation": [
            {
                "Type": "Node", 
                "Name": "nextNode", 
                "Argument": []
            }, 
            {
                "Type": "Node", 
                "Name": "previousNode", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "detach", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "NodeIterator", 
        "FileName": "NodeIterator.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "USVString", 
                "Name": "href"
            }, 
            {
                "Type": "USVString", 
                "Name": "origin"
            }, 
            {
                "Type": "USVString", 
                "Name": "protocol"
            }, 
            {
                "Type": "USVString", 
                "Name": "host"
            }, 
            {
                "Type": "USVString", 
                "Name": "hostname"
            }, 
            {
                "Type": "USVString", 
                "Name": "port"
            }, 
            {
                "Type": "USVString", 
                "Name": "pathname"
            }, 
            {
                "Type": "USVString", 
                "Name": "search"
            }, 
            {
                "Type": "USVString", 
                "Name": "hash"
            }
        ], 
        "Operation": [
            {
                "Type": "USVString", 
                "Name": "toString", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "URLUtilsReadOnly", 
        "FileName": "URLUtilsReadOnly.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "Float64Array", 
        "FileName": "Float64Array.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onmessage"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "postMessage", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "message"
                    }, 
                    {
                        "Type": null, 
                        "Name": "transfer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "start", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "MessagePort", 
        "FileName": "MessagePort.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "XMLDocument", 
        "FileName": "XMLDocument.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "x"
            }, 
            {
                "Type": "double", 
                "Name": "y"
            }, 
            {
                "Type": "double", 
                "Name": "z"
            }, 
            {
                "Type": "double", 
                "Name": "w"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "DOMPointReadOnly", 
        "FileName": "DOMPointReadOnly.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "contains", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "token"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "add", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "tokens"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "remove", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "tokens"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "toggle", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "token"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "force"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DOMTokenList", 
        "FileName": "DOMTokenList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "fullscreenEnabled"
            }, 
            {
                "Type": "Element", 
                "Name": "fullscreenElement"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onfullscreenchange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onfullscreenerror"
            }, 
            {
                "Type": "boolean", 
                "Name": "webkitIsFullScreen"
            }, 
            {
                "Type": "Element", 
                "Name": "webkitCurrentFullScreenElement"
            }, 
            {
                "Type": "boolean", 
                "Name": "webkitFullscreenEnabled"
            }, 
            {
                "Type": "Element", 
                "Name": "webkitFullscreenElement"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwebkitfullscreenchange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwebkitfullscreenerror"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "exitFullscreen", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "webkitCancelFullScreen", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "webkitExitFullscreen", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Document", 
        "FileName": "DocumentFullscreen.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "a"
            }, 
            {
                "Type": "double", 
                "Name": "b"
            }, 
            {
                "Type": "double", 
                "Name": "c"
            }, 
            {
                "Type": "double", 
                "Name": "d"
            }, 
            {
                "Type": "double", 
                "Name": "e"
            }, 
            {
                "Type": "double", 
                "Name": "f"
            }, 
            {
                "Type": "double", 
                "Name": "m11"
            }, 
            {
                "Type": "double", 
                "Name": "m12"
            }, 
            {
                "Type": "double", 
                "Name": "m13"
            }, 
            {
                "Type": "double", 
                "Name": "m14"
            }, 
            {
                "Type": "double", 
                "Name": "m21"
            }, 
            {
                "Type": "double", 
                "Name": "m22"
            }, 
            {
                "Type": "double", 
                "Name": "m23"
            }, 
            {
                "Type": "double", 
                "Name": "m24"
            }, 
            {
                "Type": "double", 
                "Name": "m31"
            }, 
            {
                "Type": "double", 
                "Name": "m32"
            }, 
            {
                "Type": "double", 
                "Name": "m33"
            }, 
            {
                "Type": "double", 
                "Name": "m34"
            }, 
            {
                "Type": "double", 
                "Name": "m41"
            }, 
            {
                "Type": "double", 
                "Name": "m42"
            }, 
            {
                "Type": "double", 
                "Name": "m43"
            }, 
            {
                "Type": "double", 
                "Name": "m44"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMMatrix", 
                "Name": "multiplySelf", 
                "Argument": [
                    {
                        "Type": "DOMMatrix", 
                        "Name": "other"
                    }
                ]
            }, 
            {
                "Type": "DOMMatrix", 
                "Name": "preMultiplySelf", 
                "Argument": [
                    {
                        "Type": "DOMMatrix", 
                        "Name": "other"
                    }
                ]
            }, 
            {
                "Type": "DOMMatrix", 
                "Name": "translateSelf", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "tx"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "ty"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "tz"
                    }
                ]
            }, 
            {
                "Type": "DOMMatrix", 
                "Name": "scaleSelf", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "scale"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originX"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originY"
                    }
                ]
            }, 
            {
                "Type": "DOMMatrix", 
                "Name": "scale3dSelf", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "scale"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originX"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originY"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originZ"
                    }
                ]
            }, 
            {
                "Type": "DOMMatrix", 
                "Name": "scaleNonUniformSelf", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "scaleX"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "scaleY"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "scaleZ"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originX"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originY"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "originZ"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DOMMatrix", 
        "FileName": "DOMMatrix.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "USVString", 
                "Name": "href"
            }, 
            {
                "Type": "USVString", 
                "Name": "origin"
            }, 
            {
                "Type": "USVString", 
                "Name": "protocol"
            }, 
            {
                "Type": "USVString", 
                "Name": "username"
            }, 
            {
                "Type": "USVString", 
                "Name": "password"
            }, 
            {
                "Type": "USVString", 
                "Name": "host"
            }, 
            {
                "Type": "USVString", 
                "Name": "hostname"
            }, 
            {
                "Type": "USVString", 
                "Name": "port"
            }, 
            {
                "Type": "USVString", 
                "Name": "pathname"
            }, 
            {
                "Type": "USVString", 
                "Name": "search"
            }, 
            {
                "Type": "USVString", 
                "Name": "hash"
            }
        ], 
        "Operation": [
            {
                "Type": "USVString", 
                "Name": "toString", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "URLUtils", 
        "FileName": "URLUtils.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onabort"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onautocomplete"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onautocompleteerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onblur"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oncancel"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oncanplay"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oncanplaythrough"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onchange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onclick"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onclose"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oncontextmenu"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oncuechange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ondblclick"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ondrag"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ondragend"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ondragenter"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ondragleave"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ondragover"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ondragstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ondrop"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ondurationchange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onemptied"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onended"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onfocus"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oninput"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oninvalid"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onkeydown"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onkeypress"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onkeyup"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onload"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onloadeddata"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onloadedmetadata"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onloadstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmousedown"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmouseenter"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmouseleave"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmousemove"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmouseout"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmouseover"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmouseup"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmousewheel"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpause"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onplay"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onplaying"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpointercancel"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpointerdown"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpointerenter"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpointerleave"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpointermove"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpointerout"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpointerover"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpointerup"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onprogress"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onratechange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onreset"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onresize"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onscroll"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onseeked"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onseeking"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onselect"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onshow"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onstalled"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onsubmit"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onsuspend"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontimeupdate"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontoggle"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onvolumechange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwaiting"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "GlobalEventHandlers", 
        "FileName": "GlobalEventHandlers.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "Int16Array", 
        "FileName": "Int16Array.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MessagePort", 
                "Name": "port1"
            }, 
            {
                "Type": "MessagePort", 
                "Name": "port2"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MessageChannel", 
        "FileName": "MessageChannel.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "value"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DOMSettableTokenList", 
        "FileName": "DOMSettableTokenList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "x"
            }, 
            {
                "Type": "double", 
                "Name": "y"
            }, 
            {
                "Type": "double", 
                "Name": "width"
            }, 
            {
                "Type": "double", 
                "Name": "height"
            }, 
            {
                "Type": "double", 
                "Name": "top"
            }, 
            {
                "Type": "double", 
                "Name": "right"
            }, 
            {
                "Type": "double", 
                "Name": "bottom"
            }, 
            {
                "Type": "double", 
                "Name": "left"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "DOMRectReadOnly", 
        "FileName": "DOMRectReadOnly.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "Node", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "NodeList", 
        "FileName": "NodeList.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "Float32Array", 
        "FileName": "Float32Array.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "HTMLCollection", 
                "Name": "children"
            }, 
            {
                "Type": "Element", 
                "Name": "firstElementChild"
            }, 
            {
                "Type": "Element", 
                "Name": "lastElementChild"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "childElementCount"
            }
        ], 
        "Operation": [
            {
                "Type": "Element", 
                "Name": "querySelector", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "selectors"
                    }
                ]
            }, 
            {
                "Type": "NodeList", 
                "Name": "querySelectorAll", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "selectors"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "ParentNode", 
        "FileName": "ParentNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "Node", 
                "Name": "target"
            }, 
            {
                "Type": "NodeList", 
                "Name": "addedNodes"
            }, 
            {
                "Type": "NodeList", 
                "Name": "removedNodes"
            }, 
            {
                "Type": "Node", 
                "Name": "previousSibling"
            }, 
            {
                "Type": "Node", 
                "Name": "nextSibling"
            }, 
            {
                "Type": "DOMString", 
                "Name": "attributeName"
            }, 
            {
                "Type": "DOMString", 
                "Name": "attributeNamespace"
            }, 
            {
                "Type": "DOMString", 
                "Name": "oldValue"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MutationRecord", 
        "FileName": "MutationRecord.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "opacity"
            }, 
            {
                "Type": "double", 
                "Name": "scrollLeft"
            }, 
            {
                "Type": "double", 
                "Name": "scrollTop"
            }, 
            {
                "Type": "DOMMatrix", 
                "Name": "transform"
            }
        ], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "supports", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "attribute"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "disconnect", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "CompositorProxy", 
        "FileName": "CompositorProxy.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "byteLength"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ArrayBuffer", 
        "FileName": "ArrayBuffer.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMImplementation", 
                "Name": "implementation"
            }, 
            {
                "Type": "DOMString", 
                "Name": "URL"
            }, 
            {
                "Type": "DOMString", 
                "Name": "documentURI"
            }, 
            {
                "Type": "DOMString", 
                "Name": "origin"
            }, 
            {
                "Type": "DOMString", 
                "Name": "compatMode"
            }, 
            {
                "Type": "DOMString", 
                "Name": "characterSet"
            }, 
            {
                "Type": "DOMString", 
                "Name": "inputEncoding"
            }, 
            {
                "Type": "DOMString", 
                "Name": "contentType"
            }, 
            {
                "Type": "DocumentType", 
                "Name": "doctype"
            }, 
            {
                "Type": "Element", 
                "Name": "documentElement"
            }, 
            {
                "Type": "DOMString", 
                "Name": "xmlEncoding"
            }, 
            {
                "Type": "DOMString", 
                "Name": "xmlVersion"
            }, 
            {
                "Type": "boolean", 
                "Name": "xmlStandalone"
            }, 
            {
                "Type": "Location", 
                "Name": "location"
            }, 
            {
                "Type": "DOMString", 
                "Name": "domain"
            }, 
            {
                "Type": "DOMString", 
                "Name": "referrer"
            }, 
            {
                "Type": "DOMString", 
                "Name": "cookie"
            }, 
            {
                "Type": "DOMString", 
                "Name": "lastModified"
            }, 
            {
                "Type": "DocumentReadyState", 
                "Name": "readyState"
            }, 
            {
                "Type": "DOMString", 
                "Name": "title"
            }, 
            {
                "Type": "DOMString", 
                "Name": "dir"
            }, 
            {
                "Type": "HTMLElement", 
                "Name": "body"
            }, 
            {
                "Type": "HTMLHeadElement", 
                "Name": "head"
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "images"
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "embeds"
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "plugins"
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "links"
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "forms"
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "scripts"
            }, 
            {
                "Type": "HTMLScriptElement", 
                "Name": "currentScript"
            }, 
            {
                "Type": "Window", 
                "Name": "defaultView"
            }, 
            {
                "Type": "Element", 
                "Name": "activeElement"
            }, 
            {
                "Type": "DOMString", 
                "Name": "designMode"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onreadystatechange"
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "anchors"
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "applets"
            }, 
            {
                "Type": "StyleSheetList", 
                "Name": "styleSheets"
            }, 
            {
                "Type": "DOMString", 
                "Name": "selectedStylesheetSet"
            }, 
            {
                "Type": "DOMString", 
                "Name": "preferredStylesheetSet"
            }, 
            {
                "Type": "Element", 
                "Name": "scrollingElement"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpointerlockchange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpointerlockerror"
            }, 
            {
                "Type": "Element", 
                "Name": "pointerLockElement"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontouchstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontouchend"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontouchmove"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontouchcancel"
            }, 
            {
                "Type": "boolean", 
                "Name": "hidden"
            }, 
            {
                "Type": "VisibilityState", 
                "Name": "visibilityState"
            }, 
            {
                "Type": "DOMString", 
                "Name": "charset"
            }, 
            {
                "Type": "DOMString", 
                "Name": "defaultCharset"
            }, 
            {
                "Type": "DOMString", 
                "Name": "webkitVisibilityState"
            }, 
            {
                "Type": "boolean", 
                "Name": "webkitHidden"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onbeforecopy"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onbeforecut"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onbeforepaste"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oncopy"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oncut"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpaste"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onsearch"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onsecuritypolicyviolation"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onselectionchange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onselectstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwheel"
            }
        ], 
        "Operation": [
            {
                "Type": "HTMLCollection", 
                "Name": "getElementsByTagName", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }
                ]
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "getElementsByTagNameNS", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }
                ]
            }, 
            {
                "Type": "HTMLCollection", 
                "Name": "getElementsByClassName", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "classNames"
                    }
                ]
            }, 
            {
                "Type": "Element", 
                "Name": "createElement", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }
                ]
            }, 
            {
                "Type": "Element", 
                "Name": "createElementNS", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "qualifiedName"
                    }
                ]
            }, 
            {
                "Type": "DocumentFragment", 
                "Name": "createDocumentFragment", 
                "Argument": []
            }, 
            {
                "Type": "Text", 
                "Name": "createTextNode", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "Comment", 
                "Name": "createComment", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "ProcessingInstruction", 
                "Name": "createProcessingInstruction", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "importNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "deep"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "adoptNode", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "node"
                    }
                ]
            }, 
            {
                "Type": "Attr", 
                "Name": "createAttribute", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }
                ]
            }, 
            {
                "Type": "Attr", 
                "Name": "createAttributeNS", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "qualifiedName"
                    }
                ]
            }, 
            {
                "Type": "Event", 
                "Name": "createEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "eventType"
                    }
                ]
            }, 
            {
                "Type": "Range", 
                "Name": "createRange", 
                "Argument": []
            }, 
            {
                "Type": "NodeIterator", 
                "Name": "createNodeIterator", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "root"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "whatToShow"
                    }, 
                    {
                        "Type": "NodeFilter", 
                        "Name": "filter"
                    }
                ]
            }, 
            {
                "Type": "TreeWalker", 
                "Name": "createTreeWalker", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "root"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "whatToShow"
                    }, 
                    {
                        "Type": "NodeFilter", 
                        "Name": "filter"
                    }
                ]
            }, 
            {
                "Type": "CDATASection", 
                "Name": "createCDATASection", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "NodeList", 
                "Name": "getElementsByName", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "elementName"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "open", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "write", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "text"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "writeln", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "text"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "hasFocus", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "execCommand", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "commandId"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "showUI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "queryCommandEnabled", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "commandId"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "queryCommandIndeterm", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "commandId"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "queryCommandState", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "commandId"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "queryCommandSupported", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "commandId"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "queryCommandValue", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "commandId"
                    }
                ]
            }, 
            {
                "Type": "Element", 
                "Name": "elementFromPoint", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "elementsFromPoint", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "Selection", 
                "Name": "getSelection", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "exitPointerLock", 
                "Argument": []
            }, 
            {
                "Type": "Touch", 
                "Name": "createTouch", 
                "Argument": [
                    {
                        "Type": "Window", 
                        "Name": "window"
                    }, 
                    {
                        "Type": "EventTarget", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "identifier"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "pageX"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "pageY"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "screenX"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "screenY"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "radiusX"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "radiusY"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "rotationAngle"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "force"
                    }
                ]
            }, 
            {
                "Type": "TouchList", 
                "Name": "createTouchList", 
                "Argument": [
                    {
                        "Type": "Touch", 
                        "Name": "touches"
                    }
                ]
            }, 
            {
                "Type": "CustomElementConstructor", 
                "Name": "registerElement", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "ElementRegistrationOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "Element", 
                "Name": "createElement", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "typeExtension"
                    }
                ]
            }, 
            {
                "Type": "Element", 
                "Name": "createElementNS", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "qualifiedName"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "typeExtension"
                    }
                ]
            }, 
            {
                "Type": "Range", 
                "Name": "caretRangeFromPoint", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getCSSCanvasContext", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "contextId"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "height"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Document", 
        "FileName": "Document.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onwebkitfullscreenchange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwebkitfullscreenerror"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "requestFullscreen", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "webkitRequestFullScreen", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "webkitRequestFullscreen", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Element", 
        "FileName": "ElementFullscreen.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "wholeText"
            }
        ], 
        "Operation": [
            {
                "Type": "Text", 
                "Name": "splitText", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "offset"
                    }
                ]
            }, 
            {
                "Type": "NodeList", 
                "Name": "getDestinationInsertionPoints", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Text", 
        "FileName": "Text.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "createObjectURL", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "blob"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "revokeObjectURL", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "URL", 
        "FileName": "URL.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "x"
            }, 
            {
                "Type": "double", 
                "Name": "y"
            }, 
            {
                "Type": "double", 
                "Name": "width"
            }, 
            {
                "Type": "double", 
                "Name": "height"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "DOMRect", 
        "FileName": "DOMRect.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "highResTime"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "FrameRequestCallback", 
        "FileName": "FrameRequestCallback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "Comment", 
        "FileName": "Comment.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "namespaceURI"
            }, 
            {
                "Type": "DOMString", 
                "Name": "prefix"
            }, 
            {
                "Type": "DOMString", 
                "Name": "localName"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "value"
            }, 
            {
                "Type": "DOMString", 
                "Name": "nodeValue"
            }, 
            {
                "Type": "DOMString", 
                "Name": "textContent"
            }, 
            {
                "Type": "Element", 
                "Name": "ownerElement"
            }, 
            {
                "Type": "boolean", 
                "Name": "specified"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Attr", 
        "FileName": "Attr.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "byteLength"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SharedArrayBuffer", 
        "FileName": "SharedArrayBuffer.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "Uint32Array", 
        "FileName": "Uint32Array.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "remove", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "ChildNode", 
        "FileName": "ChildNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "identifier"
            }, 
            {
                "Type": "EventTarget", 
                "Name": "target"
            }, 
            {
                "Type": "double", 
                "Name": "screenX"
            }, 
            {
                "Type": "double", 
                "Name": "screenY"
            }, 
            {
                "Type": "double", 
                "Name": "clientX"
            }, 
            {
                "Type": "double", 
                "Name": "clientY"
            }, 
            {
                "Type": "double", 
                "Name": "pageX"
            }, 
            {
                "Type": "double", 
                "Name": "pageY"
            }, 
            {
                "Type": "float", 
                "Name": "radiusX"
            }, 
            {
                "Type": "float", 
                "Name": "radiusY"
            }, 
            {
                "Type": "float", 
                "Name": "rotationAngle"
            }, 
            {
                "Type": "float", 
                "Name": "force"
            }, 
            {
                "Type": "float", 
                "Name": "webkitRadiusX"
            }, 
            {
                "Type": "float", 
                "Name": "webkitRadiusY"
            }, 
            {
                "Type": "float", 
                "Name": "webkitRotationAngle"
            }, 
            {
                "Type": "float", 
                "Name": "webkitForce"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Touch", 
        "FileName": "Touch.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Element", 
                "Name": "activeElement"
            }, 
            {
                "Type": "Element", 
                "Name": "host"
            }, 
            {
                "Type": "ShadowRoot", 
                "Name": "olderShadowRoot"
            }, 
            {
                "Type": "DOMString", 
                "Name": "innerHTML"
            }, 
            {
                "Type": "StyleSheetList", 
                "Name": "styleSheets"
            }, 
            {
                "Type": "boolean", 
                "Name": "delegatesFocus"
            }
        ], 
        "Operation": [
            {
                "Type": "Selection", 
                "Name": "getSelection", 
                "Argument": []
            }, 
            {
                "Type": "Element", 
                "Name": "elementFromPoint", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "elementsFromPoint", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "Node", 
                "Name": "cloneNode", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "deep"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "ShadowRoot", 
        "FileName": "ShadowRoot.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long long", 
                "Name": "size"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }
        ], 
        "Operation": [
            {
                "Type": "Blob", 
                "Name": "slice", 
                "Argument": [
                    {
                        "Type": "long long", 
                        "Name": "start"
                    }, 
                    {
                        "Type": "long long", 
                        "Name": "end"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "contentType"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Blob", 
        "FileName": "Blob.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "long long", 
                "Name": "lastModified"
            }, 
            {
                "Type": "Date", 
                "Name": "lastModifiedDate"
            }, 
            {
                "Type": "DOMString", 
                "Name": "webkitRelativePath"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "File", 
        "FileName": "File.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "code"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "NOT_FOUND_ERR", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SECURITY_ERR", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "ABORT_ERR", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "NOT_READABLE_ERR", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "ENCODING_ERR", 
                "Value": "5"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "NO_MODIFICATION_ALLOWED_ERR", 
                "Value": "6"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "INVALID_STATE_ERR", 
                "Value": "7"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SYNTAX_ERR", 
                "Value": "8"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "INVALID_MODIFICATION_ERR", 
                "Value": "9"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "QUOTA_EXCEEDED_ERR", 
                "Value": "10"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "TYPE_MISMATCH_ERR", 
                "Value": "11"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATH_EXISTS_ERR", 
                "Value": "12"
            }
        ], 
        "Name": "FileError", 
        "FileName": "FileError.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "readyState"
            }, 
            {
                "Type": null, 
                "Name": "result"
            }, 
            {
                "Type": "FileError", 
                "Name": "error"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onloadstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onprogress"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onload"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onabort"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onloadend"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "readAsArrayBuffer", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "blob"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "readAsBinaryString", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "blob"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "readAsText", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "blob"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "label"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "readAsDataURL", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "blob"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "abort", 
                "Argument": []
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "EMPTY", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "LOADING", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DONE", 
                "Value": "2"
            }
        ], 
        "Name": "FileReader", 
        "FileName": "FileReader.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "ArrayBuffer", 
                "Name": "readAsArrayBuffer", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "blob"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "readAsBinaryString", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "blob"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "readAsText", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "blob"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "label"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "readAsDataURL", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "blob"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "FileReaderSync", 
        "FileName": "FileReaderSync.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "File", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "FileList", 
        "FileName": "FileList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "delay"
            }, 
            {
                "Type": "double", 
                "Name": "endDelay"
            }, 
            {
                "Type": "DOMString", 
                "Name": "fill"
            }, 
            {
                "Type": "double", 
                "Name": "iterationStart"
            }, 
            {
                "Type": "double", 
                "Name": "iterations"
            }, 
            {
                "Type": null, 
                "Name": "duration"
            }, 
            {
                "Type": "double", 
                "Name": "playbackRate"
            }, 
            {
                "Type": "DOMString", 
                "Name": "direction"
            }, 
            {
                "Type": "DOMString", 
                "Name": "easing"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "AnimationEffectTiming", 
        "FileName": "AnimationEffectTiming.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "EffectModel", 
        "FileName": "EffectModel.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AnimationEffectTiming", 
                "Name": "timing"
            }, 
            {
                "Type": "ComputedTimingProperties", 
                "Name": "computedTiming"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "AnimationEffectReadOnly", 
        "FileName": "AnimationEffectReadOnly.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AnimationTimeline", 
                "Name": "timeline"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Document", 
        "FileName": "DocumentAnimation.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "KeyframeEffect", 
        "FileName": "KeyframeEffect.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Animation", 
                "Name": "animate", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "effect"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "timing"
                    }
                ]
            }, 
            {
                "Type": "Animation", 
                "Name": "animate", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "effect"
                    }, 
                    {
                        "Type": "KeyframeEffectOptions", 
                        "Name": "timing"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getAnimations", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Element", 
        "FileName": "ElementAnimation.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "currentTime"
            }, 
            {
                "Type": "double", 
                "Name": "playbackRate"
            }
        ], 
        "Operation": [
            {
                "Type": "Animation", 
                "Name": "play", 
                "Argument": [
                    {
                        "Type": "AnimationEffectReadOnly", 
                        "Name": "source"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getAnimations", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "AnimationTimeline", 
        "FileName": "AnimationTimeline.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AnimationEffectReadOnly", 
                "Name": "effect"
            }, 
            {
                "Type": "double", 
                "Name": "startTime"
            }, 
            {
                "Type": "double", 
                "Name": "currentTime"
            }, 
            {
                "Type": "double", 
                "Name": "playbackRate"
            }, 
            {
                "Type": "AnimationPlayState", 
                "Name": "playState"
            }, 
            {
                "Type": "double", 
                "Name": "startClip"
            }, 
            {
                "Type": "double", 
                "Name": "endClip"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onfinish"
            }, 
            {
                "Type": "Promise", 
                "Name": "finished"
            }, 
            {
                "Type": "Promise", 
                "Name": "ready"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "finish", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "play", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "pause", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "reverse", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "cancel", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Animation", 
        "FileName": "Animation.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "DataTransferItem", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DataTransferItem", 
                "Name": "add", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "data"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }
                ]
            }, 
            {
                "Type": "DataTransferItem", 
                "Name": "add", 
                "Argument": [
                    {
                        "Type": "File", 
                        "Name": "file"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "remove", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clear", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "DataTransferItemList", 
        "FileName": "DataTransferItemList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "kind"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "getAsString", 
                "Argument": [
                    {
                        "Type": "StringCallback", 
                        "Name": "callback"
                    }
                ]
            }, 
            {
                "Type": "Blob", 
                "Name": "getAsFile", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "DataTransferItem", 
        "FileName": "DataTransferItem.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "dropEffect"
            }, 
            {
                "Type": "DOMString", 
                "Name": "effectAllowed"
            }, 
            {
                "Type": "DataTransferItemList", 
                "Name": "items"
            }, 
            {
                "Type": "DOMString", 
                "Name": "types"
            }, 
            {
                "Type": "FileList", 
                "Name": "files"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setDragImage", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "image"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "getData", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "format"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setData", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearData", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "format"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DataTransfer", 
        "FileName": "DataTransfer.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onloadstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onprogress"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onabort"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onload"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontimeout"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onloadend"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "XMLHttpRequestEventTarget", 
        "FileName": "XMLHttpRequestEventTarget.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onreadystatechange"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "readyState"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "timeout"
            }, 
            {
                "Type": "boolean", 
                "Name": "withCredentials"
            }, 
            {
                "Type": "XMLHttpRequestUpload", 
                "Name": "upload"
            }, 
            {
                "Type": "DOMString", 
                "Name": "responseURL"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "status"
            }, 
            {
                "Type": "DOMString", 
                "Name": "statusText"
            }, 
            {
                "Type": "XMLHttpRequestResponseType", 
                "Name": "responseType"
            }, 
            {
                "Type": null, 
                "Name": "response"
            }, 
            {
                "Type": "DOMString", 
                "Name": "responseText"
            }, 
            {
                "Type": "Document", 
                "Name": "responseXML"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "open", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "method"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "open", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "method"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "async"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "username"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "password"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setRequestHeader", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "body"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "abort", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "getResponseHeader", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "getAllResponseHeaders", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "overrideMimeType", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "mime"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "UNSENT", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "OPENED", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "HEADERS_RECEIVED", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "LOADING", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DONE", 
                "Value": "4"
            }
        ], 
        "Name": "XMLHttpRequest", 
        "FileName": "XMLHttpRequest.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long long", 
                "Name": "position"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "totalSize"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "XMLHttpRequestProgressEvent", 
        "FileName": "XMLHttpRequestProgressEvent.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "XMLHttpRequestUpload", 
        "FileName": "XMLHttpRequestUpload.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AutocompleteErrorReason", 
                "Name": "reason"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "AutocompleteErrorEvent", 
        "FileName": "AutocompleteErrorEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "screenX"
            }, 
            {
                "Type": "long", 
                "Name": "screenY"
            }, 
            {
                "Type": "long", 
                "Name": "clientX"
            }, 
            {
                "Type": "long", 
                "Name": "clientY"
            }, 
            {
                "Type": "boolean", 
                "Name": "ctrlKey"
            }, 
            {
                "Type": "boolean", 
                "Name": "shiftKey"
            }, 
            {
                "Type": "boolean", 
                "Name": "altKey"
            }, 
            {
                "Type": "boolean", 
                "Name": "metaKey"
            }, 
            {
                "Type": "short", 
                "Name": "button"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "buttons"
            }, 
            {
                "Type": "EventTarget", 
                "Name": "relatedTarget"
            }, 
            {
                "Type": "long", 
                "Name": "pageX"
            }, 
            {
                "Type": "long", 
                "Name": "pageY"
            }, 
            {
                "Type": "long", 
                "Name": "x"
            }, 
            {
                "Type": "long", 
                "Name": "y"
            }, 
            {
                "Type": "long", 
                "Name": "offsetX"
            }, 
            {
                "Type": "long", 
                "Name": "offsetY"
            }, 
            {
                "Type": "long", 
                "Name": "movementX"
            }, 
            {
                "Type": "long", 
                "Name": "movementY"
            }, 
            {
                "Type": "Node", 
                "Name": "fromElement"
            }, 
            {
                "Type": "Node", 
                "Name": "toElement"
            }, 
            {
                "Type": "long", 
                "Name": "which"
            }, 
            {
                "Type": "long", 
                "Name": "webkitMovementX"
            }, 
            {
                "Type": "long", 
                "Name": "webkitMovementY"
            }, 
            {
                "Type": "long", 
                "Name": "layerX"
            }, 
            {
                "Type": "long", 
                "Name": "layerY"
            }, 
            {
                "Type": "DataTransfer", 
                "Name": "dataTransfer"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "initMouseEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "bubbles"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "cancelable"
                    }, 
                    {
                        "Type": "Window", 
                        "Name": "view"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "detail"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "screenX"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "screenY"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "clientX"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "clientY"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "ctrlKey"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "altKey"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "shiftKey"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "metaKey"
                    }, 
                    {
                        "Type": "unsigned short", 
                        "Name": "button"
                    }, 
                    {
                        "Type": "EventTarget", 
                        "Name": "relatedTarget"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "MouseEvent", 
        "FileName": "MouseEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "documentURI"
            }, 
            {
                "Type": "DOMString", 
                "Name": "referrer"
            }, 
            {
                "Type": "DOMString", 
                "Name": "blockedURI"
            }, 
            {
                "Type": "DOMString", 
                "Name": "violatedDirective"
            }, 
            {
                "Type": "DOMString", 
                "Name": "effectiveDirective"
            }, 
            {
                "Type": "DOMString", 
                "Name": "originalPolicy"
            }, 
            {
                "Type": "DOMString", 
                "Name": "sourceFile"
            }, 
            {
                "Type": "long", 
                "Name": "statusCode"
            }, 
            {
                "Type": "long", 
                "Name": "lineNumber"
            }, 
            {
                "Type": "long", 
                "Name": "columnNumber"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SecurityPolicyViolationEvent", 
        "FileName": "SecurityPolicyViolationEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": null, 
                "Name": "state"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "PopStateEvent", 
        "FileName": "PopStateEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DataTransfer", 
                "Name": "clipboardData"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ClipboardEvent", 
        "FileName": "ClipboardEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "deltaX"
            }, 
            {
                "Type": "double", 
                "Name": "deltaY"
            }, 
            {
                "Type": "double", 
                "Name": "deltaZ"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "deltaMode"
            }, 
            {
                "Type": "long", 
                "Name": "wheelDeltaX"
            }, 
            {
                "Type": "long", 
                "Name": "wheelDeltaY"
            }, 
            {
                "Type": "long", 
                "Name": "wheelDelta"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "DOM_DELTA_PIXEL", 
                "Value": "0x00"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "DOM_DELTA_LINE", 
                "Value": "0x01"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "DOM_DELTA_PAGE", 
                "Value": "0x02"
            }
        ], 
        "Name": "WheelEvent", 
        "FileName": "WheelEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "currentTime"
            }, 
            {
                "Type": "double", 
                "Name": "timelineTime"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "AnimationPlayerEvent", 
        "FileName": "AnimationPlayerEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "message"
            }, 
            {
                "Type": "DOMString", 
                "Name": "filename"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "lineno"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "colno"
            }, 
            {
                "Type": null, 
                "Name": "error"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ErrorEvent", 
        "FileName": "ErrorEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "key"
            }, 
            {
                "Type": "DOMString", 
                "Name": "code"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "location"
            }, 
            {
                "Type": "boolean", 
                "Name": "ctrlKey"
            }, 
            {
                "Type": "boolean", 
                "Name": "shiftKey"
            }, 
            {
                "Type": "boolean", 
                "Name": "altKey"
            }, 
            {
                "Type": "boolean", 
                "Name": "metaKey"
            }, 
            {
                "Type": "boolean", 
                "Name": "repeat"
            }, 
            {
                "Type": "long", 
                "Name": "charCode"
            }, 
            {
                "Type": "long", 
                "Name": "keyCode"
            }, 
            {
                "Type": "long", 
                "Name": "which"
            }, 
            {
                "Type": "DOMString", 
                "Name": "keyIdentifier"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "keyLocation"
            }
        ], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "getModifierState", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "keyArg"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "initKeyboardEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "bubbles"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "cancelable"
                    }, 
                    {
                        "Type": "Window", 
                        "Name": "view"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "keyIdentifier"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "ctrlKey"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "altKey"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "shiftKey"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "metaKey"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "DOM_KEY_LOCATION_STANDARD", 
                "Value": "0x00"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "DOM_KEY_LOCATION_LEFT", 
                "Value": "0x01"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "DOM_KEY_LOCATION_RIGHT", 
                "Value": "0x02"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "DOM_KEY_LOCATION_NUMPAD", 
                "Value": "0x03"
            }
        ], 
        "Name": "KeyboardEvent", 
        "FileName": "KeyboardEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventTarget", 
                "Name": "relatedTarget"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "RelatedEvent", 
        "FileName": "RelatedEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "data"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "initTextEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "typeArg"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "canBubbleArg"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "cancelableArg"
                    }, 
                    {
                        "Type": "Window", 
                        "Name": "viewArg"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "dataArg"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TextEvent", 
        "FileName": "TextEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "oldURL"
            }, 
            {
                "Type": "DOMString", 
                "Name": "newURL"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "initHashChangeEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "canBubble"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "cancelable"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "oldURL"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "newURL"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HashChangeEvent", 
        "FileName": "HashChangeEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "lengthComputable"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "loaded"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "total"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ProgressEvent", 
        "FileName": "ProgressEvent.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "addEventListener", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "EventListener", 
                        "Name": "listener"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "capture"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeEventListener", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "EventListener", 
                        "Name": "listener"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "capture"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "dispatchEvent", 
                "Argument": [
                    {
                        "Type": "Event", 
                        "Name": "event"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "EventTarget", 
        "FileName": "EventTarget.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "persisted"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "PageTransitionEvent", 
        "FileName": "PageTransitionEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "TouchList", 
                "Name": "touches"
            }, 
            {
                "Type": "TouchList", 
                "Name": "targetTouches"
            }, 
            {
                "Type": "TouchList", 
                "Name": "changedTouches"
            }, 
            {
                "Type": "boolean", 
                "Name": "altKey"
            }, 
            {
                "Type": "boolean", 
                "Name": "metaKey"
            }, 
            {
                "Type": "boolean", 
                "Name": "ctrlKey"
            }, 
            {
                "Type": "boolean", 
                "Name": "shiftKey"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "initTouchEvent", 
                "Argument": [
                    {
                        "Type": "TouchList", 
                        "Name": "touches"
                    }, 
                    {
                        "Type": "TouchList", 
                        "Name": "targetTouches"
                    }, 
                    {
                        "Type": "TouchList", 
                        "Name": "changedTouches"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "Window", 
                        "Name": "view"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "unused1"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "unused2"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "unused3"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "unused4"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "ctrlKey"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "altKey"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "shiftKey"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "metaKey"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TouchEvent", 
        "FileName": "TouchEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": null, 
                "Name": "detail"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "initCustomEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "bubbles"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "cancelable"
                    }, 
                    {
                        "Type": null, 
                        "Name": "detail"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CustomEvent", 
        "FileName": "CustomEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "EventTarget", 
                "Name": "target"
            }, 
            {
                "Type": "EventTarget", 
                "Name": "currentTarget"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "eventPhase"
            }, 
            {
                "Type": "boolean", 
                "Name": "bubbles"
            }, 
            {
                "Type": "boolean", 
                "Name": "cancelable"
            }, 
            {
                "Type": "boolean", 
                "Name": "defaultPrevented"
            }, 
            {
                "Type": "boolean", 
                "Name": "isTrusted"
            }, 
            {
                "Type": "DOMTimeStamp", 
                "Name": "timeStamp"
            }, 
            {
                "Type": "EventTarget", 
                "Name": "path"
            }, 
            {
                "Type": "EventTarget", 
                "Name": "srcElement"
            }, 
            {
                "Type": "boolean", 
                "Name": "returnValue"
            }, 
            {
                "Type": "boolean", 
                "Name": "cancelBubble"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "stopPropagation", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "stopImmediatePropagation", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "preventDefault", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "initEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "bubbles"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "cancelable"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "NONE", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CAPTURING_PHASE", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "AT_TARGET", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "BUBBLING_PHASE", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MOUSEDOWN", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MOUSEUP", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MOUSEOVER", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MOUSEOUT", 
                "Value": "8"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MOUSEMOVE", 
                "Value": "16"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "MOUSEDRAG", 
                "Value": "32"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CLICK", 
                "Value": "64"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DBLCLICK", 
                "Value": "128"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "KEYDOWN", 
                "Value": "256"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "KEYUP", 
                "Value": "512"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "KEYPRESS", 
                "Value": "1024"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DRAGDROP", 
                "Value": "2048"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "FOCUS", 
                "Value": "4096"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "BLUR", 
                "Value": "8192"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SELECT", 
                "Value": "16384"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CHANGE", 
                "Value": "32768"
            }
        ], 
        "Name": "Event", 
        "FileName": "Event.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "animationName"
            }, 
            {
                "Type": "double", 
                "Name": "elapsedTime"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "AnimationEvent", 
        "FileName": "AnimationEvent.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "Event", 
                        "Name": "event"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "EventListener", 
        "FileName": "EventListener.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventTarget", 
                "Name": "relatedTarget"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "FocusEvent", 
        "FileName": "FocusEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "url"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ResourceProgressEvent", 
        "FileName": "ResourceProgressEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Node", 
                "Name": "relatedNode"
            }, 
            {
                "Type": "DOMString", 
                "Name": "prevValue"
            }, 
            {
                "Type": "DOMString", 
                "Name": "newValue"
            }, 
            {
                "Type": "DOMString", 
                "Name": "attrName"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "attrChange"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "initMutationEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "bubbles"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "cancelable"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "relatedNode"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "prevValue"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "newValue"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "attrName"
                    }, 
                    {
                        "Type": "unsigned short", 
                        "Name": "attrChange"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "MODIFICATION", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "ADDITION", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "REMOVAL", 
                "Value": "3"
            }
        ], 
        "Name": "MutationEvent", 
        "FileName": "MutationEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Promise", 
                "Name": "promise"
            }, 
            {
                "Type": null, 
                "Name": "reason"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "PromiseRejectionEvent", 
        "FileName": "PromiseRejectionEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "data"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "initCompositionEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "bubbles"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "cancelable"
                    }, 
                    {
                        "Type": "Window", 
                        "Name": "view"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "data"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CompositionEvent", 
        "FileName": "CompositionEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Window", 
                "Name": "view"
            }, 
            {
                "Type": "long", 
                "Name": "detail"
            }, 
            {
                "Type": "InputDevice", 
                "Name": "sourceDevice"
            }, 
            {
                "Type": "long", 
                "Name": "which"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "initUIEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "bubbles"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "cancelable"
                    }, 
                    {
                        "Type": "Window", 
                        "Name": "view"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "detail"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "UIEvent", 
        "FileName": "UIEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "reason"
            }, 
            {
                "Type": "DOMString", 
                "Name": "url"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "status"
            }, 
            {
                "Type": "DOMString", 
                "Name": "message"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ApplicationCacheErrorEvent", 
        "FileName": "ApplicationCacheErrorEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "returnValue"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "BeforeUnloadEvent", 
        "FileName": "BeforeUnloadEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "pointerId"
            }, 
            {
                "Type": "double", 
                "Name": "width"
            }, 
            {
                "Type": "double", 
                "Name": "height"
            }, 
            {
                "Type": "float", 
                "Name": "pressure"
            }, 
            {
                "Type": "long", 
                "Name": "tiltX"
            }, 
            {
                "Type": "long", 
                "Name": "tiltY"
            }, 
            {
                "Type": "DOMString", 
                "Name": "pointerType"
            }, 
            {
                "Type": "boolean", 
                "Name": "isPrimary"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "PointerEvent", 
        "FileName": "PointerEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": null, 
                "Name": "data"
            }, 
            {
                "Type": "DOMString", 
                "Name": "origin"
            }, 
            {
                "Type": "DOMString", 
                "Name": "lastEventId"
            }, 
            {
                "Type": "EventTarget", 
                "Name": "source"
            }, 
            {
                "Type": "MessagePort", 
                "Name": "ports"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "initMessageEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "typeArg"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "canBubbleArg"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "cancelableArg"
                    }, 
                    {
                        "Type": null, 
                        "Name": "dataArg"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "originArg"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "lastEventIdArg"
                    }, 
                    {
                        "Type": "Window", 
                        "Name": "sourceArg"
                    }, 
                    {
                        "Type": "MessagePort", 
                        "Name": "portsArg"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "MessageEvent", 
        "FileName": "MessageEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "propertyName"
            }, 
            {
                "Type": "double", 
                "Name": "elapsedTime"
            }, 
            {
                "Type": "DOMString", 
                "Name": "pseudoElement"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "TransitionEvent", 
        "FileName": "TransitionEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "maxTouchPoints"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorEvents.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "WorkerPerformance", 
                "Name": "performance"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "WorkerGlobalScope", 
        "FileName": "WorkerGlobalScopePerformance.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "PerformanceMark", 
        "FileName": "PerformanceMark.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onwebkitresourcetimingbufferfull"
            }, 
            {
                "Type": "PerformanceTiming", 
                "Name": "timing"
            }, 
            {
                "Type": "PerformanceNavigation", 
                "Name": "navigation"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onframetimingbufferfull"
            }, 
            {
                "Type": "MemoryInfo", 
                "Name": "memory"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "now", 
                "Argument": []
            }, 
            {
                "Type": "PerformanceEntryList", 
                "Name": "getEntries", 
                "Argument": []
            }, 
            {
                "Type": "PerformanceEntryList", 
                "Name": "getEntriesByType", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "entryType"
                    }
                ]
            }, 
            {
                "Type": "PerformanceEntryList", 
                "Name": "getEntriesByName", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "entryType"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "webkitClearResourceTimings", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "webkitSetResourceTimingBufferSize", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "maxSize"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "mark", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "markName"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearMarks", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "markName"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "measure", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "measureName"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "startMark"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "endMark"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearMeasures", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "measureName"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearFrameTimings", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setFrameTimingBufferSize", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "maxSize"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Performance", 
        "FileName": "Performance.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "workerStart"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SharedWorker", 
        "FileName": "SharedWorkerPerformance.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "sourceFrame"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "PerformanceRenderTiming", 
        "FileName": "PerformanceRenderTiming.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "totalJSHeapSize"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "usedJSHeapSize"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "jsHeapSizeLimit"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MemoryInfo", 
        "FileName": "MemoryInfo.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "entryType"
            }, 
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "startTime"
            }, 
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "duration"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "PerformanceEntry", 
        "FileName": "PerformanceEntry.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "type"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "redirectCount"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "TYPE_NAVIGATE", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "TYPE_RELOAD", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "TYPE_BACK_FORWARD", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "TYPE_RESERVED", 
                "Value": "255"
            }
        ], 
        "Name": "PerformanceNavigation", 
        "FileName": "PerformanceNavigation.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "sourceFrame"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "PerformanceCompositeTiming", 
        "FileName": "PerformanceCompositeTiming.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long long", 
                "Name": "navigationStart"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "unloadEventStart"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "unloadEventEnd"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "redirectStart"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "redirectEnd"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "fetchStart"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "domainLookupStart"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "domainLookupEnd"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "connectStart"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "connectEnd"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "secureConnectionStart"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "requestStart"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "responseStart"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "responseEnd"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "domLoading"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "domInteractive"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "domContentLoadedEventStart"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "domContentLoadedEventEnd"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "domComplete"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "loadEventStart"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "loadEventEnd"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "PerformanceTiming", 
        "FileName": "PerformanceTiming.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onwebkitresourcetimingbufferfull"
            }, 
            {
                "Type": "MemoryInfo", 
                "Name": "memory"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "now", 
                "Argument": []
            }, 
            {
                "Type": "PerformanceEntryList", 
                "Name": "getEntries", 
                "Argument": []
            }, 
            {
                "Type": "PerformanceEntryList", 
                "Name": "getEntriesByType", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "entryType"
                    }
                ]
            }, 
            {
                "Type": "PerformanceEntryList", 
                "Name": "getEntriesByName", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "entryType"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "webkitClearResourceTimings", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "webkitSetResourceTimingBufferSize", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "maxSize"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "mark", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "markName"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearMarks", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "markName"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "measure", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "measureName"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "startMark"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "endMark"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearMeasures", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "measureName"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "WorkerPerformance", 
        "FileName": "WorkerPerformance.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Performance", 
                "Name": "performance"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowPerformance.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "PerformanceMeasure", 
        "FileName": "PerformanceMeasure.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MemoryInfo", 
                "Name": "memory"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Console", 
        "FileName": "ConsoleMemory.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "initiatorType"
            }, 
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "workerStart"
            }, 
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "redirectStart"
            }, 
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "redirectEnd"
            }, 
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "fetchStart"
            }, 
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "domainLookupStart"
            }, 
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "domainLookupEnd"
            }, 
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "connectStart"
            }, 
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "connectEnd"
            }, 
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "secureConnectionStart"
            }, 
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "requestStart"
            }, 
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "responseStart"
            }, 
            {
                "Type": "DOMHighResTimeStamp", 
                "Name": "responseEnd"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "PerformanceResourceTiming", 
        "FileName": "PerformanceResourceTiming.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "float", 
                "Name": "zoomFactor", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setInjectedScriptForOrigin", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "origin"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "script"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "copyText", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "text"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "platform", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "showContextMenu", 
                "Argument": [
                    {
                        "Type": "MouseEvent", 
                        "Name": "event"
                    }, 
                    {
                        "Type": null, 
                        "Name": "items"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "showContextMenuAtPoint", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": null, 
                        "Name": "items"
                    }, 
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "sendMessageToBackend", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "message"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "sendMessageToEmbedder", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "message"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "getSelectionBackgroundColor", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "getSelectionForegroundColor", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "isUnderTest", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "isHostedMode", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "DevToolsHost", 
        "FileName": "DevToolsHost.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "resume", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "stepOver", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "startPropertyChange", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "propertyName"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "changeProperty", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "cssDelta"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "endPropertyChange", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "InspectorOverlayHost", 
        "FileName": "InspectorOverlayHost.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "XPathExpression", 
                "Name": "createExpression", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "expression"
                    }, 
                    {
                        "Type": "XPathNSResolver", 
                        "Name": "resolver"
                    }
                ]
            }, 
            {
                "Type": "XPathNSResolver", 
                "Name": "createNSResolver", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "nodeResolver"
                    }
                ]
            }, 
            {
                "Type": "XPathResult", 
                "Name": "evaluate", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "expression"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "contextNode"
                    }, 
                    {
                        "Type": "XPathNSResolver", 
                        "Name": "resolver"
                    }, 
                    {
                        "Type": "unsigned short", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "object", 
                        "Name": "inResult"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Document", 
        "FileName": "DocumentXPathEvaluator.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "serializeToString", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "root"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "XMLSerializer", 
        "FileName": "XMLSerializer.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "XPathExpression", 
                "Name": "createExpression", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "expression"
                    }, 
                    {
                        "Type": "XPathNSResolver", 
                        "Name": "resolver"
                    }
                ]
            }, 
            {
                "Type": "XPathNSResolver", 
                "Name": "createNSResolver", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "nodeResolver"
                    }
                ]
            }, 
            {
                "Type": "XPathResult", 
                "Name": "evaluate", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "expression"
                    }, 
                    {
                        "Type": "Node", 
                        "Name": "contextNode"
                    }, 
                    {
                        "Type": "XPathNSResolver", 
                        "Name": "resolver"
                    }, 
                    {
                        "Type": "unsigned short", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "object", 
                        "Name": "inResult"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "XPathEvaluator", 
        "FileName": "XPathEvaluator.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Document", 
                "Name": "parseFromString", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "str"
                    }, 
                    {
                        "Type": "SupportedType", 
                        "Name": "type"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DOMParser", 
        "FileName": "DOMParser.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "lookupNamespaceURI", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "prefix"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "XPathNSResolver", 
        "FileName": "XPathNSResolver.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "resultType"
            }, 
            {
                "Type": "double", 
                "Name": "numberValue"
            }, 
            {
                "Type": "DOMString", 
                "Name": "stringValue"
            }, 
            {
                "Type": "boolean", 
                "Name": "booleanValue"
            }, 
            {
                "Type": "Node", 
                "Name": "singleNodeValue"
            }, 
            {
                "Type": "boolean", 
                "Name": "invalidIteratorState"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "snapshotLength"
            }
        ], 
        "Operation": [
            {
                "Type": "Node", 
                "Name": "iterateNext", 
                "Argument": []
            }, 
            {
                "Type": "Node", 
                "Name": "snapshotItem", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "ANY_TYPE", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "NUMBER_TYPE", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "STRING_TYPE", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "BOOLEAN_TYPE", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "UNORDERED_NODE_ITERATOR_TYPE", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "ORDERED_NODE_ITERATOR_TYPE", 
                "Value": "5"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "UNORDERED_NODE_SNAPSHOT_TYPE", 
                "Value": "6"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "ORDERED_NODE_SNAPSHOT_TYPE", 
                "Value": "7"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "ANY_UNORDERED_NODE_TYPE", 
                "Value": "8"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "FIRST_ORDERED_NODE_TYPE", 
                "Value": "9"
            }
        ], 
        "Name": "XPathResult", 
        "FileName": "XPathResult.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "XPathResult", 
                "Name": "evaluate", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "contextNode"
                    }, 
                    {
                        "Type": "unsigned short", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "object", 
                        "Name": "inResult"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "XPathExpression", 
        "FileName": "XPathExpression.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "importStylesheet", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "style"
                    }
                ]
            }, 
            {
                "Type": "DocumentFragment", 
                "Name": "transformToFragment", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "source"
                    }, 
                    {
                        "Type": "Document", 
                        "Name": "output"
                    }
                ]
            }, 
            {
                "Type": "Document", 
                "Name": "transformToDocument", 
                "Argument": [
                    {
                        "Type": "Node", 
                        "Name": "source"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setParameter", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "getParameter", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeParameter", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "namespaceURI"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "localName"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearParameters", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "reset", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "XSLTProcessor", 
        "FileName": "XSLTProcessor.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "transformDocumentToTreeView", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "noStyleMessage"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Document", 
        "FileName": "DocumentXMLTreeViewer.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "x1"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "y1"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "x2"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "y2"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGLinearGradientElement", 
        "FileName": "SVGLinearGradientElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGSymbolElement", 
        "FileName": "SVGSymbolElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGMetadataElement", 
        "FileName": "SVGMetadataElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegClosePath", 
        "FileName": "SVGPathSegClosePath.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }, 
            {
                "Type": "float", 
                "Name": "x1"
            }, 
            {
                "Type": "float", 
                "Name": "y1"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegCurvetoQuadraticRel", 
        "FileName": "SVGPathSegCurvetoQuadraticRel.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFEFuncAElement", 
        "FileName": "SVGFEFuncAElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGTransformList", 
                "Name": "transform"
            }, 
            {
                "Type": "SVGElement", 
                "Name": "viewTarget"
            }, 
            {
                "Type": "DOMString", 
                "Name": "viewBoxString"
            }, 
            {
                "Type": "DOMString", 
                "Name": "preserveAspectRatioString"
            }, 
            {
                "Type": "DOMString", 
                "Name": "transformString"
            }, 
            {
                "Type": "DOMString", 
                "Name": "viewTargetString"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGViewSpec", 
        "FileName": "SVGViewSpec.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "in1"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "stdDeviationX"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "stdDeviationY"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setStdDeviation", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "stdDeviationX"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "stdDeviationY"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGFEGaussianBlurElement", 
        "FileName": "SVGFEGaussianBlurElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "clipPathUnits"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGClipPathElement", 
        "FileName": "SVGClipPathElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "media"
            }, 
            {
                "Type": "DOMString", 
                "Name": "title"
            }, 
            {
                "Type": "StyleSheet", 
                "Name": "sheet"
            }, 
            {
                "Type": "boolean", 
                "Name": "disabled"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGStyleElement", 
        "FileName": "SVGStyleElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "baseVal"
            }, 
            {
                "Type": "DOMString", 
                "Name": "animVal"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimatedString", 
        "FileName": "SVGAnimatedString.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "in1"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "type"
            }, 
            {
                "Type": "SVGAnimatedNumberList", 
                "Name": "values"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOLORMATRIX_TYPE_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOLORMATRIX_TYPE_MATRIX", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOLORMATRIX_TYPE_SATURATE", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOLORMATRIX_TYPE_HUEROTATE", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA", 
                "Value": "4"
            }
        ], 
        "Name": "SVGFEColorMatrixElement", 
        "FileName": "SVGFEColorMatrixElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "type"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGScriptElement", 
        "FileName": "SVGScriptElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGNumberList", 
                "Name": "baseVal"
            }, 
            {
                "Type": "SVGNumberList", 
                "Name": "animVal"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimatedNumberList", 
        "FileName": "SVGAnimatedNumberList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegLinetoAbs", 
        "FileName": "SVGPathSegLinetoAbs.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "gradientUnits"
            }, 
            {
                "Type": "SVGAnimatedTransformList", 
                "Name": "gradientTransform"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "spreadMethod"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_SPREADMETHOD_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_SPREADMETHOD_PAD", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_SPREADMETHOD_REFLECT", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_SPREADMETHOD_REPEAT", 
                "Value": "3"
            }
        ], 
        "Name": "SVGGradientElement", 
        "FileName": "SVGGradientElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "baseVal"
            }, 
            {
                "Type": "long", 
                "Name": "animVal"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimatedInteger", 
        "FileName": "SVGAnimatedInteger.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGPreserveAspectRatio", 
                "Name": "baseVal"
            }, 
            {
                "Type": "SVGPreserveAspectRatio", 
                "Name": "animVal"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimatedPreserveAspectRatio", 
        "FileName": "SVGAnimatedPreserveAspectRatio.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGTitleElement", 
        "FileName": "SVGTitleElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegMovetoRel", 
        "FileName": "SVGPathSegMovetoRel.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "pathSegType"
            }, 
            {
                "Type": "DOMString", 
                "Name": "pathSegTypeAsLetter"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_CLOSEPATH", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_MOVETO_ABS", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_MOVETO_REL", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_LINETO_ABS", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_LINETO_REL", 
                "Value": "5"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_CURVETO_CUBIC_ABS", 
                "Value": "6"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_CURVETO_CUBIC_REL", 
                "Value": "7"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_CURVETO_QUADRATIC_ABS", 
                "Value": "8"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_CURVETO_QUADRATIC_REL", 
                "Value": "9"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_ARC_ABS", 
                "Value": "10"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_ARC_REL", 
                "Value": "11"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_LINETO_HORIZONTAL_ABS", 
                "Value": "12"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_LINETO_HORIZONTAL_REL", 
                "Value": "13"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_LINETO_VERTICAL_ABS", 
                "Value": "14"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_LINETO_VERTICAL_REL", 
                "Value": "15"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS", 
                "Value": "16"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_CURVETO_CUBIC_SMOOTH_REL", 
                "Value": "17"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS", 
                "Value": "18"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL", 
                "Value": "19"
            }
        ], 
        "Name": "SVGPathSeg", 
        "FileName": "SVGPathSeg.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedRect", 
                "Name": "viewBox"
            }, 
            {
                "Type": "SVGAnimatedPreserveAspectRatio", 
                "Name": "preserveAspectRatio"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFitToViewBox", 
        "FileName": "SVGFitToViewBox.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "numberOfItems"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "clear", 
                "Argument": []
            }, 
            {
                "Type": "SVGTransform", 
                "Name": "initialize", 
                "Argument": [
                    {
                        "Type": "SVGTransform", 
                        "Name": "newItem"
                    }
                ]
            }, 
            {
                "Type": "SVGTransform", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGTransform", 
                "Name": "insertItemBefore", 
                "Argument": [
                    {
                        "Type": "SVGTransform", 
                        "Name": "newItem"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGTransform", 
                "Name": "replaceItem", 
                "Argument": [
                    {
                        "Type": "SVGTransform", 
                        "Name": "newItem"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGTransform", 
                "Name": "removeItem", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGTransform", 
                "Name": "appendItem", 
                "Argument": [
                    {
                        "Type": "SVGTransform", 
                        "Name": "newItem"
                    }
                ]
            }, 
            {
                "Type": "SVGTransform", 
                "Name": "createSVGTransformFromMatrix", 
                "Argument": [
                    {
                        "Type": "SVGMatrix", 
                        "Name": "matrix"
                    }
                ]
            }, 
            {
                "Type": "SVGTransform", 
                "Name": "consolidate", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "SVGTransform", 
                        "Name": "newItem"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGTransformList", 
        "FileName": "SVGTransformList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGStringList", 
                "Name": "viewTarget"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGViewElement", 
        "FileName": "SVGViewElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "target"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAElement", 
        "FileName": "SVGAElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "in1"
            }, 
            {
                "Type": "SVGAnimatedString", 
                "Name": "in2"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "mode"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_FEBLEND_MODE_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FEBLEND_MODE_NORMAL", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FEBLEND_MODE_MULTIPLY", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FEBLEND_MODE_SCREEN", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FEBLEND_MODE_DARKEN", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FEBLEND_MODE_LIGHTEN", 
                "Value": "5"
            }
        ], 
        "Name": "SVGFEBlendElement", 
        "FileName": "SVGFEBlendElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "azimuth"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "elevation"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFEDistantLightElement", 
        "FileName": "SVGFEDistantLightElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }, 
            {
                "Type": "float", 
                "Name": "r1"
            }, 
            {
                "Type": "float", 
                "Name": "r2"
            }, 
            {
                "Type": "float", 
                "Name": "angle"
            }, 
            {
                "Type": "boolean", 
                "Name": "largeArcFlag"
            }, 
            {
                "Type": "boolean", 
                "Name": "sweepFlag"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegArcAbs", 
        "FileName": "SVGPathSegArcAbs.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedPreserveAspectRatio", 
                "Name": "preserveAspectRatio"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFEImageElement", 
        "FileName": "SVGFEImageElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "baseVal"
            }, 
            {
                "Type": "boolean", 
                "Name": "animVal"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimatedBoolean", 
        "FileName": "SVGAnimatedBoolean.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "in1"
            }, 
            {
                "Type": "SVGAnimatedString", 
                "Name": "in2"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "scale"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "xChannelSelector"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "yChannelSelector"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_CHANNEL_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_CHANNEL_R", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_CHANNEL_G", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_CHANNEL_B", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_CHANNEL_A", 
                "Value": "4"
            }
        ], 
        "Name": "SVGFEDisplacementMapElement", 
        "FileName": "SVGFEDisplacementMapElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "type"
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "matrix"
            }, 
            {
                "Type": "float", 
                "Name": "angle"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setMatrix", 
                "Argument": [
                    {
                        "Type": "SVGMatrix", 
                        "Name": "matrix"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setTranslate", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "tx"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "ty"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setScale", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "sx"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "sy"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setRotate", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "angle"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "cx"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "cy"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setSkewX", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "angle"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setSkewY", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "angle"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_TRANSFORM_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_TRANSFORM_MATRIX", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_TRANSFORM_TRANSLATE", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_TRANSFORM_SCALE", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_TRANSFORM_ROTATE", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_TRANSFORM_SKEWX", 
                "Value": "5"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_TRANSFORM_SKEWY", 
                "Value": "6"
            }
        ], 
        "Name": "SVGTransform", 
        "FileName": "SVGTransform.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGPointList", 
                "Name": "points"
            }, 
            {
                "Type": "SVGPointList", 
                "Name": "animatedPoints"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPolygonElement", 
        "FileName": "SVGPolygonElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegLinetoHorizontalRel", 
        "FileName": "SVGPathSegLinetoHorizontalRel.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegCurvetoQuadraticSmoothRel", 
        "FileName": "SVGPathSegCurvetoQuadraticSmoothRel.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "x"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "y"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "width"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "height"
            }, 
            {
                "Type": "SVGAnimatedString", 
                "Name": "result"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFilterPrimitiveStandardAttributes", 
        "FileName": "SVGFilterPrimitiveStandardAttributes.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGMPathElement", 
        "FileName": "SVGMPathElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGSetElement", 
        "FileName": "SVGSetElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGLength", 
                "Name": "baseVal"
            }, 
            {
                "Type": "SVGLength", 
                "Name": "animVal"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimatedLength", 
        "FileName": "SVGAnimatedLength.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "in1"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "operator"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "radiusX"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "radiusY"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_MORPHOLOGY_OPERATOR_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_MORPHOLOGY_OPERATOR_ERODE", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_MORPHOLOGY_OPERATOR_DILATE", 
                "Value": "2"
            }
        ], 
        "Name": "SVGFEMorphologyElement", 
        "FileName": "SVGFEMorphologyElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "x"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "y"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "z"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFEPointLightElement", 
        "FileName": "SVGFEPointLightElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "x"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "y"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGCursorElement", 
        "FileName": "SVGCursorElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGDiscardElement", 
        "FileName": "SVGDiscardElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAngle", 
                "Name": "baseVal"
            }, 
            {
                "Type": "SVGAngle", 
                "Name": "animVal"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimatedAngle", 
        "FileName": "SVGAnimatedAngle.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }, 
            {
                "Type": "float", 
                "Name": "x2"
            }, 
            {
                "Type": "float", 
                "Name": "y2"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegCurvetoCubicSmoothAbs", 
        "FileName": "SVGPathSegCurvetoCubicSmoothAbs.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "unitType"
            }, 
            {
                "Type": "float", 
                "Name": "value"
            }, 
            {
                "Type": "float", 
                "Name": "valueInSpecifiedUnits"
            }, 
            {
                "Type": "DOMString", 
                "Name": "valueAsString"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "newValueSpecifiedUnits", 
                "Argument": [
                    {
                        "Type": "unsigned short", 
                        "Name": "unitType"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "valueInSpecifiedUnits"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "convertToSpecifiedUnits", 
                "Argument": [
                    {
                        "Type": "unsigned short", 
                        "Name": "unitType"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_ANGLETYPE_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_ANGLETYPE_UNSPECIFIED", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_ANGLETYPE_DEG", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_ANGLETYPE_RAD", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_ANGLETYPE_GRAD", 
                "Value": "4"
            }
        ], 
        "Name": "SVGAngle", 
        "FileName": "SVGAngle.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "pathLength"
            }, 
            {
                "Type": "SVGPathSegList", 
                "Name": "pathSegList"
            }, 
            {
                "Type": "SVGPathSegList", 
                "Name": "animatedPathSegList"
            }, 
            {
                "Type": "SVGPathSegList", 
                "Name": "normalizedPathSegList"
            }, 
            {
                "Type": "SVGPathSegList", 
                "Name": "animatedNormalizedPathSegList"
            }
        ], 
        "Operation": [
            {
                "Type": "float", 
                "Name": "getTotalLength", 
                "Argument": []
            }, 
            {
                "Type": "SVGPoint", 
                "Name": "getPointAtLength", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "distance"
                    }
                ]
            }, 
            {
                "Type": "unsigned long", 
                "Name": "getPathSegAtLength", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "distance"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegClosePath", 
                "Name": "createSVGPathSegClosePath", 
                "Argument": []
            }, 
            {
                "Type": "SVGPathSegMovetoAbs", 
                "Name": "createSVGPathSegMovetoAbs", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegMovetoRel", 
                "Name": "createSVGPathSegMovetoRel", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegLinetoAbs", 
                "Name": "createSVGPathSegLinetoAbs", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegLinetoRel", 
                "Name": "createSVGPathSegLinetoRel", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegCurvetoCubicAbs", 
                "Name": "createSVGPathSegCurvetoCubicAbs", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x1"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y1"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x2"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y2"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegCurvetoCubicRel", 
                "Name": "createSVGPathSegCurvetoCubicRel", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x1"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y1"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x2"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y2"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegCurvetoQuadraticAbs", 
                "Name": "createSVGPathSegCurvetoQuadraticAbs", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x1"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y1"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegCurvetoQuadraticRel", 
                "Name": "createSVGPathSegCurvetoQuadraticRel", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x1"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y1"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegArcAbs", 
                "Name": "createSVGPathSegArcAbs", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "r1"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "r2"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "angle"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "largeArcFlag"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "sweepFlag"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegArcRel", 
                "Name": "createSVGPathSegArcRel", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "r1"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "r2"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "angle"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "largeArcFlag"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "sweepFlag"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegLinetoHorizontalAbs", 
                "Name": "createSVGPathSegLinetoHorizontalAbs", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegLinetoHorizontalRel", 
                "Name": "createSVGPathSegLinetoHorizontalRel", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegLinetoVerticalAbs", 
                "Name": "createSVGPathSegLinetoVerticalAbs", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegLinetoVerticalRel", 
                "Name": "createSVGPathSegLinetoVerticalRel", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegCurvetoCubicSmoothAbs", 
                "Name": "createSVGPathSegCurvetoCubicSmoothAbs", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x2"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y2"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegCurvetoCubicSmoothRel", 
                "Name": "createSVGPathSegCurvetoCubicSmoothRel", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x2"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y2"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegCurvetoQuadraticSmoothAbs", 
                "Name": "createSVGPathSegCurvetoQuadraticSmoothAbs", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSegCurvetoQuadraticSmoothRel", 
                "Name": "createSVGPathSegCurvetoQuadraticSmoothRel", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGPathElement", 
        "FileName": "SVGPathElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "value"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGNumber", 
        "FileName": "SVGNumber.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }, 
            {
                "Type": "float", 
                "Name": "width"
            }, 
            {
                "Type": "float", 
                "Name": "height"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGRect", 
        "FileName": "SVGRect.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "in1"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFEMergeNodeElement", 
        "FileName": "SVGFEMergeNodeElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "numberOfItems"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "clear", 
                "Argument": []
            }, 
            {
                "Type": "SVGNumber", 
                "Name": "initialize", 
                "Argument": [
                    {
                        "Type": "SVGNumber", 
                        "Name": "newItem"
                    }
                ]
            }, 
            {
                "Type": "SVGNumber", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGNumber", 
                "Name": "insertItemBefore", 
                "Argument": [
                    {
                        "Type": "SVGNumber", 
                        "Name": "newItem"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGNumber", 
                "Name": "replaceItem", 
                "Argument": [
                    {
                        "Type": "SVGNumber", 
                        "Name": "newItem"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGNumber", 
                "Name": "removeItem", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGNumber", 
                "Name": "appendItem", 
                "Argument": [
                    {
                        "Type": "SVGNumber", 
                        "Name": "newItem"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "SVGNumber", 
                        "Name": "newItem"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGNumberList", 
        "FileName": "SVGNumberList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "x"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "y"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "width"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "height"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGUseElement", 
        "FileName": "SVGUseElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegLinetoRel", 
        "FileName": "SVGPathSegLinetoRel.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGTransformList", 
                "Name": "baseVal"
            }, 
            {
                "Type": "SVGTransformList", 
                "Name": "animVal"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimatedTransformList", 
        "FileName": "SVGAnimatedTransformList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "cx"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "cy"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "r"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGCircleElement", 
        "FileName": "SVGCircleElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGPointList", 
                "Name": "points"
            }, 
            {
                "Type": "SVGPointList", 
                "Name": "animatedPoints"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPolylineElement", 
        "FileName": "SVGPolylineElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "startOffset"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "method"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "spacing"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "TEXTPATH_METHODTYPE_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "TEXTPATH_METHODTYPE_ALIGN", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "TEXTPATH_METHODTYPE_STRETCH", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "TEXTPATH_SPACINGTYPE_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "TEXTPATH_SPACINGTYPE_AUTO", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "TEXTPATH_SPACINGTYPE_EXACT", 
                "Value": "2"
            }
        ], 
        "Name": "SVGTextPathElement", 
        "FileName": "SVGTextPathElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGElement", 
                "Name": "targetElement"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onbegin"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onend"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onrepeat"
            }
        ], 
        "Operation": [
            {
                "Type": "float", 
                "Name": "getStartTime", 
                "Argument": []
            }, 
            {
                "Type": "float", 
                "Name": "getCurrentTime", 
                "Argument": []
            }, 
            {
                "Type": "float", 
                "Name": "getSimpleDuration", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "beginElement", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "beginElementAt", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "offset"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "endElement", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "endElementAt", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "offset"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGAnimationElement", 
        "FileName": "SVGAnimationElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "x"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "y"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "width"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "height"
            }, 
            {
                "Type": "SVGRect", 
                "Name": "viewport"
            }, 
            {
                "Type": "boolean", 
                "Name": "useCurrentView"
            }, 
            {
                "Type": "SVGViewSpec", 
                "Name": "currentView"
            }, 
            {
                "Type": "float", 
                "Name": "currentScale"
            }, 
            {
                "Type": "SVGPoint", 
                "Name": "currentTranslate"
            }, 
            {
                "Type": "float", 
                "Name": "pixelUnitToMillimeterX"
            }, 
            {
                "Type": "float", 
                "Name": "pixelUnitToMillimeterY"
            }, 
            {
                "Type": "float", 
                "Name": "screenPixelToMillimeterX"
            }, 
            {
                "Type": "float", 
                "Name": "screenPixelToMillimeterY"
            }
        ], 
        "Operation": [
            {
                "Type": "unsigned long", 
                "Name": "suspendRedraw", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "maxWaitMilliseconds"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "unsuspendRedraw", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "suspendHandleId"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "unsuspendRedrawAll", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "forceRedraw", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "pauseAnimations", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "unpauseAnimations", 
                "Argument": []
            }, 
            {
                "Type": "boolean", 
                "Name": "animationsPaused", 
                "Argument": []
            }, 
            {
                "Type": "float", 
                "Name": "getCurrentTime", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setCurrentTime", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "seconds"
                    }
                ]
            }, 
            {
                "Type": "NodeList", 
                "Name": "getIntersectionList", 
                "Argument": [
                    {
                        "Type": "SVGRect", 
                        "Name": "rect"
                    }, 
                    {
                        "Type": "SVGElement", 
                        "Name": "referenceElement"
                    }
                ]
            }, 
            {
                "Type": "NodeList", 
                "Name": "getEnclosureList", 
                "Argument": [
                    {
                        "Type": "SVGRect", 
                        "Name": "rect"
                    }, 
                    {
                        "Type": "SVGElement", 
                        "Name": "referenceElement"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "checkIntersection", 
                "Argument": [
                    {
                        "Type": "SVGElement", 
                        "Name": "element"
                    }, 
                    {
                        "Type": "SVGRect", 
                        "Name": "rect"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "checkEnclosure", 
                "Argument": [
                    {
                        "Type": "SVGElement", 
                        "Name": "element"
                    }, 
                    {
                        "Type": "SVGRect", 
                        "Name": "rect"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deselectAll", 
                "Argument": []
            }, 
            {
                "Type": "SVGNumber", 
                "Name": "createSVGNumber", 
                "Argument": []
            }, 
            {
                "Type": "SVGLength", 
                "Name": "createSVGLength", 
                "Argument": []
            }, 
            {
                "Type": "SVGAngle", 
                "Name": "createSVGAngle", 
                "Argument": []
            }, 
            {
                "Type": "SVGPoint", 
                "Name": "createSVGPoint", 
                "Argument": []
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "createSVGMatrix", 
                "Argument": []
            }, 
            {
                "Type": "SVGRect", 
                "Name": "createSVGRect", 
                "Argument": []
            }, 
            {
                "Type": "SVGTransform", 
                "Name": "createSVGTransform", 
                "Argument": []
            }, 
            {
                "Type": "SVGTransform", 
                "Name": "createSVGTransformFromMatrix", 
                "Argument": [
                    {
                        "Type": "SVGMatrix", 
                        "Name": "matrix"
                    }
                ]
            }, 
            {
                "Type": "Element", 
                "Name": "getElementById", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "elementId"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGSVGElement", 
        "FileName": "SVGSVGElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }, 
            {
                "Type": "float", 
                "Name": "x1"
            }, 
            {
                "Type": "float", 
                "Name": "y1"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegCurvetoQuadraticAbs", 
        "FileName": "SVGPathSegCurvetoQuadraticAbs.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "a"
            }, 
            {
                "Type": "double", 
                "Name": "b"
            }, 
            {
                "Type": "double", 
                "Name": "c"
            }, 
            {
                "Type": "double", 
                "Name": "d"
            }, 
            {
                "Type": "double", 
                "Name": "e"
            }, 
            {
                "Type": "double", 
                "Name": "f"
            }
        ], 
        "Operation": [
            {
                "Type": "SVGMatrix", 
                "Name": "multiply", 
                "Argument": [
                    {
                        "Type": "SVGMatrix", 
                        "Name": "secondMatrix"
                    }
                ]
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "inverse", 
                "Argument": []
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "translate", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "scale", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "scaleFactor"
                    }
                ]
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "scaleNonUniform", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "scaleFactorX"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "scaleFactorY"
                    }
                ]
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "rotate", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "angle"
                    }
                ]
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "rotateFromVector", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "flipX", 
                "Argument": []
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "flipY", 
                "Argument": []
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "skewX", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "angle"
                    }
                ]
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "skewY", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "angle"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGMatrix", 
        "FileName": "SVGMatrix.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "filterUnits"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "primitiveUnits"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "x"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "y"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "width"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "height"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFilterElement", 
        "FileName": "SVGFilterElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "in1"
            }, 
            {
                "Type": "SVGAnimatedInteger", 
                "Name": "orderX"
            }, 
            {
                "Type": "SVGAnimatedInteger", 
                "Name": "orderY"
            }, 
            {
                "Type": "SVGAnimatedNumberList", 
                "Name": "kernelMatrix"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "divisor"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "bias"
            }, 
            {
                "Type": "SVGAnimatedInteger", 
                "Name": "targetX"
            }, 
            {
                "Type": "SVGAnimatedInteger", 
                "Name": "targetY"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "edgeMode"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "kernelUnitLengthX"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "kernelUnitLengthY"
            }, 
            {
                "Type": "SVGAnimatedBoolean", 
                "Name": "preserveAlpha"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_EDGEMODE_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_EDGEMODE_DUPLICATE", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_EDGEMODE_WRAP", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_EDGEMODE_NONE", 
                "Value": "3"
            }
        ], 
        "Name": "SVGFEConvolveMatrixElement", 
        "FileName": "SVGFEConvolveMatrixElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "numberOfItems"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "clear", 
                "Argument": []
            }, 
            {
                "Type": "SVGPoint", 
                "Name": "initialize", 
                "Argument": [
                    {
                        "Type": "SVGPoint", 
                        "Name": "newItem"
                    }
                ]
            }, 
            {
                "Type": "SVGPoint", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGPoint", 
                "Name": "insertItemBefore", 
                "Argument": [
                    {
                        "Type": "SVGPoint", 
                        "Name": "newItem"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGPoint", 
                "Name": "replaceItem", 
                "Argument": [
                    {
                        "Type": "SVGPoint", 
                        "Name": "newItem"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGPoint", 
                "Name": "removeItem", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGPoint", 
                "Name": "appendItem", 
                "Argument": [
                    {
                        "Type": "SVGPoint", 
                        "Name": "newItem"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "SVGPoint", 
                        "Name": "newItem"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGPointList", 
        "FileName": "SVGPointList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "in2"
            }, 
            {
                "Type": "SVGAnimatedString", 
                "Name": "in1"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "operator"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "k1"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "k2"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "k3"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "k4"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOMPOSITE_OPERATOR_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOMPOSITE_OPERATOR_OVER", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOMPOSITE_OPERATOR_IN", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOMPOSITE_OPERATOR_OUT", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOMPOSITE_OPERATOR_ATOP", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOMPOSITE_OPERATOR_XOR", 
                "Value": "5"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC", 
                "Value": "6"
            }
        ], 
        "Name": "SVGFECompositeElement", 
        "FileName": "SVGFECompositeElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "in1"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "surfaceScale"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "specularConstant"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "specularExponent"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "kernelUnitLengthX"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "kernelUnitLengthY"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFESpecularLightingElement", 
        "FileName": "SVGFESpecularLightingElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGLengthList", 
                "Name": "baseVal"
            }, 
            {
                "Type": "SVGLengthList", 
                "Name": "animVal"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimatedLengthList", 
        "FileName": "SVGAnimatedLengthList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "textLength"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "lengthAdjust"
            }
        ], 
        "Operation": [
            {
                "Type": "long", 
                "Name": "getNumberOfChars", 
                "Argument": []
            }, 
            {
                "Type": "float", 
                "Name": "getComputedTextLength", 
                "Argument": []
            }, 
            {
                "Type": "float", 
                "Name": "getSubStringLength", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "charnum"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "nchars"
                    }
                ]
            }, 
            {
                "Type": "SVGPoint", 
                "Name": "getStartPositionOfChar", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "charnum"
                    }
                ]
            }, 
            {
                "Type": "SVGPoint", 
                "Name": "getEndPositionOfChar", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "charnum"
                    }
                ]
            }, 
            {
                "Type": "SVGRect", 
                "Name": "getExtentOfChar", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "charnum"
                    }
                ]
            }, 
            {
                "Type": "float", 
                "Name": "getRotationOfChar", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "charnum"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "getCharNumAtPosition", 
                "Argument": [
                    {
                        "Type": "SVGPoint", 
                        "Name": "point"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "selectSubString", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "charnum"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "nchars"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "LENGTHADJUST_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "LENGTHADJUST_SPACING", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "LENGTHADJUST_SPACINGANDGLYPHS", 
                "Value": "2"
            }
        ], 
        "Name": "SVGTextContentElement", 
        "FileName": "SVGTextContentElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "baseVal"
            }, 
            {
                "Type": "float", 
                "Name": "animVal"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimatedNumber", 
        "FileName": "SVGAnimatedNumber.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "x"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "y"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "z"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "pointsAtX"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "pointsAtY"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "pointsAtZ"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "specularExponent"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "limitingConeAngle"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFESpotLightElement", 
        "FileName": "SVGFESpotLightElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "x"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "y"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "width"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "height"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGForeignObjectElement", 
        "FileName": "SVGForeignObjectElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "in1"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFEComponentTransferElement", 
        "FileName": "SVGFEComponentTransferElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "in1"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "dx"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "dy"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFEOffsetElement", 
        "FileName": "SVGFEOffsetElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "refX"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "refY"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "markerUnits"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "markerWidth"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "markerHeight"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "orientType"
            }, 
            {
                "Type": "SVGAnimatedAngle", 
                "Name": "orientAngle"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setOrientToAuto", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setOrientToAngle", 
                "Argument": [
                    {
                        "Type": "SVGAngle", 
                        "Name": "angle"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_MARKERUNITS_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_MARKERUNITS_USERSPACEONUSE", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_MARKERUNITS_STROKEWIDTH", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_MARKER_ORIENT_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_MARKER_ORIENT_AUTO", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_MARKER_ORIENT_ANGLE", 
                "Value": "2"
            }
        ], 
        "Name": "SVGMarkerElement", 
        "FileName": "SVGMarkerElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "y"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegLinetoVerticalRel", 
        "FileName": "SVGPathSegLinetoVerticalRel.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "zoomAndPan"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_ZOOMANDPAN_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_ZOOMANDPAN_DISABLE", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_ZOOMANDPAN_MAGNIFY", 
                "Value": "2"
            }
        ], 
        "Name": "SVGZoomAndPan", 
        "FileName": "SVGZoomAndPan.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "numberOfItems"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "clear", 
                "Argument": []
            }, 
            {
                "Type": "DOMString", 
                "Name": "initialize", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "newItem"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "insertItemBefore", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "item"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "replaceItem", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "newItem"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "removeItem", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "appendItem", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "newItem"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "newItem"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGStringList", 
        "FileName": "SVGStringList.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGTextElement", 
        "FileName": "SVGTextElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }, 
            {
                "Type": "float", 
                "Name": "x1"
            }, 
            {
                "Type": "float", 
                "Name": "y1"
            }, 
            {
                "Type": "float", 
                "Name": "x2"
            }, 
            {
                "Type": "float", 
                "Name": "y2"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegCurvetoCubicRel", 
        "FileName": "SVGPathSegCurvetoCubicRel.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "cx"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "cy"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "r"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "fx"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "fy"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "fr"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGRadialGradientElement", 
        "FileName": "SVGRadialGradientElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimateTransformElement", 
        "FileName": "SVGAnimateTransformElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegLinetoHorizontalAbs", 
        "FileName": "SVGPathSegLinetoHorizontalAbs.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "y"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegLinetoVerticalAbs", 
        "FileName": "SVGPathSegLinetoVerticalAbs.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGRect", 
                "Name": "baseVal"
            }, 
            {
                "Type": "SVGRect", 
                "Name": "animVal"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimatedRect", 
        "FileName": "SVGAnimatedRect.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "href"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGURIReference", 
        "FileName": "SVGURIReference.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "in1"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "dx"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "dy"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "stdDeviationX"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "stdDeviationY"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setStdDeviation", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "stdDeviationX"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "stdDeviationY"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGFEDropShadowElement", 
        "FileName": "SVGFEDropShadowElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGSwitchElement", 
        "FileName": "SVGSwitchElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "cx"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "cy"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "rx"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "ry"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGEllipseElement", 
        "FileName": "SVGEllipseElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }, 
            {
                "Type": "float", 
                "Name": "x2"
            }, 
            {
                "Type": "float", 
                "Name": "y2"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegCurvetoCubicSmoothRel", 
        "FileName": "SVGPathSegCurvetoCubicSmoothRel.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "numberOfItems"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "clear", 
                "Argument": []
            }, 
            {
                "Type": "SVGPathSeg", 
                "Name": "initialize", 
                "Argument": [
                    {
                        "Type": "SVGPathSeg", 
                        "Name": "newItem"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSeg", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSeg", 
                "Name": "insertItemBefore", 
                "Argument": [
                    {
                        "Type": "SVGPathSeg", 
                        "Name": "newItem"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSeg", 
                "Name": "replaceItem", 
                "Argument": [
                    {
                        "Type": "SVGPathSeg", 
                        "Name": "newItem"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSeg", 
                "Name": "removeItem", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGPathSeg", 
                "Name": "appendItem", 
                "Argument": [
                    {
                        "Type": "SVGPathSeg", 
                        "Name": "newItem"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "SVGPathSeg", 
                        "Name": "newItem"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGPathSegList", 
        "FileName": "SVGPathSegList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }, 
            {
                "Type": "float", 
                "Name": "r1"
            }, 
            {
                "Type": "float", 
                "Name": "r2"
            }, 
            {
                "Type": "float", 
                "Name": "angle"
            }, 
            {
                "Type": "boolean", 
                "Name": "largeArcFlag"
            }, 
            {
                "Type": "boolean", 
                "Name": "sweepFlag"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegArcRel", 
        "FileName": "SVGPathSegArcRel.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "in1"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFETileElement", 
        "FileName": "SVGFETileElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "className"
            }, 
            {
                "Type": "CSSStyleDeclaration", 
                "Name": "style"
            }, 
            {
                "Type": "SVGSVGElement", 
                "Name": "ownerSVGElement"
            }, 
            {
                "Type": "SVGElement", 
                "Name": "viewportElement"
            }, 
            {
                "Type": "long", 
                "Name": "tabIndex"
            }, 
            {
                "Type": "Element", 
                "Name": "offsetParent"
            }, 
            {
                "Type": "long", 
                "Name": "offsetTop"
            }, 
            {
                "Type": "long", 
                "Name": "offsetLeft"
            }, 
            {
                "Type": "long", 
                "Name": "offsetWidth"
            }, 
            {
                "Type": "long", 
                "Name": "offsetHeight"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "focus", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "blur", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "SVGElement", 
        "FileName": "SVGElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }
        ], 
        "Operation": [
            {
                "Type": "SVGPoint", 
                "Name": "matrixTransform", 
                "Argument": [
                    {
                        "Type": "SVGMatrix", 
                        "Name": "matrix"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGPoint", 
        "FileName": "SVGPoint.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFEFuncBElement", 
        "FileName": "SVGFEFuncBElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGDescElement", 
        "FileName": "SVGDescElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "x"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "y"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "width"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "height"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "rx"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "ry"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGRectElement", 
        "FileName": "SVGRectElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "type"
            }, 
            {
                "Type": "SVGAnimatedNumberList", 
                "Name": "tableValues"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "slope"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "intercept"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "amplitude"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "exponent"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "offset"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA", 
                "Value": "5"
            }
        ], 
        "Name": "SVGComponentTransferFunctionElement", 
        "FileName": "SVGComponentTransferFunctionElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGSVGElement", 
                "Name": "rootElement"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Document", 
        "FileName": "SVGDocument.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGDefsElement", 
        "FileName": "SVGDefsElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimateMotionElement", 
        "FileName": "SVGAnimateMotionElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGTSpanElement", 
        "FileName": "SVGTSpanElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "baseVal"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "animVal"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimatedEnumeration", 
        "FileName": "SVGAnimatedEnumeration.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "align"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "meetOrSlice"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_PRESERVEASPECTRATIO_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_PRESERVEASPECTRATIO_NONE", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_PRESERVEASPECTRATIO_XMINYMIN", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_PRESERVEASPECTRATIO_XMIDYMIN", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_PRESERVEASPECTRATIO_XMAXYMIN", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_PRESERVEASPECTRATIO_XMINYMID", 
                "Value": "5"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_PRESERVEASPECTRATIO_XMIDYMID", 
                "Value": "6"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_PRESERVEASPECTRATIO_XMAXYMID", 
                "Value": "7"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_PRESERVEASPECTRATIO_XMINYMAX", 
                "Value": "8"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_PRESERVEASPECTRATIO_XMIDYMAX", 
                "Value": "9"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_PRESERVEASPECTRATIO_XMAXYMAX", 
                "Value": "10"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_MEETORSLICE_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_MEETORSLICE_MEET", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_MEETORSLICE_SLICE", 
                "Value": "2"
            }
        ], 
        "Name": "SVGPreserveAspectRatio", 
        "FileName": "SVGPreserveAspectRatio.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGRect", 
                "Name": "zoomRectScreen"
            }, 
            {
                "Type": "float", 
                "Name": "previousScale"
            }, 
            {
                "Type": "SVGPoint", 
                "Name": "previousTranslate"
            }, 
            {
                "Type": "float", 
                "Name": "newScale"
            }, 
            {
                "Type": "SVGPoint", 
                "Name": "newTranslate"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGZoomEvent", 
        "FileName": "SVGZoomEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedTransformList", 
                "Name": "transform"
            }, 
            {
                "Type": "SVGElement", 
                "Name": "nearestViewportElement"
            }, 
            {
                "Type": "SVGElement", 
                "Name": "farthestViewportElement"
            }
        ], 
        "Operation": [
            {
                "Type": "SVGRect", 
                "Name": "getBBox", 
                "Argument": []
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "getCTM", 
                "Argument": []
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "getScreenCTM", 
                "Argument": []
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "getTransformToElement", 
                "Argument": [
                    {
                        "Type": "SVGElement", 
                        "Name": "element"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGGraphicsElement", 
        "FileName": "SVGGraphicsElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGGElement", 
        "FileName": "SVGGElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFEFuncGElement", 
        "FileName": "SVGFEFuncGElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "offset"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGStopElement", 
        "FileName": "SVGStopElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "isPointInFill", 
                "Argument": [
                    {
                        "Type": "SVGPoint", 
                        "Name": "point"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isPointInStroke", 
                "Argument": [
                    {
                        "Type": "SVGPoint", 
                        "Name": "point"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGGeometryElement", 
        "FileName": "SVGGeometryElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "maskUnits"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "maskContentUnits"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "x"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "y"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "width"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "height"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGMaskElement", 
        "FileName": "SVGMaskElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGAnimateElement", 
        "FileName": "SVGAnimateElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "numberOfItems"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "clear", 
                "Argument": []
            }, 
            {
                "Type": "SVGLength", 
                "Name": "initialize", 
                "Argument": [
                    {
                        "Type": "SVGLength", 
                        "Name": "newItem"
                    }
                ]
            }, 
            {
                "Type": "SVGLength", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGLength", 
                "Name": "insertItemBefore", 
                "Argument": [
                    {
                        "Type": "SVGLength", 
                        "Name": "newItem"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGLength", 
                "Name": "replaceItem", 
                "Argument": [
                    {
                        "Type": "SVGLength", 
                        "Name": "newItem"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGLength", 
                "Name": "removeItem", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "SVGLength", 
                "Name": "appendItem", 
                "Argument": [
                    {
                        "Type": "SVGLength", 
                        "Name": "newItem"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "SVGLength", 
                        "Name": "newItem"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGLengthList", 
        "FileName": "SVGLengthList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "baseFrequencyX"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "baseFrequencyY"
            }, 
            {
                "Type": "SVGAnimatedInteger", 
                "Name": "numOctaves"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "seed"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "stitchTiles"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "type"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_TURBULENCE_TYPE_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_TURBULENCE_TYPE_FRACTALNOISE", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_TURBULENCE_TYPE_TURBULENCE", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_STITCHTYPE_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_STITCHTYPE_STITCH", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_STITCHTYPE_NOSTITCH", 
                "Value": "2"
            }
        ], 
        "Name": "SVGFETurbulenceElement", 
        "FileName": "SVGFETurbulenceElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFEFuncRElement", 
        "FileName": "SVGFEFuncRElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegMovetoAbs", 
        "FileName": "SVGPathSegMovetoAbs.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_UNIT_TYPE_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_UNIT_TYPE_USERSPACEONUSE", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX", 
                "Value": "2"
            }
        ], 
        "Name": "SVGUnitTypes", 
        "FileName": "SVGUnitTypes.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "x1"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "y1"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "x2"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "y2"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGLineElement", 
        "FileName": "SVGLineElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLengthList", 
                "Name": "x"
            }, 
            {
                "Type": "SVGAnimatedLengthList", 
                "Name": "y"
            }, 
            {
                "Type": "SVGAnimatedLengthList", 
                "Name": "dx"
            }, 
            {
                "Type": "SVGAnimatedLengthList", 
                "Name": "dy"
            }, 
            {
                "Type": "SVGAnimatedNumberList", 
                "Name": "rotate"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGTextPositioningElement", 
        "FileName": "SVGTextPositioningElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegCurvetoQuadraticSmoothAbs", 
        "FileName": "SVGPathSegCurvetoQuadraticSmoothAbs.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "patternUnits"
            }, 
            {
                "Type": "SVGAnimatedEnumeration", 
                "Name": "patternContentUnits"
            }, 
            {
                "Type": "SVGAnimatedTransformList", 
                "Name": "patternTransform"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "x"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "y"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "width"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "height"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPatternElement", 
        "FileName": "SVGPatternElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGStringList", 
                "Name": "requiredFeatures"
            }, 
            {
                "Type": "SVGStringList", 
                "Name": "requiredExtensions"
            }, 
            {
                "Type": "SVGStringList", 
                "Name": "systemLanguage"
            }
        ], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "hasExtension", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "extension"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SVGTests", 
        "FileName": "SVGTests.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedString", 
                "Name": "in1"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "surfaceScale"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "diffuseConstant"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "kernelUnitLengthX"
            }, 
            {
                "Type": "SVGAnimatedNumber", 
                "Name": "kernelUnitLengthY"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFEDiffuseLightingElement", 
        "FileName": "SVGFEDiffuseLightingElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFEMergeElement", 
        "FileName": "SVGFEMergeElement.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGFEFloodElement", 
        "FileName": "SVGFEFloodElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "unitType"
            }, 
            {
                "Type": "float", 
                "Name": "value"
            }, 
            {
                "Type": "float", 
                "Name": "valueInSpecifiedUnits"
            }, 
            {
                "Type": "DOMString", 
                "Name": "valueAsString"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "newValueSpecifiedUnits", 
                "Argument": [
                    {
                        "Type": "unsigned short", 
                        "Name": "unitType"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "valueInSpecifiedUnits"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "convertToSpecifiedUnits", 
                "Argument": [
                    {
                        "Type": "unsigned short", 
                        "Name": "unitType"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "SVG_LENGTHTYPE_UNKNOWN", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_LENGTHTYPE_NUMBER", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_LENGTHTYPE_PERCENTAGE", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_LENGTHTYPE_EMS", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_LENGTHTYPE_EXS", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_LENGTHTYPE_PX", 
                "Value": "5"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_LENGTHTYPE_CM", 
                "Value": "6"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_LENGTHTYPE_MM", 
                "Value": "7"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_LENGTHTYPE_IN", 
                "Value": "8"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_LENGTHTYPE_PT", 
                "Value": "9"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SVG_LENGTHTYPE_PC", 
                "Value": "10"
            }
        ], 
        "Name": "SVGLength", 
        "FileName": "SVGLength.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SVGAnimatedLength", 
                "Name": "x"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "y"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "width"
            }, 
            {
                "Type": "SVGAnimatedLength", 
                "Name": "height"
            }, 
            {
                "Type": "SVGAnimatedPreserveAspectRatio", 
                "Name": "preserveAspectRatio"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGImageElement", 
        "FileName": "SVGImageElement.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "x"
            }, 
            {
                "Type": "float", 
                "Name": "y"
            }, 
            {
                "Type": "float", 
                "Name": "x1"
            }, 
            {
                "Type": "float", 
                "Name": "y1"
            }, 
            {
                "Type": "float", 
                "Name": "x2"
            }, 
            {
                "Type": "float", 
                "Name": "y2"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SVGPathSegCurvetoCubicAbs", 
        "FileName": "SVGPathSegCurvetoCubicAbs.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "PermissionState", 
                "Name": "status"
            }, 
            {
                "Type": "PermissionState", 
                "Name": "state"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onchange"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "PermissionStatus", 
        "FileName": "PermissionStatus.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Permissions", 
                "Name": "permissions"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "WorkerNavigator", 
        "FileName": "WorkerNavigatorPermissions.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "query", 
                "Argument": [
                    {
                        "Type": "object", 
                        "Name": "permission"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "request", 
                "Argument": [
                    {
                        "Type": "object", 
                        "Name": "permission"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "revoke", 
                "Argument": [
                    {
                        "Type": "object", 
                        "Name": "permission"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Permissions", 
        "FileName": "Permissions.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Permissions", 
                "Name": "permissions"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorPermissions.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onsync"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onperiodicsync"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ServiceWorkerGlobalScope", 
        "FileName": "ServiceWorkerGlobalScopeSync.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SyncManager", 
                "Name": "sync"
            }, 
            {
                "Type": "PeriodicSyncManager", 
                "Name": "periodicSync"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ServiceWorkerRegistration", 
        "FileName": "ServiceWorkerRegistrationSync.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SyncRegistration", 
                "Name": "registration"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SyncEvent", 
        "FileName": "SyncEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "minPossiblePeriod"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "register", 
                "Argument": [
                    {
                        "Type": "PeriodicSyncRegistrationOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "getRegistration", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "tag"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "getRegistrations", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "permissionState", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "PeriodicSyncManager", 
        "FileName": "PeriodicSyncManager.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "tag"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "minPeriod"
            }, 
            {
                "Type": "SyncNetworkState", 
                "Name": "networkState"
            }, 
            {
                "Type": "SyncPowerState", 
                "Name": "powerState"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "unregister", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "PeriodicSyncRegistration", 
        "FileName": "PeriodicSyncRegistration.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "register", 
                "Argument": [
                    {
                        "Type": "SyncRegistrationOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "getRegistration", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "tag"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "getRegistrations", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "permissionState", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "SyncManager", 
        "FileName": "SyncManager.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "PeriodicSyncRegistration", 
                "Name": "registration"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "PeriodicSyncEvent", 
        "FileName": "PeriodicSyncEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "tag"
            }, 
            {
                "Type": "Promise", 
                "Name": "done"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "unregister", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "SyncRegistration", 
        "FileName": "SyncRegistration.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MediaSession", 
                "Name": "session"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLMediaElement", 
        "FileName": "HTMLMediaElementMediaSession.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "activate", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "deactivate", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "MediaSession", 
        "FileName": "MediaSession.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "createImageBitmap", 
                "Argument": [
                    {
                        "Type": "HTMLImageElement", 
                        "Name": "image"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "createImageBitmap", 
                "Argument": [
                    {
                        "Type": "HTMLImageElement", 
                        "Name": "image"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sx"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sy"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sw"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sh"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "createImageBitmap", 
                "Argument": [
                    {
                        "Type": "HTMLVideoElement", 
                        "Name": "video"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "createImageBitmap", 
                "Argument": [
                    {
                        "Type": "HTMLVideoElement", 
                        "Name": "video"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sx"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sy"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sw"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sh"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "createImageBitmap", 
                "Argument": [
                    {
                        "Type": "CanvasRenderingContext2D", 
                        "Name": "context"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "createImageBitmap", 
                "Argument": [
                    {
                        "Type": "CanvasRenderingContext2D", 
                        "Name": "context"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sx"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sy"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sw"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sh"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "createImageBitmap", 
                "Argument": [
                    {
                        "Type": "HTMLCanvasElement", 
                        "Name": "canvas"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "createImageBitmap", 
                "Argument": [
                    {
                        "Type": "HTMLCanvasElement", 
                        "Name": "canvas"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sx"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sy"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sw"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "sh"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowImageBitmapFactories.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MediaStreamTrack", 
                "Name": "track"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MediaStreamTrackEvent", 
        "FileName": "MediaStreamTrackEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "kind"
            }, 
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "DOMString", 
                "Name": "label"
            }, 
            {
                "Type": "boolean", 
                "Name": "enabled"
            }, 
            {
                "Type": "boolean", 
                "Name": "muted"
            }, 
            {
                "Type": "DOMString", 
                "Name": "readyState"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmute"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onunmute"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onended"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "getSources", 
                "Argument": [
                    {
                        "Type": "MediaStreamTrackSourcesCallback", 
                        "Name": "callback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "stop", 
                "Argument": []
            }, 
            {
                "Type": "MediaStreamTrack", 
                "Name": "clone", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "MediaStreamTrack", 
        "FileName": "MediaStreamTrack.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "errorInformation"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "RTCErrorCallback", 
        "FileName": "RTCErrorCallback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": null, 
                "Name": "result", 
                "Argument": []
            }, 
            {
                "Type": "RTCStatsReport", 
                "Name": "namedItem", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "RTCStatsReport", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "RTCStatsResponse", 
        "FileName": "RTCStatsResponse.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "RTCDataChannel", 
                "Name": "channel"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "RTCDataChannelEvent", 
        "FileName": "RTCDataChannelEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "DOMString", 
                "Name": "kind"
            }, 
            {
                "Type": "DOMString", 
                "Name": "label"
            }, 
            {
                "Type": "DOMString", 
                "Name": "facing"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SourceInfo", 
        "FileName": "SourceInfo.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "enumerateDevices", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "getUserMedia", 
                "Argument": [
                    {
                        "Type": "Dictionary", 
                        "Name": "options"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "MediaDevices", 
        "FileName": "MediaDevices.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "tone"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "RTCDTMFToneChangeEvent", 
        "FileName": "RTCDTMFToneChangeEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "label"
            }, 
            {
                "Type": "boolean", 
                "Name": "reliable"
            }, 
            {
                "Type": "boolean", 
                "Name": "ordered"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "maxRetransmitTime"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "maxRetransmits"
            }, 
            {
                "Type": "DOMString", 
                "Name": "protocol"
            }, 
            {
                "Type": "boolean", 
                "Name": "negotiated"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "id"
            }, 
            {
                "Type": "DOMString", 
                "Name": "readyState"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "bufferedAmount"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "bufferedAmountLowThreshold"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onopen"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onbufferedamountlow"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onclose"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmessage"
            }, 
            {
                "Type": "DOMString", 
                "Name": "binaryType"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": "ArrayBuffer", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "data"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "RTCDataChannel", 
        "FileName": "RTCDataChannel.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Date", 
                "Name": "timestamp"
            }, 
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "stat", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "names", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "RTCStatsReport", 
        "FileName": "RTCStatsReport.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "label"
            }, 
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "boolean", 
                "Name": "ended"
            }, 
            {
                "Type": "boolean", 
                "Name": "active"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onactive"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oninactive"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onended"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onaddtrack"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onremovetrack"
            }
        ], 
        "Operation": [
            {
                "Type": null, 
                "Name": "getAudioTracks", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "getVideoTracks", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "getTracks", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "addTrack", 
                "Argument": [
                    {
                        "Type": "MediaStreamTrack", 
                        "Name": "track"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeTrack", 
                "Argument": [
                    {
                        "Type": "MediaStreamTrack", 
                        "Name": "track"
                    }
                ]
            }, 
            {
                "Type": "MediaStreamTrack", 
                "Name": "getTrackById", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "trackId"
                    }
                ]
            }, 
            {
                "Type": "MediaStream", 
                "Name": "clone", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "stop", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "MediaStream", 
        "FileName": "MediaStream.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "message"
            }, 
            {
                "Type": "DOMString", 
                "Name": "constraintName"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "NavigatorUserMediaError", 
        "FileName": "NavigatorUserMediaError.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "webkitGetUserMedia", 
                "Argument": [
                    {
                        "Type": "Dictionary", 
                        "Name": "options"
                    }, 
                    {
                        "Type": "NavigatorUserMediaSuccessCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "NavigatorUserMediaErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorMediaStream.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "createObjectURL", 
                "Argument": [
                    {
                        "Type": "MediaStream", 
                        "Name": "stream"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "URL", 
        "FileName": "URLMediaStream.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "sources"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "MediaStreamTrackSourcesCallback", 
        "FileName": "MediaStreamTrackSourcesCallback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "RTCStatsResponse", 
                        "Name": "response"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "RTCStatsCallback", 
        "FileName": "RTCStatsCallback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "RTCSessionDescription", 
                        "Name": "sdp"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "RTCSessionDescriptionCallback", 
        "FileName": "RTCSessionDescriptionCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MediaDevices", 
                "Name": "mediaDevices"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorUserMedia.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "MediaStream", 
                        "Name": "stream"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "NavigatorUserMediaSuccessCallback", 
        "FileName": "NavigatorUserMediaSuccessCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "deviceId"
            }, 
            {
                "Type": "MediaDeviceKind", 
                "Name": "kind"
            }, 
            {
                "Type": "DOMString", 
                "Name": "label"
            }, 
            {
                "Type": "DOMString", 
                "Name": "groupId"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MediaDeviceInfo", 
        "FileName": "MediaDeviceInfo.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "RTCIceCandidate", 
                "Name": "candidate"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "RTCIceCandidateEvent", 
        "FileName": "RTCIceCandidateEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MediaStreamConstructor", 
                "Name": "webkitMediaStream"
            }, 
            {
                "Type": "RTCPeerConnectionConstructor", 
                "Name": "webkitRTCPeerConnection"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowMediaStream.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "RTCSessionDescription", 
                "Name": "localDescription"
            }, 
            {
                "Type": "RTCSessionDescription", 
                "Name": "remoteDescription"
            }, 
            {
                "Type": "DOMString", 
                "Name": "signalingState"
            }, 
            {
                "Type": "DOMString", 
                "Name": "iceGatheringState"
            }, 
            {
                "Type": "DOMString", 
                "Name": "iceConnectionState"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onnegotiationneeded"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onicecandidate"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onsignalingstatechange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onaddstream"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onremovestream"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oniceconnectionstatechange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ondatachannel"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "createOffer", 
                "Argument": [
                    {
                        "Type": "RTCSessionDescriptionCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "RTCErrorCallback", 
                        "Name": "failureCallback"
                    }, 
                    {
                        "Type": "Dictionary", 
                        "Name": "rtcOfferOptions"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "createAnswer", 
                "Argument": [
                    {
                        "Type": "RTCSessionDescriptionCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "RTCErrorCallback", 
                        "Name": "failureCallback"
                    }, 
                    {
                        "Type": "Dictionary", 
                        "Name": "mediaConstraints"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setLocalDescription", 
                "Argument": [
                    {
                        "Type": "RTCSessionDescription", 
                        "Name": "description"
                    }, 
                    {
                        "Type": "VoidCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "RTCErrorCallback", 
                        "Name": "failureCallback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setRemoteDescription", 
                "Argument": [
                    {
                        "Type": "RTCSessionDescription", 
                        "Name": "description"
                    }, 
                    {
                        "Type": "VoidCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "RTCErrorCallback", 
                        "Name": "failureCallback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "updateIce", 
                "Argument": [
                    {
                        "Type": "Dictionary", 
                        "Name": "configuration"
                    }, 
                    {
                        "Type": "Dictionary", 
                        "Name": "mediaConstraints"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "addIceCandidate", 
                "Argument": [
                    {
                        "Type": "RTCIceCandidate", 
                        "Name": "candidate"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "addIceCandidate", 
                "Argument": [
                    {
                        "Type": "RTCIceCandidate", 
                        "Name": "candidate"
                    }, 
                    {
                        "Type": "VoidCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "RTCErrorCallback", 
                        "Name": "failureCallback"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getLocalStreams", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "getRemoteStreams", 
                "Argument": []
            }, 
            {
                "Type": "MediaStream", 
                "Name": "getStreamById", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "streamId"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "addStream", 
                "Argument": [
                    {
                        "Type": "MediaStream", 
                        "Name": "stream"
                    }, 
                    {
                        "Type": "Dictionary", 
                        "Name": "mediaConstraints"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeStream", 
                "Argument": [
                    {
                        "Type": "MediaStream", 
                        "Name": "stream"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "getStats", 
                "Argument": [
                    {
                        "Type": "RTCStatsCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "MediaStreamTrack", 
                        "Name": "selector"
                    }
                ]
            }, 
            {
                "Type": "RTCDataChannel", 
                "Name": "createDataChannel", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "label"
                    }, 
                    {
                        "Type": "Dictionary", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "RTCDTMFSender", 
                "Name": "createDTMFSender", 
                "Argument": [
                    {
                        "Type": "MediaStreamTrack", 
                        "Name": "track"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "RTCPeerConnection", 
        "FileName": "RTCPeerConnection.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "NavigatorUserMediaError", 
                        "Name": "error"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "NavigatorUserMediaErrorCallback", 
        "FileName": "NavigatorUserMediaErrorCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "RTCSdpType", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "sdp"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "RTCSessionDescription", 
        "FileName": "RTCSessionDescription.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "canInsertDTMF"
            }, 
            {
                "Type": "MediaStreamTrack", 
                "Name": "track"
            }, 
            {
                "Type": "DOMString", 
                "Name": "toneBuffer"
            }, 
            {
                "Type": "long", 
                "Name": "duration"
            }, 
            {
                "Type": "long", 
                "Name": "interToneGap"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontonechange"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "insertDTMF", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "tones"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "duration"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "interToneGap"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "RTCDTMFSender", 
        "FileName": "RTCDTMFSender.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MediaStream", 
                "Name": "stream"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MediaStreamEvent", 
        "FileName": "MediaStreamEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "candidate"
            }, 
            {
                "Type": "DOMString", 
                "Name": "sdpMid"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "sdpMLineIndex"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "RTCIceCandidate", 
        "FileName": "RTCIceCandidate.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "FileError", 
                        "Name": "error"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "ErrorCallback", 
        "FileName": "ErrorCallback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "EntrySync", 
                "Name": "readEntries", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "DirectoryReaderSync", 
        "FileName": "DirectoryReaderSync.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "DOMFileSystem", 
                        "Name": "fileSystem"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "FileSystemCallback", 
        "FileName": "FileSystemCallback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DirectoryReader", 
                "Name": "createReader", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "getFile", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "path"
                    }, 
                    {
                        "Type": "FileSystemFlags", 
                        "Name": "options"
                    }, 
                    {
                        "Type": "EntryCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "getDirectory", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "path"
                    }, 
                    {
                        "Type": "FileSystemFlags", 
                        "Name": "options"
                    }, 
                    {
                        "Type": "EntryCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeRecursively", 
                "Argument": [
                    {
                        "Type": "VoidCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DirectoryEntry", 
        "FileName": "DirectoryEntry.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "isFile"
            }, 
            {
                "Type": "boolean", 
                "Name": "isDirectory"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "fullPath"
            }, 
            {
                "Type": "DOMFileSystemSync", 
                "Name": "filesystem"
            }
        ], 
        "Operation": [
            {
                "Type": "Metadata", 
                "Name": "getMetadata", 
                "Argument": []
            }, 
            {
                "Type": "EntrySync", 
                "Name": "moveTo", 
                "Argument": [
                    {
                        "Type": "DirectoryEntrySync", 
                        "Name": "parent"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "EntrySync", 
                "Name": "copyTo", 
                "Argument": [
                    {
                        "Type": "DirectoryEntrySync", 
                        "Name": "parent"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "toURL", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "remove", 
                "Argument": []
            }, 
            {
                "Type": "DirectoryEntrySync", 
                "Name": "getParent", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "EntrySync", 
        "FileName": "EntrySync.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DirectoryEntrySync", 
                "Name": "root"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "DOMFileSystemSync", 
        "FileName": "DOMFileSystemSync.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "FileWriter", 
                        "Name": "fileWriter"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "FileWriterCallback", 
        "FileName": "FileWriterCallback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "File", 
                "Name": "file", 
                "Argument": []
            }, 
            {
                "Type": "FileWriterSync", 
                "Name": "createWriter", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "FileEntrySync", 
        "FileName": "FileEntrySync.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "File", 
                        "Name": "file"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "FileCallback", 
        "FileName": "FileCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "FileErrorConstructor", 
                "Name": "FileError"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "webkitRequestFileSystem", 
                "Argument": [
                    {
                        "Type": "unsigned short", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "long long", 
                        "Name": "size"
                    }, 
                    {
                        "Type": "FileSystemCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }, 
            {
                "Type": "DOMFileSystemSync", 
                "Name": "webkitRequestFileSystemSync", 
                "Argument": [
                    {
                        "Type": "unsigned short", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "long long", 
                        "Name": "size"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "webkitResolveLocalFileSystemURL", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }, 
                    {
                        "Type": "EntryCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }, 
            {
                "Type": "EntrySync", 
                "Name": "webkitResolveLocalFileSystemSyncURL", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "TEMPORARY", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PERSISTENT", 
                "Value": "1"
            }
        ], 
        "Name": "WorkerGlobalScope", 
        "FileName": "WorkerGlobalScopeFileSystem.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DirectoryEntry", 
                "Name": "root"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "DOMFileSystem", 
        "FileName": "DOMFileSystem.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "readEntries", 
                "Argument": [
                    {
                        "Type": "EntriesCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DirectoryReader", 
        "FileName": "DirectoryReader.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DOMFileSystem", 
                "Name": "isolatedFileSystem", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "fileSystemId"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "registeredName"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "upgradeDraggedFileSystemPermissions", 
                "Argument": [
                    {
                        "Type": "DOMFileSystem", 
                        "Name": "domFileSystem"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DevToolsHost", 
        "FileName": "DevToolsHostFileSystem.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Date", 
                "Name": "modificationTime"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "size"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Metadata", 
        "FileName": "Metadata.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long long", 
                "Name": "position"
            }, 
            {
                "Type": "long long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "write", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "seek", 
                "Argument": [
                    {
                        "Type": "long long", 
                        "Name": "position"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "truncate", 
                "Argument": [
                    {
                        "Type": "long long", 
                        "Name": "size"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "FileWriterSync", 
        "FileName": "FileWriterSync.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DirectoryReaderSync", 
                "Name": "createReader", 
                "Argument": []
            }, 
            {
                "Type": "FileEntrySync", 
                "Name": "getFile", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "path"
                    }, 
                    {
                        "Type": "FileSystemFlags", 
                        "Name": "flags"
                    }
                ]
            }, 
            {
                "Type": "DirectoryEntrySync", 
                "Name": "getDirectory", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "path"
                    }, 
                    {
                        "Type": "FileSystemFlags", 
                        "Name": "flags"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeRecursively", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "DirectoryEntrySync", 
        "FileName": "DirectoryEntrySync.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "webkitRequestFileSystem", 
                "Argument": [
                    {
                        "Type": "unsigned short", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "long long", 
                        "Name": "size"
                    }, 
                    {
                        "Type": "FileSystemCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "webkitResolveLocalFileSystemURL", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }, 
                    {
                        "Type": "EntryCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "TEMPORARY", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PERSISTENT", 
                "Value": "1"
            }
        ], 
        "Name": "Window", 
        "FileName": "WindowFileSystem.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "Metadata", 
                        "Name": "metadata"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "MetadataCallback", 
        "FileName": "MetadataCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "readyState"
            }, 
            {
                "Type": "FileError", 
                "Name": "error"
            }, 
            {
                "Type": "long long", 
                "Name": "position"
            }, 
            {
                "Type": "long long", 
                "Name": "length"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwritestart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onprogress"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwrite"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onabort"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwriteend"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "write", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "seek", 
                "Argument": [
                    {
                        "Type": "long long", 
                        "Name": "position"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "truncate", 
                "Argument": [
                    {
                        "Type": "long long", 
                        "Name": "size"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "abort", 
                "Argument": []
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "INIT", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "WRITING", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DONE", 
                "Value": "2"
            }
        ], 
        "Name": "FileWriter", 
        "FileName": "FileWriter.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "Entry", 
                        "Name": "entry"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "EntryCallback", 
        "FileName": "EntryCallback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Entry", 
                "Name": "webkitGetAsEntry", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "DataTransferItem", 
        "FileName": "DataTransferItemFileSystem.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "Entry", 
                        "Name": "entries"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "EntriesCallback", 
        "FileName": "EntriesCallback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "createWriter", 
                "Argument": [
                    {
                        "Type": "FileWriterCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "file", 
                "Argument": [
                    {
                        "Type": "FileCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "FileEntry", 
        "FileName": "FileEntry.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "isFile"
            }, 
            {
                "Type": "boolean", 
                "Name": "isDirectory"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "fullPath"
            }, 
            {
                "Type": "DOMFileSystem", 
                "Name": "filesystem"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "getMetadata", 
                "Argument": [
                    {
                        "Type": "MetadataCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "moveTo", 
                "Argument": [
                    {
                        "Type": "DirectoryEntry", 
                        "Name": "parent"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "EntryCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "copyTo", 
                "Argument": [
                    {
                        "Type": "DirectoryEntry", 
                        "Name": "parent"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "EntryCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "toURL", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "remove", 
                "Argument": [
                    {
                        "Type": "VoidCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "getParent", 
                "Argument": [
                    {
                        "Type": "EntryCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "ErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Entry", 
        "FileName": "Entry.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Entry", 
                "Name": "webkitEntries"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "HTMLInputElement", 
        "FileName": "HTMLInputElementFileSystem.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "USVString", 
                "Name": "endpoint"
            }, 
            {
                "Type": "ArrayBuffer", 
                "Name": "curve25519dh"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "unsubscribe", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "PushSubscription", 
        "FileName": "PushSubscription.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onpush"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ServiceWorkerGlobalScope", 
        "FileName": "ServiceWorkerGlobalScopePush.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "PushManager", 
                "Name": "pushManager"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ServiceWorkerRegistration", 
        "FileName": "ServiceWorkerRegistrationPush.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "subscribe", 
                "Argument": [
                    {
                        "Type": "PushSubscriptionOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "getSubscription", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "permissionState", 
                "Argument": [
                    {
                        "Type": "PushSubscriptionOptions", 
                        "Name": "options"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "PushManager", 
        "FileName": "PushManager.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "ArrayBuffer", 
                "Name": "arrayBuffer", 
                "Argument": []
            }, 
            {
                "Type": "Blob", 
                "Name": "blob", 
                "Argument": []
            }, 
            {
                "Type": "JSON", 
                "Name": "json", 
                "Argument": []
            }, 
            {
                "Type": "USVString", 
                "Name": "text", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "PushMessageData", 
        "FileName": "PushMessageData.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "PushMessageData", 
                "Name": "data"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "PushEvent", 
        "FileName": "PushEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": null, 
                "Name": "platforms"
            }, 
            {
                "Type": "Promise", 
                "Name": "userChoice"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "prompt", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "BeforeInstallPromptEvent", 
        "FileName": "BeforeInstallPromptEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "platform"
            }, 
            {
                "Type": "AppBannerPromptOutcome", 
                "Name": "outcome"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "AppBannerPromptResult", 
        "FileName": "AppBannerPromptResult.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "EXTShaderTextureLOD", 
        "FileName": "EXTShaderTextureLOD.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "OESTextureHalfFloatLinear", 
        "FileName": "OESTextureHalfFloatLinear.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "OESTextureFloatLinear", 
        "FileName": "OESTextureFloatLinear.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGL2RenderingContext", 
        "FileName": "WebGL2RenderingContext.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "getTranslatedShaderSource", 
                "Argument": [
                    {
                        "Type": "WebGLShader", 
                        "Name": "shader"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "WebGLDebugShaders", 
        "FileName": "WebGLDebugShaders.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "rangeMin"
            }, 
            {
                "Type": "long", 
                "Name": "rangeMax"
            }, 
            {
                "Type": "long", 
                "Name": "precision"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLShaderPrecisionFormat", 
        "FileName": "WebGLShaderPrecisionFormat.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "copyBufferSubData", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "readTarget"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "writeTarget"
                    }, 
                    {
                        "Type": "GLintptr", 
                        "Name": "readOffset"
                    }, 
                    {
                        "Type": "GLintptr", 
                        "Name": "writeOffset"
                    }, 
                    {
                        "Type": "GLsizeiptr", 
                        "Name": "size"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "getBufferSubData", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLintptr", 
                        "Name": "offset"
                    }, 
                    {
                        "Type": "ArrayBuffer", 
                        "Name": "returnedData"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "blitFramebuffer", 
                "Argument": [
                    {
                        "Type": "GLint", 
                        "Name": "srcX0"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "srcY0"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "srcX1"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "srcY1"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "dstX0"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "dstY0"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "dstX1"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "dstY1"
                    }, 
                    {
                        "Type": "GLbitfield", 
                        "Name": "mask"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "filter"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "framebufferTextureLayer", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "attachment"
                    }, 
                    {
                        "Type": "WebGLTexture", 
                        "Name": "texture"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "layer"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getInternalformatParameter", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "internalformat"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "invalidateFramebuffer", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": null, 
                        "Name": "attachments"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "invalidateSubFramebuffer", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": null, 
                        "Name": "attachments"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "readBuffer", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "mode"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "renderbufferStorageMultisample", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "samples"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "internalformat"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texStorage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "levels"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "internalformat"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texStorage3D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "levels"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "internalformat"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "depth"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texImage3D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "internalformat"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "depth"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "border"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "pixels"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texSubImage3D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "xoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "yoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "zoffset"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "depth"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "pixels"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texSubImage3D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "xoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "yoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "zoffset"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "ImageData", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texSubImage3D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "xoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "yoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "zoffset"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "HTMLImageElement", 
                        "Name": "image"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texSubImage3D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "xoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "yoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "zoffset"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "HTMLCanvasElement", 
                        "Name": "canvas"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texSubImage3D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "xoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "yoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "zoffset"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "HTMLVideoElement", 
                        "Name": "video"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "copyTexSubImage3D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "xoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "yoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "zoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "compressedTexImage3D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "internalformat"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "depth"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "border"
                    }, 
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "compressedTexSubImage3D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "xoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "yoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "zoffset"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "depth"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "GLint", 
                "Name": "getFragDataLocation", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform1ui", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "v0"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform2ui", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "v0"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "v1"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform3ui", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "v0"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "v1"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "v2"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform4ui", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "v0"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "v1"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "v2"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "v3"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform1uiv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform2uiv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform3uiv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform4uiv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix2x3fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix2x3fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix3x2fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix3x2fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix2x4fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix2x4fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix4x2fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix4x2fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix3x4fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix3x4fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix4x3fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix4x3fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttribI4i", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "z"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "w"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttribI4iv", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }, 
                    {
                        "Type": null, 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttribI4ui", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "z"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "w"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttribI4uiv", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }, 
                    {
                        "Type": null, 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttribIPointer", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "size"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "stride"
                    }, 
                    {
                        "Type": "GLintptr", 
                        "Name": "offset"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttribDivisor", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "divisor"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "drawArraysInstanced", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "mode"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "first"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "count"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "instanceCount"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "drawElementsInstanced", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "mode"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "count"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "GLintptr", 
                        "Name": "offset"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "instanceCount"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "drawRangeElements", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "mode"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "start"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "end"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "count"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "GLintptr", 
                        "Name": "offset"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "drawBuffers", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "buffers"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearBufferiv", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "buffer"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "drawbuffer"
                    }, 
                    {
                        "Type": "Int32Array", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearBufferiv", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "buffer"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "drawbuffer"
                    }, 
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearBufferuiv", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "buffer"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "drawbuffer"
                    }, 
                    {
                        "Type": "Uint32Array", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearBufferuiv", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "buffer"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "drawbuffer"
                    }, 
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearBufferfv", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "buffer"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "drawbuffer"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearBufferfv", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "buffer"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "drawbuffer"
                    }, 
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearBufferfi", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "buffer"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "drawbuffer"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "depth"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "stencil"
                    }
                ]
            }, 
            {
                "Type": "WebGLQuery", 
                "Name": "createQuery", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "deleteQuery", 
                "Argument": [
                    {
                        "Type": "WebGLQuery", 
                        "Name": "query"
                    }
                ]
            }, 
            {
                "Type": "GLboolean", 
                "Name": "isQuery", 
                "Argument": [
                    {
                        "Type": "WebGLQuery", 
                        "Name": "query"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "beginQuery", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "WebGLQuery", 
                        "Name": "query"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "endQuery", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }
                ]
            }, 
            {
                "Type": "WebGLQuery", 
                "Name": "getQuery", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getQueryParameter", 
                "Argument": [
                    {
                        "Type": "WebGLQuery", 
                        "Name": "query"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": "WebGLSampler", 
                "Name": "createSampler", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "deleteSampler", 
                "Argument": [
                    {
                        "Type": "WebGLSampler", 
                        "Name": "sampler"
                    }
                ]
            }, 
            {
                "Type": "GLboolean", 
                "Name": "isSampler", 
                "Argument": [
                    {
                        "Type": "WebGLSampler", 
                        "Name": "sampler"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bindSampler", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "unit"
                    }, 
                    {
                        "Type": "WebGLSampler", 
                        "Name": "sampler"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "samplerParameteri", 
                "Argument": [
                    {
                        "Type": "WebGLSampler", 
                        "Name": "sampler"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "param"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "samplerParameterf", 
                "Argument": [
                    {
                        "Type": "WebGLSampler", 
                        "Name": "sampler"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "param"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getSamplerParameter", 
                "Argument": [
                    {
                        "Type": "WebGLSampler", 
                        "Name": "sampler"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": "WebGLSync", 
                "Name": "fenceSync", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "condition"
                    }, 
                    {
                        "Type": "GLbitfield", 
                        "Name": "flags"
                    }
                ]
            }, 
            {
                "Type": "GLboolean", 
                "Name": "isSync", 
                "Argument": [
                    {
                        "Type": "WebGLSync", 
                        "Name": "sync"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteSync", 
                "Argument": [
                    {
                        "Type": "WebGLSync", 
                        "Name": "sync"
                    }
                ]
            }, 
            {
                "Type": "GLenum", 
                "Name": "clientWaitSync", 
                "Argument": [
                    {
                        "Type": "WebGLSync", 
                        "Name": "sync"
                    }, 
                    {
                        "Type": "GLbitfield", 
                        "Name": "flags"
                    }, 
                    {
                        "Type": "GLint64", 
                        "Name": "timeout"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "waitSync", 
                "Argument": [
                    {
                        "Type": "WebGLSync", 
                        "Name": "sync"
                    }, 
                    {
                        "Type": "GLbitfield", 
                        "Name": "flags"
                    }, 
                    {
                        "Type": "GLint64", 
                        "Name": "timeout"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getSyncParameter", 
                "Argument": [
                    {
                        "Type": "WebGLSync", 
                        "Name": "sync"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": "WebGLTransformFeedback", 
                "Name": "createTransformFeedback", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "deleteTransformFeedback", 
                "Argument": [
                    {
                        "Type": "WebGLTransformFeedback", 
                        "Name": "feedback"
                    }
                ]
            }, 
            {
                "Type": "GLboolean", 
                "Name": "isTransformFeedback", 
                "Argument": [
                    {
                        "Type": "WebGLTransformFeedback", 
                        "Name": "feedback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bindTransformFeedback", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "WebGLTransformFeedback", 
                        "Name": "feedback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "beginTransformFeedback", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "primitiveMode"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "endTransformFeedback", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "transformFeedbackVaryings", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": null, 
                        "Name": "varyings"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "bufferMode"
                    }
                ]
            }, 
            {
                "Type": "WebGLActiveInfo", 
                "Name": "getTransformFeedbackVarying", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "pauseTransformFeedback", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "resumeTransformFeedback", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "bindBufferBase", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "WebGLBuffer", 
                        "Name": "buffer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bindBufferRange", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "WebGLBuffer", 
                        "Name": "buffer"
                    }, 
                    {
                        "Type": "GLintptr", 
                        "Name": "offset"
                    }, 
                    {
                        "Type": "GLsizeiptr", 
                        "Name": "size"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getIndexedParameter", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getUniformIndices", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": null, 
                        "Name": "uniformNames"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getActiveUniforms", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": null, 
                        "Name": "uniformIndices"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": "GLuint", 
                "Name": "getUniformBlockIndex", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "uniformBlockName"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getActiveUniformBlockParameter", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "uniformBlockIndex"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "getActiveUniformBlockName", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "uniformBlockIndex"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformBlockBinding", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "uniformBlockIndex"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "uniformBlockBinding"
                    }
                ]
            }, 
            {
                "Type": "WebGLVertexArrayObject", 
                "Name": "createVertexArray", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "deleteVertexArray", 
                "Argument": [
                    {
                        "Type": "WebGLVertexArrayObject", 
                        "Name": "vertexArray"
                    }
                ]
            }, 
            {
                "Type": "GLboolean", 
                "Name": "isVertexArray", 
                "Argument": [
                    {
                        "Type": "WebGLVertexArrayObject", 
                        "Name": "vertexArray"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bindVertexArray", 
                "Argument": [
                    {
                        "Type": "WebGLVertexArrayObject", 
                        "Name": "vertexArray"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "GLenum", 
                "Name": "READ_BUFFER", 
                "Value": "0x0C02"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNPACK_ROW_LENGTH", 
                "Value": "0x0CF2"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNPACK_SKIP_ROWS", 
                "Value": "0x0CF3"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNPACK_SKIP_PIXELS", 
                "Value": "0x0CF4"
            }, 
            {
                "Type": "GLenum", 
                "Name": "PACK_ROW_LENGTH", 
                "Value": "0x0D02"
            }, 
            {
                "Type": "GLenum", 
                "Name": "PACK_SKIP_ROWS", 
                "Value": "0x0D03"
            }, 
            {
                "Type": "GLenum", 
                "Name": "PACK_SKIP_PIXELS", 
                "Value": "0x0D04"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR", 
                "Value": "0x1800"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH", 
                "Value": "0x1801"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL", 
                "Value": "0x1802"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RED", 
                "Value": "0x1903"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB8", 
                "Value": "0x8051"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGBA8", 
                "Value": "0x8058"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB10_A2", 
                "Value": "0x8059"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_BINDING_3D", 
                "Value": "0x806A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNPACK_SKIP_IMAGES", 
                "Value": "0x806D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNPACK_IMAGE_HEIGHT", 
                "Value": "0x806E"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_3D", 
                "Value": "0x806F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_WRAP_R", 
                "Value": "0x8072"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_3D_TEXTURE_SIZE", 
                "Value": "0x8073"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_INT_2_10_10_10_REV", 
                "Value": "0x8368"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_ELEMENTS_VERTICES", 
                "Value": "0x80E8"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_ELEMENTS_INDICES", 
                "Value": "0x80E9"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_MIN_LOD", 
                "Value": "0x813A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_MAX_LOD", 
                "Value": "0x813B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_BASE_LEVEL", 
                "Value": "0x813C"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_MAX_LEVEL", 
                "Value": "0x813D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MIN", 
                "Value": "0x8007"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX", 
                "Value": "0x8008"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH_COMPONENT24", 
                "Value": "0x81A6"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_TEXTURE_LOD_BIAS", 
                "Value": "0x84FD"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_COMPARE_MODE", 
                "Value": "0x884C"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_COMPARE_FUNC", 
                "Value": "0x884D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "CURRENT_QUERY", 
                "Value": "0x8865"
            }, 
            {
                "Type": "GLenum", 
                "Name": "QUERY_RESULT", 
                "Value": "0x8866"
            }, 
            {
                "Type": "GLenum", 
                "Name": "QUERY_RESULT_AVAILABLE", 
                "Value": "0x8867"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STREAM_READ", 
                "Value": "0x88E1"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STREAM_COPY", 
                "Value": "0x88E2"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STATIC_READ", 
                "Value": "0x88E5"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STATIC_COPY", 
                "Value": "0x88E6"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DYNAMIC_READ", 
                "Value": "0x88E9"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DYNAMIC_COPY", 
                "Value": "0x88EA"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_DRAW_BUFFERS", 
                "Value": "0x8824"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER0", 
                "Value": "0x8825"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER1", 
                "Value": "0x8826"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER2", 
                "Value": "0x8827"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER3", 
                "Value": "0x8828"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER4", 
                "Value": "0x8829"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER5", 
                "Value": "0x882A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER6", 
                "Value": "0x882B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER7", 
                "Value": "0x882C"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER8", 
                "Value": "0x882D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER9", 
                "Value": "0x882E"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER10", 
                "Value": "0x882F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER11", 
                "Value": "0x8830"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER12", 
                "Value": "0x8831"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER13", 
                "Value": "0x8832"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER14", 
                "Value": "0x8833"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER15", 
                "Value": "0x8834"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_FRAGMENT_UNIFORM_COMPONENTS", 
                "Value": "0x8B49"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_VERTEX_UNIFORM_COMPONENTS", 
                "Value": "0x8B4A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SAMPLER_3D", 
                "Value": "0x8B5F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SAMPLER_2D_SHADOW", 
                "Value": "0x8B62"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAGMENT_SHADER_DERIVATIVE_HINT", 
                "Value": "0x8B8B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "PIXEL_PACK_BUFFER", 
                "Value": "0x88EB"
            }, 
            {
                "Type": "GLenum", 
                "Name": "PIXEL_UNPACK_BUFFER", 
                "Value": "0x88EC"
            }, 
            {
                "Type": "GLenum", 
                "Name": "PIXEL_PACK_BUFFER_BINDING", 
                "Value": "0x88ED"
            }, 
            {
                "Type": "GLenum", 
                "Name": "PIXEL_UNPACK_BUFFER_BINDING", 
                "Value": "0x88EF"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FLOAT_MAT2x3", 
                "Value": "0x8B65"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FLOAT_MAT2x4", 
                "Value": "0x8B66"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FLOAT_MAT3x2", 
                "Value": "0x8B67"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FLOAT_MAT3x4", 
                "Value": "0x8B68"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FLOAT_MAT4x2", 
                "Value": "0x8B69"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FLOAT_MAT4x3", 
                "Value": "0x8B6A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SRGB", 
                "Value": "0x8C40"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SRGB8", 
                "Value": "0x8C41"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SRGB8_ALPHA8", 
                "Value": "0x8C43"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COMPARE_REF_TO_TEXTURE", 
                "Value": "0x884E"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGBA32F", 
                "Value": "0x8814"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB32F", 
                "Value": "0x8815"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGBA16F", 
                "Value": "0x881A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB16F", 
                "Value": "0x881B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VERTEX_ATTRIB_ARRAY_INTEGER", 
                "Value": "0x88FD"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_ARRAY_TEXTURE_LAYERS", 
                "Value": "0x88FF"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MIN_PROGRAM_TEXEL_OFFSET", 
                "Value": "0x8904"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_PROGRAM_TEXEL_OFFSET", 
                "Value": "0x8905"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_VARYING_COMPONENTS", 
                "Value": "0x8B4B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_2D_ARRAY", 
                "Value": "0x8C1A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_BINDING_2D_ARRAY", 
                "Value": "0x8C1D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "R11F_G11F_B10F", 
                "Value": "0x8C3A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_INT_10F_11F_11F_REV", 
                "Value": "0x8C3B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB9_E5", 
                "Value": "0x8C3D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_INT_5_9_9_9_REV", 
                "Value": "0x8C3E"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TRANSFORM_FEEDBACK_BUFFER_MODE", 
                "Value": "0x8C7F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS", 
                "Value": "0x8C80"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TRANSFORM_FEEDBACK_VARYINGS", 
                "Value": "0x8C83"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TRANSFORM_FEEDBACK_BUFFER_START", 
                "Value": "0x8C84"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TRANSFORM_FEEDBACK_BUFFER_SIZE", 
                "Value": "0x8C85"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN", 
                "Value": "0x8C88"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RASTERIZER_DISCARD", 
                "Value": "0x8C89"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS", 
                "Value": "0x8C8A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS", 
                "Value": "0x8C8B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INTERLEAVED_ATTRIBS", 
                "Value": "0x8C8C"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SEPARATE_ATTRIBS", 
                "Value": "0x8C8D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TRANSFORM_FEEDBACK_BUFFER", 
                "Value": "0x8C8E"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TRANSFORM_FEEDBACK_BUFFER_BINDING", 
                "Value": "0x8C8F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGBA32UI", 
                "Value": "0x8D70"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB32UI", 
                "Value": "0x8D71"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGBA16UI", 
                "Value": "0x8D76"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB16UI", 
                "Value": "0x8D77"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGBA8UI", 
                "Value": "0x8D7C"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB8UI", 
                "Value": "0x8D7D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGBA32I", 
                "Value": "0x8D82"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB32I", 
                "Value": "0x8D83"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGBA16I", 
                "Value": "0x8D88"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB16I", 
                "Value": "0x8D89"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGBA8I", 
                "Value": "0x8D8E"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB8I", 
                "Value": "0x8D8F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RED_INTEGER", 
                "Value": "0x8D94"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB_INTEGER", 
                "Value": "0x8D98"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGBA_INTEGER", 
                "Value": "0x8D99"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SAMPLER_2D_ARRAY", 
                "Value": "0x8DC1"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SAMPLER_2D_ARRAY_SHADOW", 
                "Value": "0x8DC4"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SAMPLER_CUBE_SHADOW", 
                "Value": "0x8DC5"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_INT_VEC2", 
                "Value": "0x8DC6"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_INT_VEC3", 
                "Value": "0x8DC7"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_INT_VEC4", 
                "Value": "0x8DC8"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INT_SAMPLER_2D", 
                "Value": "0x8DCA"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INT_SAMPLER_3D", 
                "Value": "0x8DCB"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INT_SAMPLER_CUBE", 
                "Value": "0x8DCC"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INT_SAMPLER_2D_ARRAY", 
                "Value": "0x8DCF"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_INT_SAMPLER_2D", 
                "Value": "0x8DD2"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_INT_SAMPLER_3D", 
                "Value": "0x8DD3"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_INT_SAMPLER_CUBE", 
                "Value": "0x8DD4"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_INT_SAMPLER_2D_ARRAY", 
                "Value": "0x8DD7"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH_COMPONENT32F", 
                "Value": "0x8CAC"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH32F_STENCIL8", 
                "Value": "0x8CAD"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FLOAT_32_UNSIGNED_INT_24_8_REV", 
                "Value": "0x8DAD"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING", 
                "Value": "0x8210"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE", 
                "Value": "0x8211"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_ATTACHMENT_RED_SIZE", 
                "Value": "0x8212"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE", 
                "Value": "0x8213"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE", 
                "Value": "0x8214"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE", 
                "Value": "0x8215"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE", 
                "Value": "0x8216"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE", 
                "Value": "0x8217"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_DEFAULT", 
                "Value": "0x8218"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_INT_24_8", 
                "Value": "0x84FA"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH24_STENCIL8", 
                "Value": "0x88F0"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_NORMALIZED", 
                "Value": "0x8C17"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_FRAMEBUFFER_BINDING", 
                "Value": "0x8CA6"
            }, 
            {
                "Type": "GLenum", 
                "Name": "READ_FRAMEBUFFER", 
                "Value": "0x8CA8"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_FRAMEBUFFER", 
                "Value": "0x8CA9"
            }, 
            {
                "Type": "GLenum", 
                "Name": "READ_FRAMEBUFFER_BINDING", 
                "Value": "0x8CAA"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RENDERBUFFER_SAMPLES", 
                "Value": "0x8CAB"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER", 
                "Value": "0x8CD4"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_COLOR_ATTACHMENTS", 
                "Value": "0x8CDF"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT1", 
                "Value": "0x8CE1"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT2", 
                "Value": "0x8CE2"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT3", 
                "Value": "0x8CE3"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT4", 
                "Value": "0x8CE4"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT5", 
                "Value": "0x8CE5"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT6", 
                "Value": "0x8CE6"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT7", 
                "Value": "0x8CE7"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT8", 
                "Value": "0x8CE8"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT9", 
                "Value": "0x8CE9"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT10", 
                "Value": "0x8CEA"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT11", 
                "Value": "0x8CEB"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT12", 
                "Value": "0x8CEC"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT13", 
                "Value": "0x8CED"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT14", 
                "Value": "0x8CEE"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT15", 
                "Value": "0x8CEF"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE", 
                "Value": "0x8D56"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_SAMPLES", 
                "Value": "0x8D57"
            }, 
            {
                "Type": "GLenum", 
                "Name": "HALF_FLOAT", 
                "Value": "0x140B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RG", 
                "Value": "0x8227"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RG_INTEGER", 
                "Value": "0x8228"
            }, 
            {
                "Type": "GLenum", 
                "Name": "R8", 
                "Value": "0x8229"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RG8", 
                "Value": "0x822B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "R16F", 
                "Value": "0x822D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "R32F", 
                "Value": "0x822E"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RG16F", 
                "Value": "0x822F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RG32F", 
                "Value": "0x8230"
            }, 
            {
                "Type": "GLenum", 
                "Name": "R8I", 
                "Value": "0x8231"
            }, 
            {
                "Type": "GLenum", 
                "Name": "R8UI", 
                "Value": "0x8232"
            }, 
            {
                "Type": "GLenum", 
                "Name": "R16I", 
                "Value": "0x8233"
            }, 
            {
                "Type": "GLenum", 
                "Name": "R16UI", 
                "Value": "0x8234"
            }, 
            {
                "Type": "GLenum", 
                "Name": "R32I", 
                "Value": "0x8235"
            }, 
            {
                "Type": "GLenum", 
                "Name": "R32UI", 
                "Value": "0x8236"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RG8I", 
                "Value": "0x8237"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RG8UI", 
                "Value": "0x8238"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RG16I", 
                "Value": "0x8239"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RG16UI", 
                "Value": "0x823A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RG32I", 
                "Value": "0x823B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RG32UI", 
                "Value": "0x823C"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VERTEX_ARRAY_BINDING", 
                "Value": "0x85B5"
            }, 
            {
                "Type": "GLenum", 
                "Name": "R8_SNORM", 
                "Value": "0x8F94"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RG8_SNORM", 
                "Value": "0x8F95"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB8_SNORM", 
                "Value": "0x8F96"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGBA8_SNORM", 
                "Value": "0x8F97"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SIGNED_NORMALIZED", 
                "Value": "0x8F9C"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COPY_READ_BUFFER", 
                "Value": "0x8F36"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COPY_WRITE_BUFFER", 
                "Value": "0x8F37"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COPY_READ_BUFFER_BINDING", 
                "Value": "0x8F36"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COPY_WRITE_BUFFER_BINDING", 
                "Value": "0x8F37"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_BUFFER", 
                "Value": "0x8A11"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_BUFFER_BINDING", 
                "Value": "0x8A28"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_BUFFER_START", 
                "Value": "0x8A29"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_BUFFER_SIZE", 
                "Value": "0x8A2A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_VERTEX_UNIFORM_BLOCKS", 
                "Value": "0x8A2B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_FRAGMENT_UNIFORM_BLOCKS", 
                "Value": "0x8A2D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_COMBINED_UNIFORM_BLOCKS", 
                "Value": "0x8A2E"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_UNIFORM_BUFFER_BINDINGS", 
                "Value": "0x8A2F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_UNIFORM_BLOCK_SIZE", 
                "Value": "0x8A30"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS", 
                "Value": "0x8A31"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS", 
                "Value": "0x8A33"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_BUFFER_OFFSET_ALIGNMENT", 
                "Value": "0x8A34"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ACTIVE_UNIFORM_BLOCKS", 
                "Value": "0x8A36"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_TYPE", 
                "Value": "0x8A37"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_SIZE", 
                "Value": "0x8A38"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_BLOCK_INDEX", 
                "Value": "0x8A3A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_OFFSET", 
                "Value": "0x8A3B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_ARRAY_STRIDE", 
                "Value": "0x8A3C"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_MATRIX_STRIDE", 
                "Value": "0x8A3D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_IS_ROW_MAJOR", 
                "Value": "0x8A3E"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_BLOCK_BINDING", 
                "Value": "0x8A3F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_BLOCK_DATA_SIZE", 
                "Value": "0x8A40"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_BLOCK_ACTIVE_UNIFORMS", 
                "Value": "0x8A42"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES", 
                "Value": "0x8A43"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER", 
                "Value": "0x8A44"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER", 
                "Value": "0x8A46"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INVALID_INDEX", 
                "Value": "0xFFFFFFFF"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_VERTEX_OUTPUT_COMPONENTS", 
                "Value": "0x9122"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_FRAGMENT_INPUT_COMPONENTS", 
                "Value": "0x9125"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_SERVER_WAIT_TIMEOUT", 
                "Value": "0x9111"
            }, 
            {
                "Type": "GLenum", 
                "Name": "OBJECT_TYPE", 
                "Value": "0x9112"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SYNC_CONDITION", 
                "Value": "0x9113"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SYNC_STATUS", 
                "Value": "0x9114"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SYNC_FLAGS", 
                "Value": "0x9115"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SYNC_FENCE", 
                "Value": "0x9116"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SYNC_GPU_COMMANDS_COMPLETE", 
                "Value": "0x9117"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNALED", 
                "Value": "0x9118"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SIGNALED", 
                "Value": "0x9119"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ALREADY_SIGNALED", 
                "Value": "0x911A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TIMEOUT_EXPIRED", 
                "Value": "0x911B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "CONDITION_SATISFIED", 
                "Value": "0x911C"
            }, 
            {
                "Type": "GLenum", 
                "Name": "WAIT_FAILED", 
                "Value": "0x911D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SYNC_FLUSH_COMMANDS_BIT", 
                "Value": "0x00000001"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VERTEX_ATTRIB_ARRAY_DIVISOR", 
                "Value": "0x88FE"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ANY_SAMPLES_PASSED", 
                "Value": "0x8C2F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ANY_SAMPLES_PASSED_CONSERVATIVE", 
                "Value": "0x8D6A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SAMPLER_BINDING", 
                "Value": "0x8919"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB10_A2UI", 
                "Value": "0x906F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "GREEN", 
                "Value": "0x1904"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BLUE", 
                "Value": "0x1905"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INT_2_10_10_10_REV", 
                "Value": "0x8D9F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TRANSFORM_FEEDBACK", 
                "Value": "0x8E22"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TRANSFORM_FEEDBACK_PAUSED", 
                "Value": "0x8E23"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TRANSFORM_FEEDBACK_ACTIVE", 
                "Value": "0x8E24"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TRANSFORM_FEEDBACK_BINDING", 
                "Value": "0x8E25"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COMPRESSED_R11_EAC", 
                "Value": "0x9270"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COMPRESSED_SIGNED_R11_EAC", 
                "Value": "0x9271"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COMPRESSED_RG11_EAC", 
                "Value": "0x9272"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COMPRESSED_SIGNED_RG11_EAC", 
                "Value": "0x9273"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COMPRESSED_RGB8_ETC2", 
                "Value": "0x9274"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COMPRESSED_SRGB8_ETC2", 
                "Value": "0x9275"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2", 
                "Value": "0x9276"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2", 
                "Value": "0x9277"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COMPRESSED_RGBA8_ETC2_EAC", 
                "Value": "0x9278"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COMPRESSED_SRGB8_ALPHA8_ETC2_EAC", 
                "Value": "0x9279"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_IMMUTABLE_FORMAT", 
                "Value": "0x912F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_ELEMENT_INDEX", 
                "Value": "0x8D6B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "NUM_SAMPLE_COUNTS", 
                "Value": "0x9380"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_IMMUTABLE_LEVELS", 
                "Value": "0x82DF"
            }, 
            {
                "Type": "GLint", 
                "Name": "TIMEOUT_IGNORED", 
                "Value": "-1"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_CLIENT_WAIT_TIMEOUT_WEBGL", 
                "Value": "0x9247"
            }
        ], 
        "Name": "WebGL2RenderingContextBase", 
        "FileName": "WebGL2RenderingContextBase.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "OESTextureFloat", 
        "FileName": "OESTextureFloat.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "COMPRESSED_RGB_PVRTC_4BPPV1_IMG", 
                "Value": "0x8C00"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "COMPRESSED_RGB_PVRTC_2BPPV1_IMG", 
                "Value": "0x8C01"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "COMPRESSED_RGBA_PVRTC_4BPPV1_IMG", 
                "Value": "0x8C02"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "COMPRESSED_RGBA_PVRTC_2BPPV1_IMG", 
                "Value": "0x8C03"
            }
        ], 
        "Name": "WebGLCompressedTexturePVRTC", 
        "FileName": "WebGLCompressedTexturePVRTC.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLShader", 
        "FileName": "WebGLShader.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "drawBuffersWEBGL", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "buffers"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT0_WEBGL", 
                "Value": "0x8CE0"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT1_WEBGL", 
                "Value": "0x8CE1"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT2_WEBGL", 
                "Value": "0x8CE2"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT3_WEBGL", 
                "Value": "0x8CE3"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT4_WEBGL", 
                "Value": "0x8CE4"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT5_WEBGL", 
                "Value": "0x8CE5"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT6_WEBGL", 
                "Value": "0x8CE6"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT7_WEBGL", 
                "Value": "0x8CE7"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT8_WEBGL", 
                "Value": "0x8CE8"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT9_WEBGL", 
                "Value": "0x8CE9"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT10_WEBGL", 
                "Value": "0x8CEA"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT11_WEBGL", 
                "Value": "0x8CEB"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT12_WEBGL", 
                "Value": "0x8CEC"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT13_WEBGL", 
                "Value": "0x8CED"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT14_WEBGL", 
                "Value": "0x8CEE"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT15_WEBGL", 
                "Value": "0x8CEF"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER0_WEBGL", 
                "Value": "0x8825"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER1_WEBGL", 
                "Value": "0x8826"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER2_WEBGL", 
                "Value": "0x8827"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER3_WEBGL", 
                "Value": "0x8828"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER4_WEBGL", 
                "Value": "0x8829"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER5_WEBGL", 
                "Value": "0x882A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER6_WEBGL", 
                "Value": "0x882B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER7_WEBGL", 
                "Value": "0x882C"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER8_WEBGL", 
                "Value": "0x882D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER9_WEBGL", 
                "Value": "0x882E"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER10_WEBGL", 
                "Value": "0x882F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER11_WEBGL", 
                "Value": "0x8830"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER12_WEBGL", 
                "Value": "0x8831"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER13_WEBGL", 
                "Value": "0x8832"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER14_WEBGL", 
                "Value": "0x8833"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DRAW_BUFFER15_WEBGL", 
                "Value": "0x8834"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_COLOR_ATTACHMENTS_WEBGL", 
                "Value": "0x8CDF"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_DRAW_BUFFERS_WEBGL", 
                "Value": "0x8824"
            }
        ], 
        "Name": "WebGLDrawBuffers", 
        "FileName": "WebGLDrawBuffers.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "UNSIGNED_INT_24_8_WEBGL", 
                "Value": "0x84FA"
            }
        ], 
        "Name": "WebGLDepthTexture", 
        "FileName": "WebGLDepthTexture.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "OESElementIndexUint", 
        "FileName": "OESElementIndexUint.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLProgram", 
        "FileName": "WebGLProgram.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLVertexArrayObjectOES", 
        "FileName": "WebGLVertexArrayObjectOES.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "UNMASKED_VENDOR_WEBGL", 
                "Value": "0x9245"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "UNMASKED_RENDERER_WEBGL", 
                "Value": "0x9246"
            }
        ], 
        "Name": "WebGLDebugRendererInfo", 
        "FileName": "WebGLDebugRendererInfo.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "TEXTURE_MAX_ANISOTROPY_EXT", 
                "Value": "0x84FE"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "MAX_TEXTURE_MAX_ANISOTROPY_EXT", 
                "Value": "0x84FF"
            }
        ], 
        "Name": "EXTTextureFilterAnisotropic", 
        "FileName": "EXTTextureFilterAnisotropic.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "statusMessage"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLContextEvent", 
        "FileName": "WebGLContextEvent.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLQuery", 
        "FileName": "WebGLQuery.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "drawArraysInstancedANGLE", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "mode"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "first"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "count"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "primcount"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "drawElementsInstancedANGLE", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "mode"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "count"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "long long", 
                        "Name": "offset"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "primcount"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttribDivisorANGLE", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "divisor"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE", 
                "Value": "0x88FE"
            }
        ], 
        "Name": "ANGLEInstancedArrays", 
        "FileName": "ANGLEInstancedArrays.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "CHROMIUMValuebuffer", 
        "FileName": "CHROMIUMValuebuffer.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "MIN_EXT", 
                "Value": "0x8007"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "MAX_EXT", 
                "Value": "0x8008"
            }
        ], 
        "Name": "EXTBlendMinMax", 
        "FileName": "EXTBlendMinMax.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "HTMLCanvasElement", 
                "Name": "canvas"
            }, 
            {
                "Type": "GLsizei", 
                "Name": "drawingBufferWidth"
            }, 
            {
                "Type": "GLsizei", 
                "Name": "drawingBufferHeight"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "activeTexture", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "texture"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "attachShader", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "WebGLShader", 
                        "Name": "shader"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bindAttribLocation", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bindBuffer", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "WebGLBuffer", 
                        "Name": "buffer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bindFramebuffer", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "WebGLFramebuffer", 
                        "Name": "framebuffer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bindRenderbuffer", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "WebGLRenderbuffer", 
                        "Name": "renderbuffer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bindTexture", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "WebGLTexture", 
                        "Name": "texture"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "blendColor", 
                "Argument": [
                    {
                        "Type": "GLclampf", 
                        "Name": "red"
                    }, 
                    {
                        "Type": "GLclampf", 
                        "Name": "green"
                    }, 
                    {
                        "Type": "GLclampf", 
                        "Name": "blue"
                    }, 
                    {
                        "Type": "GLclampf", 
                        "Name": "alpha"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "blendEquation", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "mode"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "blendEquationSeparate", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "modeRGB"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "modeAlpha"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "blendFunc", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "sfactor"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "dfactor"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "blendFuncSeparate", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "srcRGB"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "dstRGB"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "srcAlpha"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "dstAlpha"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bufferData", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLsizeiptr", 
                        "Name": "size"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "usage"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bufferData", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "data"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "usage"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bufferData", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "ArrayBuffer", 
                        "Name": "data"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "usage"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bufferSubData", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLintptr", 
                        "Name": "offset"
                    }, 
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bufferSubData", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLintptr", 
                        "Name": "offset"
                    }, 
                    {
                        "Type": "ArrayBuffer", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "GLenum", 
                "Name": "checkFramebufferStatus", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clear", 
                "Argument": [
                    {
                        "Type": "GLbitfield", 
                        "Name": "mask"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearColor", 
                "Argument": [
                    {
                        "Type": "GLclampf", 
                        "Name": "red"
                    }, 
                    {
                        "Type": "GLclampf", 
                        "Name": "green"
                    }, 
                    {
                        "Type": "GLclampf", 
                        "Name": "blue"
                    }, 
                    {
                        "Type": "GLclampf", 
                        "Name": "alpha"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearDepth", 
                "Argument": [
                    {
                        "Type": "GLclampf", 
                        "Name": "depth"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearStencil", 
                "Argument": [
                    {
                        "Type": "GLint", 
                        "Name": "s"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "colorMask", 
                "Argument": [
                    {
                        "Type": "GLboolean", 
                        "Name": "red"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "green"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "blue"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "alpha"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "compileShader", 
                "Argument": [
                    {
                        "Type": "WebGLShader", 
                        "Name": "shader"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "compressedTexImage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "internalformat"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "border"
                    }, 
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "compressedTexSubImage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "xoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "yoffset"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "copyTexImage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "internalformat"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "border"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "copyTexSubImage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "xoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "yoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }
                ]
            }, 
            {
                "Type": "WebGLBuffer", 
                "Name": "createBuffer", 
                "Argument": []
            }, 
            {
                "Type": "WebGLFramebuffer", 
                "Name": "createFramebuffer", 
                "Argument": []
            }, 
            {
                "Type": "WebGLProgram", 
                "Name": "createProgram", 
                "Argument": []
            }, 
            {
                "Type": "WebGLRenderbuffer", 
                "Name": "createRenderbuffer", 
                "Argument": []
            }, 
            {
                "Type": "WebGLShader", 
                "Name": "createShader", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }
                ]
            }, 
            {
                "Type": "WebGLTexture", 
                "Name": "createTexture", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "cullFace", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "mode"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteBuffer", 
                "Argument": [
                    {
                        "Type": "WebGLBuffer", 
                        "Name": "buffer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteFramebuffer", 
                "Argument": [
                    {
                        "Type": "WebGLFramebuffer", 
                        "Name": "framebuffer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteProgram", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteRenderbuffer", 
                "Argument": [
                    {
                        "Type": "WebGLRenderbuffer", 
                        "Name": "renderbuffer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteShader", 
                "Argument": [
                    {
                        "Type": "WebGLShader", 
                        "Name": "shader"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteTexture", 
                "Argument": [
                    {
                        "Type": "WebGLTexture", 
                        "Name": "texture"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "depthFunc", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "func"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "depthMask", 
                "Argument": [
                    {
                        "Type": "GLboolean", 
                        "Name": "flag"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "depthRange", 
                "Argument": [
                    {
                        "Type": "GLclampf", 
                        "Name": "zNear"
                    }, 
                    {
                        "Type": "GLclampf", 
                        "Name": "zFar"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "detachShader", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "WebGLShader", 
                        "Name": "shader"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "disable", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "cap"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "disableVertexAttribArray", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "drawArrays", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "mode"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "first"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "count"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "drawElements", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "mode"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "count"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "GLintptr", 
                        "Name": "offset"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "enable", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "cap"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "enableVertexAttribArray", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "finish", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "flush", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "framebufferRenderbuffer", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "attachment"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "renderbuffertarget"
                    }, 
                    {
                        "Type": "WebGLRenderbuffer", 
                        "Name": "renderbuffer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "framebufferTexture2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "attachment"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "textarget"
                    }, 
                    {
                        "Type": "WebGLTexture", 
                        "Name": "texture"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "frontFace", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "mode"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "generateMipmap", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }
                ]
            }, 
            {
                "Type": "WebGLActiveInfo", 
                "Name": "getActiveAttrib", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "WebGLActiveInfo", 
                "Name": "getActiveUniform", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getAttachedShaders", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }
                ]
            }, 
            {
                "Type": "GLint", 
                "Name": "getAttribLocation", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getBufferParameter", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": "WebGLContextAttributes", 
                "Name": "getContextAttributes", 
                "Argument": []
            }, 
            {
                "Type": "GLenum", 
                "Name": "getError", 
                "Argument": []
            }, 
            {
                "Type": "object", 
                "Name": "getExtension", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getFramebufferAttachmentParameter", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "attachment"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getParameter", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getProgramParameter", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "getProgramInfoLog", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getRenderbufferParameter", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getShaderParameter", 
                "Argument": [
                    {
                        "Type": "WebGLShader", 
                        "Name": "shader"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "getShaderInfoLog", 
                "Argument": [
                    {
                        "Type": "WebGLShader", 
                        "Name": "shader"
                    }
                ]
            }, 
            {
                "Type": "WebGLShaderPrecisionFormat", 
                "Name": "getShaderPrecisionFormat", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "shadertype"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "precisiontype"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "getShaderSource", 
                "Argument": [
                    {
                        "Type": "WebGLShader", 
                        "Name": "shader"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getSupportedExtensions", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "getTexParameter", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getUniform", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }
                ]
            }, 
            {
                "Type": "WebGLUniformLocation", 
                "Name": "getUniformLocation", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getVertexAttrib", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": "GLintptr", 
                "Name": "getVertexAttribOffset", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "hint", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "mode"
                    }
                ]
            }, 
            {
                "Type": "GLboolean", 
                "Name": "isBuffer", 
                "Argument": [
                    {
                        "Type": "WebGLBuffer", 
                        "Name": "buffer"
                    }
                ]
            }, 
            {
                "Type": "GLboolean", 
                "Name": "isContextLost", 
                "Argument": []
            }, 
            {
                "Type": "GLboolean", 
                "Name": "isEnabled", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "cap"
                    }
                ]
            }, 
            {
                "Type": "GLboolean", 
                "Name": "isFramebuffer", 
                "Argument": [
                    {
                        "Type": "WebGLFramebuffer", 
                        "Name": "framebuffer"
                    }
                ]
            }, 
            {
                "Type": "GLboolean", 
                "Name": "isProgram", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }
                ]
            }, 
            {
                "Type": "GLboolean", 
                "Name": "isRenderbuffer", 
                "Argument": [
                    {
                        "Type": "WebGLRenderbuffer", 
                        "Name": "renderbuffer"
                    }
                ]
            }, 
            {
                "Type": "GLboolean", 
                "Name": "isShader", 
                "Argument": [
                    {
                        "Type": "WebGLShader", 
                        "Name": "shader"
                    }
                ]
            }, 
            {
                "Type": "GLboolean", 
                "Name": "isTexture", 
                "Argument": [
                    {
                        "Type": "WebGLTexture", 
                        "Name": "texture"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "lineWidth", 
                "Argument": [
                    {
                        "Type": "GLfloat", 
                        "Name": "width"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "linkProgram", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "pixelStorei", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "param"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "polygonOffset", 
                "Argument": [
                    {
                        "Type": "GLfloat", 
                        "Name": "factor"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "units"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "readPixels", 
                "Argument": [
                    {
                        "Type": "GLint", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "pixels"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "renderbufferStorage", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "internalformat"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "sampleCoverage", 
                "Argument": [
                    {
                        "Type": "GLclampf", 
                        "Name": "value"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "invert"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scissor", 
                "Argument": [
                    {
                        "Type": "GLint", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "shaderSource", 
                "Argument": [
                    {
                        "Type": "WebGLShader", 
                        "Name": "shader"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "string"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "stencilFunc", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "func"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "ref"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "mask"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "stencilFuncSeparate", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "face"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "func"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "ref"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "mask"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "stencilMask", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "mask"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "stencilMaskSeparate", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "face"
                    }, 
                    {
                        "Type": "GLuint", 
                        "Name": "mask"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "stencilOp", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "fail"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "zfail"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "zpass"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "stencilOpSeparate", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "face"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "fail"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "zfail"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "zpass"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texParameterf", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "param"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texParameteri", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "pname"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "param"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texImage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "internalformat"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "border"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "pixels"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texImage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "internalformat"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "ImageData", 
                        "Name": "pixels"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texImage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "internalformat"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "HTMLImageElement", 
                        "Name": "image"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texImage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "internalformat"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "HTMLCanvasElement", 
                        "Name": "canvas"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texImage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "internalformat"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "HTMLVideoElement", 
                        "Name": "video"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texSubImage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "xoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "yoffset"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "pixels"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texSubImage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "xoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "yoffset"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "ImageData", 
                        "Name": "pixels"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texSubImage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "xoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "yoffset"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "HTMLImageElement", 
                        "Name": "image"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texSubImage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "xoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "yoffset"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "HTMLCanvasElement", 
                        "Name": "canvas"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "texSubImage2D", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "level"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "xoffset"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "yoffset"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "HTMLVideoElement", 
                        "Name": "video"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform1f", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "x"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform1fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform1fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": null, 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform1i", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "x"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform1iv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "Int32Array", 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform1iv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": null, 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform2f", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform2fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform2fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": null, 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform2i", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform2iv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "Int32Array", 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform2iv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": null, 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform3f", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "z"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform3fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform3fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": null, 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform3i", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "z"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform3iv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "Int32Array", 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform3iv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": null, 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform4f", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "z"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "w"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform4fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform4fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": null, 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform4i", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "z"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "w"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform4iv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "Int32Array", 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniform4iv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": null, 
                        "Name": "v"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix2fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "array"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix2fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": null, 
                        "Name": "array"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix3fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "array"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix3fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": null, 
                        "Name": "array"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix4fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "array"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformMatrix4fv", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "transpose"
                    }, 
                    {
                        "Type": null, 
                        "Name": "array"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "useProgram", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "validateProgram", 
                "Argument": [
                    {
                        "Type": "WebGLProgram", 
                        "Name": "program"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttrib1f", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "indx"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "x"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttrib1fv", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "indx"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "values"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttrib1fv", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "indx"
                    }, 
                    {
                        "Type": null, 
                        "Name": "values"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttrib2f", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "indx"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttrib2fv", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "indx"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "values"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttrib2fv", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "indx"
                    }, 
                    {
                        "Type": null, 
                        "Name": "values"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttrib3f", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "indx"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "z"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttrib3fv", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "indx"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "values"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttrib3fv", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "indx"
                    }, 
                    {
                        "Type": null, 
                        "Name": "values"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttrib4f", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "indx"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "z"
                    }, 
                    {
                        "Type": "GLfloat", 
                        "Name": "w"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttrib4fv", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "indx"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "values"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttrib4fv", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "indx"
                    }, 
                    {
                        "Type": null, 
                        "Name": "values"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "vertexAttribPointer", 
                "Argument": [
                    {
                        "Type": "GLuint", 
                        "Name": "indx"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "size"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "GLboolean", 
                        "Name": "normalized"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "stride"
                    }, 
                    {
                        "Type": "GLintptr", 
                        "Name": "offset"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "viewport", 
                "Argument": [
                    {
                        "Type": "GLint", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "GLint", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "GLsizei", 
                        "Name": "height"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "GLenum", 
                "Name": "DEPTH_BUFFER_BIT", 
                "Value": "0x00000100"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_BUFFER_BIT", 
                "Value": "0x00000400"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_BUFFER_BIT", 
                "Value": "0x00004000"
            }, 
            {
                "Type": "GLenum", 
                "Name": "POINTS", 
                "Value": "0x0000"
            }, 
            {
                "Type": "GLenum", 
                "Name": "LINES", 
                "Value": "0x0001"
            }, 
            {
                "Type": "GLenum", 
                "Name": "LINE_LOOP", 
                "Value": "0x0002"
            }, 
            {
                "Type": "GLenum", 
                "Name": "LINE_STRIP", 
                "Value": "0x0003"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TRIANGLES", 
                "Value": "0x0004"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TRIANGLE_STRIP", 
                "Value": "0x0005"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TRIANGLE_FAN", 
                "Value": "0x0006"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ZERO", 
                "Value": "0"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ONE", 
                "Value": "1"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SRC_COLOR", 
                "Value": "0x0300"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ONE_MINUS_SRC_COLOR", 
                "Value": "0x0301"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SRC_ALPHA", 
                "Value": "0x0302"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ONE_MINUS_SRC_ALPHA", 
                "Value": "0x0303"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DST_ALPHA", 
                "Value": "0x0304"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ONE_MINUS_DST_ALPHA", 
                "Value": "0x0305"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DST_COLOR", 
                "Value": "0x0306"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ONE_MINUS_DST_COLOR", 
                "Value": "0x0307"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SRC_ALPHA_SATURATE", 
                "Value": "0x0308"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FUNC_ADD", 
                "Value": "0x8006"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BLEND_EQUATION", 
                "Value": "0x8009"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BLEND_EQUATION_RGB", 
                "Value": "0x8009"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BLEND_EQUATION_ALPHA", 
                "Value": "0x883D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FUNC_SUBTRACT", 
                "Value": "0x800A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FUNC_REVERSE_SUBTRACT", 
                "Value": "0x800B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BLEND_DST_RGB", 
                "Value": "0x80C8"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BLEND_SRC_RGB", 
                "Value": "0x80C9"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BLEND_DST_ALPHA", 
                "Value": "0x80CA"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BLEND_SRC_ALPHA", 
                "Value": "0x80CB"
            }, 
            {
                "Type": "GLenum", 
                "Name": "CONSTANT_COLOR", 
                "Value": "0x8001"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ONE_MINUS_CONSTANT_COLOR", 
                "Value": "0x8002"
            }, 
            {
                "Type": "GLenum", 
                "Name": "CONSTANT_ALPHA", 
                "Value": "0x8003"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ONE_MINUS_CONSTANT_ALPHA", 
                "Value": "0x8004"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BLEND_COLOR", 
                "Value": "0x8005"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ARRAY_BUFFER", 
                "Value": "0x8892"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ELEMENT_ARRAY_BUFFER", 
                "Value": "0x8893"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ARRAY_BUFFER_BINDING", 
                "Value": "0x8894"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ELEMENT_ARRAY_BUFFER_BINDING", 
                "Value": "0x8895"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STREAM_DRAW", 
                "Value": "0x88E0"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STATIC_DRAW", 
                "Value": "0x88E4"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DYNAMIC_DRAW", 
                "Value": "0x88E8"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BUFFER_SIZE", 
                "Value": "0x8764"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BUFFER_USAGE", 
                "Value": "0x8765"
            }, 
            {
                "Type": "GLenum", 
                "Name": "CURRENT_VERTEX_ATTRIB", 
                "Value": "0x8626"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRONT", 
                "Value": "0x0404"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BACK", 
                "Value": "0x0405"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRONT_AND_BACK", 
                "Value": "0x0408"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_2D", 
                "Value": "0x0DE1"
            }, 
            {
                "Type": "GLenum", 
                "Name": "CULL_FACE", 
                "Value": "0x0B44"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BLEND", 
                "Value": "0x0BE2"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DITHER", 
                "Value": "0x0BD0"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_TEST", 
                "Value": "0x0B90"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH_TEST", 
                "Value": "0x0B71"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SCISSOR_TEST", 
                "Value": "0x0C11"
            }, 
            {
                "Type": "GLenum", 
                "Name": "POLYGON_OFFSET_FILL", 
                "Value": "0x8037"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SAMPLE_ALPHA_TO_COVERAGE", 
                "Value": "0x809E"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SAMPLE_COVERAGE", 
                "Value": "0x80A0"
            }, 
            {
                "Type": "GLenum", 
                "Name": "NO_ERROR", 
                "Value": "0"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INVALID_ENUM", 
                "Value": "0x0500"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INVALID_VALUE", 
                "Value": "0x0501"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INVALID_OPERATION", 
                "Value": "0x0502"
            }, 
            {
                "Type": "GLenum", 
                "Name": "OUT_OF_MEMORY", 
                "Value": "0x0505"
            }, 
            {
                "Type": "GLenum", 
                "Name": "CW", 
                "Value": "0x0900"
            }, 
            {
                "Type": "GLenum", 
                "Name": "CCW", 
                "Value": "0x0901"
            }, 
            {
                "Type": "GLenum", 
                "Name": "LINE_WIDTH", 
                "Value": "0x0B21"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ALIASED_POINT_SIZE_RANGE", 
                "Value": "0x846D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ALIASED_LINE_WIDTH_RANGE", 
                "Value": "0x846E"
            }, 
            {
                "Type": "GLenum", 
                "Name": "CULL_FACE_MODE", 
                "Value": "0x0B45"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRONT_FACE", 
                "Value": "0x0B46"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH_RANGE", 
                "Value": "0x0B70"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH_WRITEMASK", 
                "Value": "0x0B72"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH_CLEAR_VALUE", 
                "Value": "0x0B73"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH_FUNC", 
                "Value": "0x0B74"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_CLEAR_VALUE", 
                "Value": "0x0B91"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_FUNC", 
                "Value": "0x0B92"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_FAIL", 
                "Value": "0x0B94"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_PASS_DEPTH_FAIL", 
                "Value": "0x0B95"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_PASS_DEPTH_PASS", 
                "Value": "0x0B96"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_REF", 
                "Value": "0x0B97"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_VALUE_MASK", 
                "Value": "0x0B93"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_WRITEMASK", 
                "Value": "0x0B98"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_BACK_FUNC", 
                "Value": "0x8800"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_BACK_FAIL", 
                "Value": "0x8801"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_BACK_PASS_DEPTH_FAIL", 
                "Value": "0x8802"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_BACK_PASS_DEPTH_PASS", 
                "Value": "0x8803"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_BACK_REF", 
                "Value": "0x8CA3"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_BACK_VALUE_MASK", 
                "Value": "0x8CA4"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_BACK_WRITEMASK", 
                "Value": "0x8CA5"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VIEWPORT", 
                "Value": "0x0BA2"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SCISSOR_BOX", 
                "Value": "0x0C10"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_CLEAR_VALUE", 
                "Value": "0x0C22"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_WRITEMASK", 
                "Value": "0x0C23"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNPACK_ALIGNMENT", 
                "Value": "0x0CF5"
            }, 
            {
                "Type": "GLenum", 
                "Name": "PACK_ALIGNMENT", 
                "Value": "0x0D05"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_TEXTURE_SIZE", 
                "Value": "0x0D33"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_VIEWPORT_DIMS", 
                "Value": "0x0D3A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SUBPIXEL_BITS", 
                "Value": "0x0D50"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RED_BITS", 
                "Value": "0x0D52"
            }, 
            {
                "Type": "GLenum", 
                "Name": "GREEN_BITS", 
                "Value": "0x0D53"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BLUE_BITS", 
                "Value": "0x0D54"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ALPHA_BITS", 
                "Value": "0x0D55"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH_BITS", 
                "Value": "0x0D56"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_BITS", 
                "Value": "0x0D57"
            }, 
            {
                "Type": "GLenum", 
                "Name": "POLYGON_OFFSET_UNITS", 
                "Value": "0x2A00"
            }, 
            {
                "Type": "GLenum", 
                "Name": "POLYGON_OFFSET_FACTOR", 
                "Value": "0x8038"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_BINDING_2D", 
                "Value": "0x8069"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SAMPLE_BUFFERS", 
                "Value": "0x80A8"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SAMPLES", 
                "Value": "0x80A9"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SAMPLE_COVERAGE_VALUE", 
                "Value": "0x80AA"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SAMPLE_COVERAGE_INVERT", 
                "Value": "0x80AB"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COMPRESSED_TEXTURE_FORMATS", 
                "Value": "0x86A3"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DONT_CARE", 
                "Value": "0x1100"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FASTEST", 
                "Value": "0x1101"
            }, 
            {
                "Type": "GLenum", 
                "Name": "NICEST", 
                "Value": "0x1102"
            }, 
            {
                "Type": "GLenum", 
                "Name": "GENERATE_MIPMAP_HINT", 
                "Value": "0x8192"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BYTE", 
                "Value": "0x1400"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_BYTE", 
                "Value": "0x1401"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SHORT", 
                "Value": "0x1402"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_SHORT", 
                "Value": "0x1403"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INT", 
                "Value": "0x1404"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_INT", 
                "Value": "0x1405"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FLOAT", 
                "Value": "0x1406"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH_COMPONENT", 
                "Value": "0x1902"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ALPHA", 
                "Value": "0x1906"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB", 
                "Value": "0x1907"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGBA", 
                "Value": "0x1908"
            }, 
            {
                "Type": "GLenum", 
                "Name": "LUMINANCE", 
                "Value": "0x1909"
            }, 
            {
                "Type": "GLenum", 
                "Name": "LUMINANCE_ALPHA", 
                "Value": "0x190A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_SHORT_4_4_4_4", 
                "Value": "0x8033"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_SHORT_5_5_5_1", 
                "Value": "0x8034"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNSIGNED_SHORT_5_6_5", 
                "Value": "0x8363"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAGMENT_SHADER", 
                "Value": "0x8B30"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VERTEX_SHADER", 
                "Value": "0x8B31"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_VERTEX_ATTRIBS", 
                "Value": "0x8869"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_VERTEX_UNIFORM_VECTORS", 
                "Value": "0x8DFB"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_VARYING_VECTORS", 
                "Value": "0x8DFC"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_COMBINED_TEXTURE_IMAGE_UNITS", 
                "Value": "0x8B4D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_VERTEX_TEXTURE_IMAGE_UNITS", 
                "Value": "0x8B4C"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_TEXTURE_IMAGE_UNITS", 
                "Value": "0x8872"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_FRAGMENT_UNIFORM_VECTORS", 
                "Value": "0x8DFD"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SHADER_TYPE", 
                "Value": "0x8B4F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DELETE_STATUS", 
                "Value": "0x8B80"
            }, 
            {
                "Type": "GLenum", 
                "Name": "LINK_STATUS", 
                "Value": "0x8B82"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VALIDATE_STATUS", 
                "Value": "0x8B83"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ATTACHED_SHADERS", 
                "Value": "0x8B85"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ACTIVE_UNIFORMS", 
                "Value": "0x8B86"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ACTIVE_ATTRIBUTES", 
                "Value": "0x8B89"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SHADING_LANGUAGE_VERSION", 
                "Value": "0x8B8C"
            }, 
            {
                "Type": "GLenum", 
                "Name": "CURRENT_PROGRAM", 
                "Value": "0x8B8D"
            }, 
            {
                "Type": "GLenum", 
                "Name": "NEVER", 
                "Value": "0x0200"
            }, 
            {
                "Type": "GLenum", 
                "Name": "LESS", 
                "Value": "0x0201"
            }, 
            {
                "Type": "GLenum", 
                "Name": "EQUAL", 
                "Value": "0x0202"
            }, 
            {
                "Type": "GLenum", 
                "Name": "LEQUAL", 
                "Value": "0x0203"
            }, 
            {
                "Type": "GLenum", 
                "Name": "GREATER", 
                "Value": "0x0204"
            }, 
            {
                "Type": "GLenum", 
                "Name": "NOTEQUAL", 
                "Value": "0x0205"
            }, 
            {
                "Type": "GLenum", 
                "Name": "GEQUAL", 
                "Value": "0x0206"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ALWAYS", 
                "Value": "0x0207"
            }, 
            {
                "Type": "GLenum", 
                "Name": "KEEP", 
                "Value": "0x1E00"
            }, 
            {
                "Type": "GLenum", 
                "Name": "REPLACE", 
                "Value": "0x1E01"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INCR", 
                "Value": "0x1E02"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DECR", 
                "Value": "0x1E03"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INVERT", 
                "Value": "0x150A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INCR_WRAP", 
                "Value": "0x8507"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DECR_WRAP", 
                "Value": "0x8508"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VENDOR", 
                "Value": "0x1F00"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RENDERER", 
                "Value": "0x1F01"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VERSION", 
                "Value": "0x1F02"
            }, 
            {
                "Type": "GLenum", 
                "Name": "NEAREST", 
                "Value": "0x2600"
            }, 
            {
                "Type": "GLenum", 
                "Name": "LINEAR", 
                "Value": "0x2601"
            }, 
            {
                "Type": "GLenum", 
                "Name": "NEAREST_MIPMAP_NEAREST", 
                "Value": "0x2700"
            }, 
            {
                "Type": "GLenum", 
                "Name": "LINEAR_MIPMAP_NEAREST", 
                "Value": "0x2701"
            }, 
            {
                "Type": "GLenum", 
                "Name": "NEAREST_MIPMAP_LINEAR", 
                "Value": "0x2702"
            }, 
            {
                "Type": "GLenum", 
                "Name": "LINEAR_MIPMAP_LINEAR", 
                "Value": "0x2703"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_MAG_FILTER", 
                "Value": "0x2800"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_MIN_FILTER", 
                "Value": "0x2801"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_WRAP_S", 
                "Value": "0x2802"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_WRAP_T", 
                "Value": "0x2803"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE", 
                "Value": "0x1702"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_CUBE_MAP", 
                "Value": "0x8513"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_BINDING_CUBE_MAP", 
                "Value": "0x8514"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_CUBE_MAP_POSITIVE_X", 
                "Value": "0x8515"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_CUBE_MAP_NEGATIVE_X", 
                "Value": "0x8516"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_CUBE_MAP_POSITIVE_Y", 
                "Value": "0x8517"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_CUBE_MAP_NEGATIVE_Y", 
                "Value": "0x8518"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_CUBE_MAP_POSITIVE_Z", 
                "Value": "0x8519"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE_CUBE_MAP_NEGATIVE_Z", 
                "Value": "0x851A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_CUBE_MAP_TEXTURE_SIZE", 
                "Value": "0x851C"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE0", 
                "Value": "0x84C0"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE1", 
                "Value": "0x84C1"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE2", 
                "Value": "0x84C2"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE3", 
                "Value": "0x84C3"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE4", 
                "Value": "0x84C4"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE5", 
                "Value": "0x84C5"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE6", 
                "Value": "0x84C6"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE7", 
                "Value": "0x84C7"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE8", 
                "Value": "0x84C8"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE9", 
                "Value": "0x84C9"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE10", 
                "Value": "0x84CA"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE11", 
                "Value": "0x84CB"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE12", 
                "Value": "0x84CC"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE13", 
                "Value": "0x84CD"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE14", 
                "Value": "0x84CE"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE15", 
                "Value": "0x84CF"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE16", 
                "Value": "0x84D0"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE17", 
                "Value": "0x84D1"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE18", 
                "Value": "0x84D2"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE19", 
                "Value": "0x84D3"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE20", 
                "Value": "0x84D4"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE21", 
                "Value": "0x84D5"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE22", 
                "Value": "0x84D6"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE23", 
                "Value": "0x84D7"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE24", 
                "Value": "0x84D8"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE25", 
                "Value": "0x84D9"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE26", 
                "Value": "0x84DA"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE27", 
                "Value": "0x84DB"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE28", 
                "Value": "0x84DC"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE29", 
                "Value": "0x84DD"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE30", 
                "Value": "0x84DE"
            }, 
            {
                "Type": "GLenum", 
                "Name": "TEXTURE31", 
                "Value": "0x84DF"
            }, 
            {
                "Type": "GLenum", 
                "Name": "ACTIVE_TEXTURE", 
                "Value": "0x84E0"
            }, 
            {
                "Type": "GLenum", 
                "Name": "REPEAT", 
                "Value": "0x2901"
            }, 
            {
                "Type": "GLenum", 
                "Name": "CLAMP_TO_EDGE", 
                "Value": "0x812F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MIRRORED_REPEAT", 
                "Value": "0x8370"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FLOAT_VEC2", 
                "Value": "0x8B50"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FLOAT_VEC3", 
                "Value": "0x8B51"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FLOAT_VEC4", 
                "Value": "0x8B52"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INT_VEC2", 
                "Value": "0x8B53"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INT_VEC3", 
                "Value": "0x8B54"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INT_VEC4", 
                "Value": "0x8B55"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BOOL", 
                "Value": "0x8B56"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BOOL_VEC2", 
                "Value": "0x8B57"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BOOL_VEC3", 
                "Value": "0x8B58"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BOOL_VEC4", 
                "Value": "0x8B59"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FLOAT_MAT2", 
                "Value": "0x8B5A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FLOAT_MAT3", 
                "Value": "0x8B5B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FLOAT_MAT4", 
                "Value": "0x8B5C"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SAMPLER_2D", 
                "Value": "0x8B5E"
            }, 
            {
                "Type": "GLenum", 
                "Name": "SAMPLER_CUBE", 
                "Value": "0x8B60"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VERTEX_ATTRIB_ARRAY_ENABLED", 
                "Value": "0x8622"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VERTEX_ATTRIB_ARRAY_SIZE", 
                "Value": "0x8623"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VERTEX_ATTRIB_ARRAY_STRIDE", 
                "Value": "0x8624"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VERTEX_ATTRIB_ARRAY_TYPE", 
                "Value": "0x8625"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VERTEX_ATTRIB_ARRAY_NORMALIZED", 
                "Value": "0x886A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VERTEX_ATTRIB_ARRAY_POINTER", 
                "Value": "0x8645"
            }, 
            {
                "Type": "GLenum", 
                "Name": "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING", 
                "Value": "0x889F"
            }, 
            {
                "Type": "GLenum", 
                "Name": "IMPLEMENTATION_COLOR_READ_TYPE", 
                "Value": "0x8B9A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "IMPLEMENTATION_COLOR_READ_FORMAT", 
                "Value": "0x8B9B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COMPILE_STATUS", 
                "Value": "0x8B81"
            }, 
            {
                "Type": "GLenum", 
                "Name": "LOW_FLOAT", 
                "Value": "0x8DF0"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MEDIUM_FLOAT", 
                "Value": "0x8DF1"
            }, 
            {
                "Type": "GLenum", 
                "Name": "HIGH_FLOAT", 
                "Value": "0x8DF2"
            }, 
            {
                "Type": "GLenum", 
                "Name": "LOW_INT", 
                "Value": "0x8DF3"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MEDIUM_INT", 
                "Value": "0x8DF4"
            }, 
            {
                "Type": "GLenum", 
                "Name": "HIGH_INT", 
                "Value": "0x8DF5"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER", 
                "Value": "0x8D40"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RENDERBUFFER", 
                "Value": "0x8D41"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGBA4", 
                "Value": "0x8056"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB5_A1", 
                "Value": "0x8057"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RGB565", 
                "Value": "0x8D62"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH_COMPONENT16", 
                "Value": "0x81A5"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_INDEX", 
                "Value": "0x1901"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_INDEX8", 
                "Value": "0x8D48"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH_STENCIL", 
                "Value": "0x84F9"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RENDERBUFFER_WIDTH", 
                "Value": "0x8D42"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RENDERBUFFER_HEIGHT", 
                "Value": "0x8D43"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RENDERBUFFER_INTERNAL_FORMAT", 
                "Value": "0x8D44"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RENDERBUFFER_RED_SIZE", 
                "Value": "0x8D50"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RENDERBUFFER_GREEN_SIZE", 
                "Value": "0x8D51"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RENDERBUFFER_BLUE_SIZE", 
                "Value": "0x8D52"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RENDERBUFFER_ALPHA_SIZE", 
                "Value": "0x8D53"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RENDERBUFFER_DEPTH_SIZE", 
                "Value": "0x8D54"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RENDERBUFFER_STENCIL_SIZE", 
                "Value": "0x8D55"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE", 
                "Value": "0x8CD0"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME", 
                "Value": "0x8CD1"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL", 
                "Value": "0x8CD2"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE", 
                "Value": "0x8CD3"
            }, 
            {
                "Type": "GLenum", 
                "Name": "COLOR_ATTACHMENT0", 
                "Value": "0x8CE0"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH_ATTACHMENT", 
                "Value": "0x8D00"
            }, 
            {
                "Type": "GLenum", 
                "Name": "STENCIL_ATTACHMENT", 
                "Value": "0x8D20"
            }, 
            {
                "Type": "GLenum", 
                "Name": "DEPTH_STENCIL_ATTACHMENT", 
                "Value": "0x821A"
            }, 
            {
                "Type": "GLenum", 
                "Name": "NONE", 
                "Value": "0"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_COMPLETE", 
                "Value": "0x8CD5"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_INCOMPLETE_ATTACHMENT", 
                "Value": "0x8CD6"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT", 
                "Value": "0x8CD7"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_INCOMPLETE_DIMENSIONS", 
                "Value": "0x8CD9"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_UNSUPPORTED", 
                "Value": "0x8CDD"
            }, 
            {
                "Type": "GLenum", 
                "Name": "FRAMEBUFFER_BINDING", 
                "Value": "0x8CA6"
            }, 
            {
                "Type": "GLenum", 
                "Name": "RENDERBUFFER_BINDING", 
                "Value": "0x8CA7"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MAX_RENDERBUFFER_SIZE", 
                "Value": "0x84E8"
            }, 
            {
                "Type": "GLenum", 
                "Name": "INVALID_FRAMEBUFFER_OPERATION", 
                "Value": "0x0506"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNPACK_FLIP_Y_WEBGL", 
                "Value": "0x9240"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNPACK_PREMULTIPLY_ALPHA_WEBGL", 
                "Value": "0x9241"
            }, 
            {
                "Type": "GLenum", 
                "Name": "CONTEXT_LOST_WEBGL", 
                "Value": "0x9242"
            }, 
            {
                "Type": "GLenum", 
                "Name": "UNPACK_COLORSPACE_CONVERSION_WEBGL", 
                "Value": "0x9243"
            }, 
            {
                "Type": "GLenum", 
                "Name": "BROWSER_DEFAULT_WEBGL", 
                "Value": "0x9244"
            }
        ], 
        "Name": "WebGLRenderingContextBase", 
        "FileName": "WebGLRenderingContextBase.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "COMPRESSED_RGB_ATC_WEBGL", 
                "Value": "0x8C92"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL", 
                "Value": "0x8C93"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL", 
                "Value": "0x87EE"
            }
        ], 
        "Name": "WebGLCompressedTextureATC", 
        "FileName": "WebGLCompressedTextureATC.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "CHROMIUMValuebuffer", 
                "Name": "createValuebufferCHROMIUM", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "deleteValuebufferCHROMIUM", 
                "Argument": [
                    {
                        "Type": "CHROMIUMValuebuffer", 
                        "Name": "buffer"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isValuebufferCHROMIUM", 
                "Argument": [
                    {
                        "Type": "CHROMIUMValuebuffer", 
                        "Name": "buffer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bindValuebufferCHROMIUM", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "CHROMIUMValuebuffer", 
                        "Name": "buffer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "subscribeValueCHROMIUM", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "subscriptions"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "populateSubscribedValuesCHROMIUM", 
                "Argument": [
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "uniformValuebufferCHROMIUM", 
                "Argument": [
                    {
                        "Type": "WebGLUniformLocation", 
                        "Name": "location"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "GLenum", 
                        "Name": "subscription"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "GLenum", 
                "Name": "SUBSCRIBED_VALUES_BUFFER_CHROMIUM", 
                "Value": "0x924B"
            }, 
            {
                "Type": "GLenum", 
                "Name": "MOUSE_POSITION_CHROMIUM", 
                "Value": "0x924C"
            }
        ], 
        "Name": "CHROMIUMSubscribeUniform", 
        "FileName": "CHROMIUMSubscribeUniform.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "size"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLActiveInfo", 
        "FileName": "WebGLActiveInfo.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLBuffer", 
        "FileName": "WebGLBuffer.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "COMPRESSED_RGB_S3TC_DXT1_EXT", 
                "Value": "0x83F0"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "COMPRESSED_RGBA_S3TC_DXT1_EXT", 
                "Value": "0x83F1"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "COMPRESSED_RGBA_S3TC_DXT3_EXT", 
                "Value": "0x83F2"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "COMPRESSED_RGBA_S3TC_DXT5_EXT", 
                "Value": "0x83F3"
            }
        ], 
        "Name": "WebGLCompressedTextureS3TC", 
        "FileName": "WebGLCompressedTextureS3TC.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "SRGB_EXT", 
                "Value": "0x8C40"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SRGB_ALPHA_EXT", 
                "Value": "0x8C42"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "SRGB8_ALPHA8_EXT", 
                "Value": "0x8C43"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT", 
                "Value": "0x8210"
            }
        ], 
        "Name": "EXTsRGB", 
        "FileName": "EXTsRGB.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLSync", 
        "FileName": "WebGLSync.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "WebGLVertexArrayObjectOES", 
                "Name": "createVertexArrayOES", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "deleteVertexArrayOES", 
                "Argument": [
                    {
                        "Type": "WebGLVertexArrayObjectOES", 
                        "Name": "arrayObject"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isVertexArrayOES", 
                "Argument": [
                    {
                        "Type": "WebGLVertexArrayObjectOES", 
                        "Name": "arrayObject"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bindVertexArrayOES", 
                "Argument": [
                    {
                        "Type": "WebGLVertexArrayObjectOES", 
                        "Name": "arrayObject"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "VERTEX_ARRAY_BINDING_OES", 
                "Value": "0x85B5"
            }
        ], 
        "Name": "OESVertexArrayObject", 
        "FileName": "OESVertexArrayObject.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLSampler", 
        "FileName": "WebGLSampler.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLUniformLocation", 
        "FileName": "WebGLUniformLocation.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [
            {
                "Type": "GLenum", 
                "Name": "HALF_FLOAT_OES", 
                "Value": "0x8D61"
            }
        ], 
        "Name": "OESTextureHalfFloat", 
        "FileName": "OESTextureHalfFloat.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "COMPRESSED_RGB_ETC1_WEBGL", 
                "Value": "0x8D64"
            }
        ], 
        "Name": "WebGLCompressedTextureETC1", 
        "FileName": "WebGLCompressedTextureETC1.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "EXTFragDepth", 
        "FileName": "EXTFragDepth.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLVertexArrayObject", 
        "FileName": "WebGLVertexArrayObject.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLTexture", 
        "FileName": "WebGLTexture.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned long", 
                "Name": "FRAGMENT_SHADER_DERIVATIVE_HINT_OES", 
                "Value": "0x8B8B"
            }
        ], 
        "Name": "OESStandardDerivatives", 
        "FileName": "OESStandardDerivatives.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLRenderingContext", 
        "FileName": "WebGLRenderingContext.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "loseContext", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "restoreContext", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "WebGLLoseContext", 
        "FileName": "WebGLLoseContext.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLTransformFeedback", 
        "FileName": "WebGLTransformFeedback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLRenderbuffer", 
        "FileName": "WebGLRenderbuffer.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "WebGLFramebuffer", 
        "FileName": "WebGLFramebuffer.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "index"
            }, 
            {
                "Type": "boolean", 
                "Name": "connected"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "timestamp"
            }, 
            {
                "Type": "DOMString", 
                "Name": "mapping"
            }, 
            {
                "Type": "double", 
                "Name": "axes"
            }, 
            {
                "Type": "GamepadButton", 
                "Name": "buttons"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Gamepad", 
        "FileName": "Gamepad.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Gamepad", 
                "Name": "gamepad"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "GamepadEvent", 
        "FileName": "GamepadEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "pressed"
            }, 
            {
                "Type": "double", 
                "Name": "value"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "GamepadButton", 
        "FileName": "GamepadButton.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "Gamepad", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "GamepadList", 
        "FileName": "GamepadList.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "GamepadList", 
                "Name": "getGamepads", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorGamepad.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": null, 
                "Name": "version"
            }, 
            {
                "Type": "DOMStringList", 
                "Name": "objectStoreNames"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onabort"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onclose"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onversionchange"
            }
        ], 
        "Operation": [
            {
                "Type": "IDBObjectStore", 
                "Name": "createObjectStore", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "IDBObjectStoreParameters", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteObjectStore", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "IDBTransaction", 
                "Name": "transaction", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "storeNames"
                    }, 
                    {
                        "Type": "IDBTransactionMode", 
                        "Name": "mode"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "IDBDatabase", 
        "FileName": "IDBDatabase.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": null, 
                "Name": "keyPath"
            }, 
            {
                "Type": "DOMStringList", 
                "Name": "indexNames"
            }, 
            {
                "Type": "IDBTransaction", 
                "Name": "transaction"
            }, 
            {
                "Type": "boolean", 
                "Name": "autoIncrement"
            }
        ], 
        "Operation": [
            {
                "Type": "IDBRequest", 
                "Name": "put", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "value"
                    }, 
                    {
                        "Type": null, 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "add", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "value"
                    }, 
                    {
                        "Type": null, 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "delete", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "clear", 
                "Argument": []
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "get", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "getAll", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "range"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "maxCount"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "getAllKeys", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "range"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "maxCount"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "count", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "openCursor", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "range"
                    }, 
                    {
                        "Type": "IDBCursorDirection", 
                        "Name": "direction"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "openKeyCursor", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "range"
                    }, 
                    {
                        "Type": "IDBCursorDirection", 
                        "Name": "direction"
                    }
                ]
            }, 
            {
                "Type": "IDBIndex", 
                "Name": "createIndex", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": null, 
                        "Name": "keyPath"
                    }, 
                    {
                        "Type": "IDBIndexParameters", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "IDBIndex", 
                "Name": "index", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "deleteIndex", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "IDBObjectStore", 
        "FileName": "IDBObjectStore.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "IDBRequest", 
                "Name": "webkitGetDatabaseNames", 
                "Argument": []
            }, 
            {
                "Type": "IDBOpenDBRequest", 
                "Name": "open", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "unsigned long long", 
                        "Name": "version"
                    }
                ]
            }, 
            {
                "Type": "IDBOpenDBRequest", 
                "Name": "deleteDatabase", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "short", 
                "Name": "cmp", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "first"
                    }, 
                    {
                        "Type": null, 
                        "Name": "second"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "IDBFactory", 
        "FileName": "IDBFactory.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long long", 
                "Name": "oldVersion"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "newVersion"
            }, 
            {
                "Type": "IDBDataLossAmount", 
                "Name": "dataLoss"
            }, 
            {
                "Type": "DOMString", 
                "Name": "dataLossMessage"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "IDBVersionChangeEvent", 
        "FileName": "IDBVersionChangeEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": null, 
                "Name": "value"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "IDBCursorWithValue", 
        "FileName": "IDBCursorWithValue.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": null, 
                "Name": "lower"
            }, 
            {
                "Type": null, 
                "Name": "upper"
            }, 
            {
                "Type": "boolean", 
                "Name": "lowerOpen"
            }, 
            {
                "Type": "boolean", 
                "Name": "upperOpen"
            }
        ], 
        "Operation": [
            {
                "Type": "IDBKeyRange", 
                "Name": "only", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "IDBKeyRange", 
                "Name": "lowerBound", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "bound"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "open"
                    }
                ]
            }, 
            {
                "Type": "IDBKeyRange", 
                "Name": "upperBound", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "bound"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "open"
                    }
                ]
            }, 
            {
                "Type": "IDBKeyRange", 
                "Name": "bound", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "lower"
                    }, 
                    {
                        "Type": null, 
                        "Name": "upper"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "lowerOpen"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "upperOpen"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "IDBKeyRange", 
        "FileName": "IDBKeyRange.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "IDBObjectStore", 
                "Name": "objectStore"
            }, 
            {
                "Type": null, 
                "Name": "keyPath"
            }, 
            {
                "Type": "boolean", 
                "Name": "multiEntry"
            }, 
            {
                "Type": "boolean", 
                "Name": "unique"
            }
        ], 
        "Operation": [
            {
                "Type": "IDBRequest", 
                "Name": "get", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "getKey", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "getAll", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "range"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "maxCount"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "getAllKeys", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "range"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "maxCount"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "count", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "openCursor", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "range"
                    }, 
                    {
                        "Type": "IDBCursorDirection", 
                        "Name": "direction"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "openKeyCursor", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "range"
                    }, 
                    {
                        "Type": "IDBCursorDirection", 
                        "Name": "direction"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "IDBIndex", 
        "FileName": "IDBIndex.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMStringList", 
                "Name": "objectStoreNames"
            }, 
            {
                "Type": "IDBTransactionMode", 
                "Name": "mode"
            }, 
            {
                "Type": "IDBDatabase", 
                "Name": "db"
            }, 
            {
                "Type": "DOMError", 
                "Name": "error"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onabort"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oncomplete"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }
        ], 
        "Operation": [
            {
                "Type": "IDBObjectStore", 
                "Name": "objectStore", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "abort", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "IDBTransaction", 
        "FileName": "IDBTransaction.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": null, 
                "Name": "source"
            }, 
            {
                "Type": "IDBCursorDirection", 
                "Name": "direction"
            }, 
            {
                "Type": null, 
                "Name": "key"
            }, 
            {
                "Type": null, 
                "Name": "primaryKey"
            }
        ], 
        "Operation": [
            {
                "Type": "IDBRequest", 
                "Name": "update", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "advance", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "count"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "continue", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "continuePrimaryKey", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "key"
                    }, 
                    {
                        "Type": null, 
                        "Name": "primaryKey"
                    }
                ]
            }, 
            {
                "Type": "IDBRequest", 
                "Name": "delete", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "IDBCursor", 
        "FileName": "IDBCursor.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onblocked"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onupgradeneeded"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "IDBOpenDBRequest", 
        "FileName": "IDBOpenDBRequest.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "IDBFactory", 
                "Name": "webkitIndexedDB"
            }, 
            {
                "Type": "IDBCursorConstructor", 
                "Name": "webkitIDBCursor"
            }, 
            {
                "Type": "IDBDatabaseConstructor", 
                "Name": "webkitIDBDatabase"
            }, 
            {
                "Type": "IDBFactoryConstructor", 
                "Name": "webkitIDBFactory"
            }, 
            {
                "Type": "IDBIndexConstructor", 
                "Name": "webkitIDBIndex"
            }, 
            {
                "Type": "IDBKeyRangeConstructor", 
                "Name": "webkitIDBKeyRange"
            }, 
            {
                "Type": "IDBObjectStoreConstructor", 
                "Name": "webkitIDBObjectStore"
            }, 
            {
                "Type": "IDBRequestConstructor", 
                "Name": "webkitIDBRequest"
            }, 
            {
                "Type": "IDBTransactionConstructor", 
                "Name": "webkitIDBTransaction"
            }, 
            {
                "Type": "IDBFactory", 
                "Name": "indexedDB"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "WorkerGlobalScope", 
        "FileName": "WorkerGlobalScopeIndexedDatabase.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "IDBFactory", 
                "Name": "webkitIndexedDB"
            }, 
            {
                "Type": "IDBFactory", 
                "Name": "indexedDB"
            }, 
            {
                "Type": "IDBCursorConstructor", 
                "Name": "webkitIDBCursor"
            }, 
            {
                "Type": "IDBDatabaseConstructor", 
                "Name": "webkitIDBDatabase"
            }, 
            {
                "Type": "IDBFactoryConstructor", 
                "Name": "webkitIDBFactory"
            }, 
            {
                "Type": "IDBIndexConstructor", 
                "Name": "webkitIDBIndex"
            }, 
            {
                "Type": "IDBKeyRangeConstructor", 
                "Name": "webkitIDBKeyRange"
            }, 
            {
                "Type": "IDBObjectStoreConstructor", 
                "Name": "webkitIDBObjectStore"
            }, 
            {
                "Type": "IDBRequestConstructor", 
                "Name": "webkitIDBRequest"
            }, 
            {
                "Type": "IDBTransactionConstructor", 
                "Name": "webkitIDBTransaction"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowIndexedDatabase.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": null, 
                "Name": "result"
            }, 
            {
                "Type": "DOMError", 
                "Name": "error"
            }, 
            {
                "Type": null, 
                "Name": "source"
            }, 
            {
                "Type": "IDBTransaction", 
                "Name": "transaction"
            }, 
            {
                "Type": "IDBRequestReadyState", 
                "Name": "readyState"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onsuccess"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "IDBRequest", 
        "FileName": "IDBRequest.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "creationTime"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "totalVideoFrames"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "droppedVideoFrames"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "corruptedVideoFrames"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "VideoPlaybackQuality", 
        "FileName": "VideoPlaybackQuality.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "TrackDefaultType", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "byteStreamTrackID"
            }, 
            {
                "Type": "DOMString", 
                "Name": "language"
            }, 
            {
                "Type": "DOMString", 
                "Name": "label"
            }, 
            {
                "Type": "DOMString", 
                "Name": "kinds"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "TrackDefault", 
        "FileName": "TrackDefault.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "createObjectURL", 
                "Argument": [
                    {
                        "Type": "MediaSource", 
                        "Name": "source"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "URL", 
        "FileName": "URLMediaSource.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AppendMode", 
                "Name": "mode"
            }, 
            {
                "Type": "boolean", 
                "Name": "updating"
            }, 
            {
                "Type": "TimeRanges", 
                "Name": "buffered"
            }, 
            {
                "Type": "double", 
                "Name": "timestampOffset"
            }, 
            {
                "Type": "double", 
                "Name": "appendWindowStart"
            }, 
            {
                "Type": "double", 
                "Name": "appendWindowEnd"
            }, 
            {
                "Type": "TrackDefaultList", 
                "Name": "trackDefaults"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "appendBuffer", 
                "Argument": [
                    {
                        "Type": "ArrayBuffer", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "appendBuffer", 
                "Argument": [
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "appendStream", 
                "Argument": [
                    {
                        "Type": "Stream", 
                        "Name": "stream"
                    }, 
                    {
                        "Type": "unsigned long long", 
                        "Name": "maxSize"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "abort", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "remove", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "start"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "end"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SourceBuffer", 
        "FileName": "SourceBuffer.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "VideoPlaybackQuality", 
                "Name": "getVideoPlaybackQuality", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "HTMLVideoElement", 
        "FileName": "HTMLVideoElementMediaSource.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "TrackDefault", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TrackDefaultList", 
        "FileName": "TrackDefaultList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "SourceBuffer", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SourceBufferList", 
        "FileName": "SourceBufferList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SourceBufferList", 
                "Name": "sourceBuffers"
            }, 
            {
                "Type": "SourceBufferList", 
                "Name": "activeSourceBuffers"
            }, 
            {
                "Type": "double", 
                "Name": "duration"
            }, 
            {
                "Type": "DOMString", 
                "Name": "readyState"
            }
        ], 
        "Operation": [
            {
                "Type": "SourceBuffer", 
                "Name": "addSourceBuffer", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeSourceBuffer", 
                "Argument": [
                    {
                        "Type": "SourceBuffer", 
                        "Name": "buffer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "endOfStream", 
                "Argument": [
                    {
                        "Type": "EndOfStreamError", 
                        "Name": "error"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isTypeSupported", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "MediaSource", 
        "FileName": "MediaSource.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Crypto", 
                "Name": "crypto"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowCrypto.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SubtleCrypto", 
                "Name": "subtle"
            }
        ], 
        "Operation": [
            {
                "Type": "ArrayBufferView", 
                "Name": "getRandomValues", 
                "Argument": [
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "array"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Crypto", 
        "FileName": "Crypto.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "encrypt", 
                "Argument": [
                    {
                        "Type": "AlgorithmIdentifier", 
                        "Name": "algorithm"
                    }, 
                    {
                        "Type": "CryptoKey", 
                        "Name": "key"
                    }, 
                    {
                        "Type": "BufferSource", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "decrypt", 
                "Argument": [
                    {
                        "Type": "AlgorithmIdentifier", 
                        "Name": "algorithm"
                    }, 
                    {
                        "Type": "CryptoKey", 
                        "Name": "key"
                    }, 
                    {
                        "Type": "BufferSource", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "sign", 
                "Argument": [
                    {
                        "Type": "AlgorithmIdentifier", 
                        "Name": "algorithm"
                    }, 
                    {
                        "Type": "CryptoKey", 
                        "Name": "key"
                    }, 
                    {
                        "Type": "BufferSource", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "verify", 
                "Argument": [
                    {
                        "Type": "AlgorithmIdentifier", 
                        "Name": "algorithm"
                    }, 
                    {
                        "Type": "CryptoKey", 
                        "Name": "key"
                    }, 
                    {
                        "Type": "BufferSource", 
                        "Name": "signature"
                    }, 
                    {
                        "Type": "BufferSource", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "digest", 
                "Argument": [
                    {
                        "Type": "AlgorithmIdentifier", 
                        "Name": "algorithm"
                    }, 
                    {
                        "Type": "BufferSource", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "generateKey", 
                "Argument": [
                    {
                        "Type": "AlgorithmIdentifier", 
                        "Name": "algorithm"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "extractable"
                    }, 
                    {
                        "Type": null, 
                        "Name": "keyUsages"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "importKey", 
                "Argument": [
                    {
                        "Type": "KeyFormat", 
                        "Name": "format"
                    }, 
                    {
                        "Type": null, 
                        "Name": "keyData"
                    }, 
                    {
                        "Type": "AlgorithmIdentifier", 
                        "Name": "algorithm"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "extractable"
                    }, 
                    {
                        "Type": null, 
                        "Name": "keyUsages"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "exportKey", 
                "Argument": [
                    {
                        "Type": "KeyFormat", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "CryptoKey", 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "deriveBits", 
                "Argument": [
                    {
                        "Type": "AlgorithmIdentifier", 
                        "Name": "algorithm"
                    }, 
                    {
                        "Type": "CryptoKey", 
                        "Name": "baseKey"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "length"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "deriveKey", 
                "Argument": [
                    {
                        "Type": "AlgorithmIdentifier", 
                        "Name": "algorithm"
                    }, 
                    {
                        "Type": "CryptoKey", 
                        "Name": "baseKey"
                    }, 
                    {
                        "Type": "AlgorithmIdentifier", 
                        "Name": "derivedKeyType"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "extractable"
                    }, 
                    {
                        "Type": null, 
                        "Name": "keyUsages"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "wrapKey", 
                "Argument": [
                    {
                        "Type": "KeyFormat", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "CryptoKey", 
                        "Name": "key"
                    }, 
                    {
                        "Type": "CryptoKey", 
                        "Name": "wrappingKey"
                    }, 
                    {
                        "Type": "AlgorithmIdentifier", 
                        "Name": "wrapAlgorithm"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "unwrapKey", 
                "Argument": [
                    {
                        "Type": "KeyFormat", 
                        "Name": "format"
                    }, 
                    {
                        "Type": "BufferSource", 
                        "Name": "wrappedKey"
                    }, 
                    {
                        "Type": "CryptoKey", 
                        "Name": "unwrappingKey"
                    }, 
                    {
                        "Type": "AlgorithmIdentifier", 
                        "Name": "unwrapAlgorithm"
                    }, 
                    {
                        "Type": "AlgorithmIdentifier", 
                        "Name": "unwrappedKeyAlgorithm"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "extractable"
                    }, 
                    {
                        "Type": null, 
                        "Name": "keyUsages"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SubtleCrypto", 
        "FileName": "SubtleCrypto.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "boolean", 
                "Name": "extractable"
            }, 
            {
                "Type": "object", 
                "Name": "algorithm"
            }, 
            {
                "Type": "DOMString", 
                "Name": "usages"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "CryptoKey", 
        "FileName": "CryptoKey.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Crypto", 
                "Name": "crypto"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "WorkerGlobalScope", 
        "FileName": "WorkerGlobalScopeCrypto.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "octet", 
                "Name": "configurationValue"
            }, 
            {
                "Type": "DOMString", 
                "Name": "configurationName"
            }, 
            {
                "Type": null, 
                "Name": "interfaces"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "USBConfiguration", 
        "FileName": "USBConfiguration.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "octet", 
                "Name": "alternateSetting"
            }, 
            {
                "Type": "octet", 
                "Name": "interfaceClass"
            }, 
            {
                "Type": "octet", 
                "Name": "interfaceSubclass"
            }, 
            {
                "Type": "octet", 
                "Name": "interfaceProtocol"
            }, 
            {
                "Type": "DOMString", 
                "Name": "interfaceName"
            }, 
            {
                "Type": null, 
                "Name": "endpoints"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "USBAlternateInterface", 
        "FileName": "USBAlternateInterface.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "octet", 
                "Name": "endpointNumber"
            }, 
            {
                "Type": "USBDirection", 
                "Name": "direction"
            }, 
            {
                "Type": "USBEndpointType", 
                "Name": "type"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "packetSize"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "USBEndpoint", 
        "FileName": "USBEndpoint.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "guid"
            }, 
            {
                "Type": "octet", 
                "Name": "usbVersionMajor"
            }, 
            {
                "Type": "octet", 
                "Name": "usbVersionMinor"
            }, 
            {
                "Type": "octet", 
                "Name": "usbVersionSubminor"
            }, 
            {
                "Type": "octet", 
                "Name": "deviceClass"
            }, 
            {
                "Type": "octet", 
                "Name": "deviceSubclass"
            }, 
            {
                "Type": "octet", 
                "Name": "deviceProtocol"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "vendorId"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "productId"
            }, 
            {
                "Type": "octet", 
                "Name": "deviceVersionMajor"
            }, 
            {
                "Type": "octet", 
                "Name": "deviceVersionMinor"
            }, 
            {
                "Type": "octet", 
                "Name": "deviceVersionSubminor"
            }, 
            {
                "Type": "DOMString", 
                "Name": "manufacturerName"
            }, 
            {
                "Type": "DOMString", 
                "Name": "productName"
            }, 
            {
                "Type": "DOMString", 
                "Name": "serialNumber"
            }, 
            {
                "Type": null, 
                "Name": "configurations"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "USBDevice", 
        "FileName": "USBDevice.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "USB", 
                "Name": "usb"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorUSB.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "getDevices", 
                "Argument": [
                    {
                        "Type": "USBDeviceEnumerationOptions", 
                        "Name": "options"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "USB", 
        "FileName": "USB.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "octet", 
                "Name": "interfaceNumber"
            }, 
            {
                "Type": null, 
                "Name": "alternates"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "USBInterface", 
        "FileName": "USBInterface.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "addPath", 
                "Argument": [
                    {
                        "Type": "Path2D", 
                        "Name": "path"
                    }, 
                    {
                        "Type": "SVGMatrix", 
                        "Name": "transform"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Path2D", 
        "FileName": "Path2D.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "addColorStop", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "offset"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "color"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CanvasGradient", 
        "FileName": "CanvasGradient.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "region"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Touch", 
        "FileName": "TouchHitRegion.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "HTMLCanvasElement", 
                "Name": "canvas"
            }, 
            {
                "Type": "SVGMatrix", 
                "Name": "currentTransform"
            }, 
            {
                "Type": "float", 
                "Name": "globalAlpha"
            }, 
            {
                "Type": "DOMString", 
                "Name": "globalCompositeOperation"
            }, 
            {
                "Type": "DOMString", 
                "Name": "filter"
            }, 
            {
                "Type": "boolean", 
                "Name": "webkitImageSmoothingEnabled"
            }, 
            {
                "Type": "boolean", 
                "Name": "imageSmoothingEnabled"
            }, 
            {
                "Type": null, 
                "Name": "strokeStyle"
            }, 
            {
                "Type": null, 
                "Name": "fillStyle"
            }, 
            {
                "Type": "float", 
                "Name": "shadowOffsetX"
            }, 
            {
                "Type": "float", 
                "Name": "shadowOffsetY"
            }, 
            {
                "Type": "float", 
                "Name": "shadowBlur"
            }, 
            {
                "Type": "DOMString", 
                "Name": "shadowColor"
            }, 
            {
                "Type": "float", 
                "Name": "lineWidth"
            }, 
            {
                "Type": "DOMString", 
                "Name": "lineCap"
            }, 
            {
                "Type": "DOMString", 
                "Name": "lineJoin"
            }, 
            {
                "Type": "float", 
                "Name": "miterLimit"
            }, 
            {
                "Type": "float", 
                "Name": "lineDashOffset"
            }, 
            {
                "Type": "DOMString", 
                "Name": "font"
            }, 
            {
                "Type": "DOMString", 
                "Name": "textAlign"
            }, 
            {
                "Type": "DOMString", 
                "Name": "textBaseline"
            }, 
            {
                "Type": "DOMString", 
                "Name": "direction"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "save", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "restore", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "scale", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "rotate", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "angle"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "translate", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "transform", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "a"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "b"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "c"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "d"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "e"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "f"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setTransform", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "a"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "b"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "c"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "d"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "e"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "f"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "resetTransform", 
                "Argument": []
            }, 
            {
                "Type": "CanvasGradient", 
                "Name": "createLinearGradient", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x0"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y0"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x1"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y1"
                    }
                ]
            }, 
            {
                "Type": "CanvasGradient", 
                "Name": "createRadialGradient", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x0"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y0"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "r0"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x1"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y1"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "r1"
                    }
                ]
            }, 
            {
                "Type": "CanvasPattern", 
                "Name": "createPattern", 
                "Argument": [
                    {
                        "Type": "CanvasImageSource", 
                        "Name": "image"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "repetitionType"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearRect", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "height"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "fillRect", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "height"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "strokeRect", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "height"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "beginPath", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "fill", 
                "Argument": [
                    {
                        "Type": "CanvasFillRule", 
                        "Name": "winding"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "fill", 
                "Argument": [
                    {
                        "Type": "Path2D", 
                        "Name": "path"
                    }, 
                    {
                        "Type": "CanvasFillRule", 
                        "Name": "winding"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "stroke", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "stroke", 
                "Argument": [
                    {
                        "Type": "Path2D", 
                        "Name": "path"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "drawFocusIfNeeded", 
                "Argument": [
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "drawFocusIfNeeded", 
                "Argument": [
                    {
                        "Type": "Path2D", 
                        "Name": "path"
                    }, 
                    {
                        "Type": "Element", 
                        "Name": "element"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "scrollPathIntoView", 
                "Argument": [
                    {
                        "Type": "Path2D", 
                        "Name": "path"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clip", 
                "Argument": [
                    {
                        "Type": "CanvasFillRule", 
                        "Name": "winding"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clip", 
                "Argument": [
                    {
                        "Type": "Path2D", 
                        "Name": "path"
                    }, 
                    {
                        "Type": "CanvasFillRule", 
                        "Name": "winding"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isPointInPath", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "CanvasFillRule", 
                        "Name": "winding"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isPointInPath", 
                "Argument": [
                    {
                        "Type": "Path2D", 
                        "Name": "path"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "CanvasFillRule", 
                        "Name": "winding"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isPointInStroke", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isPointInStroke", 
                "Argument": [
                    {
                        "Type": "Path2D", 
                        "Name": "path"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "fillText", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "text"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "maxWidth"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "strokeText", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "text"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "maxWidth"
                    }
                ]
            }, 
            {
                "Type": "TextMetrics", 
                "Name": "measureText", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "text"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "drawImage", 
                "Argument": [
                    {
                        "Type": "CanvasImageSource", 
                        "Name": "image"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "drawImage", 
                "Argument": [
                    {
                        "Type": "CanvasImageSource", 
                        "Name": "image"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "height"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "drawImage", 
                "Argument": [
                    {
                        "Type": "CanvasImageSource", 
                        "Name": "image"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "sx"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "sy"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "sw"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "sh"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "dx"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "dy"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "dw"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "dh"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "addHitRegion", 
                "Argument": [
                    {
                        "Type": "HitRegionOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeHitRegion", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "id"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearHitRegions", 
                "Argument": []
            }, 
            {
                "Type": "ImageData", 
                "Name": "createImageData", 
                "Argument": [
                    {
                        "Type": "ImageData", 
                        "Name": "imagedata"
                    }
                ]
            }, 
            {
                "Type": "ImageData", 
                "Name": "createImageData", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "sw"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "sh"
                    }
                ]
            }, 
            {
                "Type": "ImageData", 
                "Name": "getImageData", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "sx"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "sy"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "sw"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "sh"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "putImageData", 
                "Argument": [
                    {
                        "Type": "ImageData", 
                        "Name": "imagedata"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "dx"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "dy"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "putImageData", 
                "Argument": [
                    {
                        "Type": "ImageData", 
                        "Name": "imagedata"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "dx"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "dy"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "dirtyX"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "dirtyY"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "dirtyWidth"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "dirtyHeight"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "isContextLost", 
                "Argument": []
            }, 
            {
                "Type": "Canvas2DContextAttributes", 
                "Name": "getContextAttributes", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "setLineDash", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "dash"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getLineDash", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "CanvasRenderingContext2D", 
        "FileName": "CanvasRenderingContext2D.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setTransform", 
                "Argument": [
                    {
                        "Type": "SVGMatrix", 
                        "Name": "transform"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CanvasPattern", 
        "FileName": "CanvasPattern.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "closePath", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "moveTo", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "lineTo", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "quadraticCurveTo", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "cpx"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "cpy"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "bezierCurveTo", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "cp1x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "cp1y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "cp2x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "cp2y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "arcTo", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x1"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y1"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "x2"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y2"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "radius"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "rect", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "width"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "height"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "arc", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "radius"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "startAngle"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "endAngle"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "anticlockwise"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "ellipse", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "radiusX"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "radiusY"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "rotation"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "startAngle"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "endAngle"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "anticlockwise"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CanvasPathMethods", 
        "FileName": "CanvasPathMethods.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "region"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MouseEvent", 
        "FileName": "MouseEventHitRegion.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "long", 
                "Name": "length"
            }, 
            {
                "Type": "double", 
                "Name": "duration"
            }, 
            {
                "Type": "float", 
                "Name": "sampleRate"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "numberOfChannels"
            }
        ], 
        "Operation": [
            {
                "Type": "Float32Array", 
                "Name": "getChannelData", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "channelIndex"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "copyFromChannel", 
                "Argument": [
                    {
                        "Type": "Float32Array", 
                        "Name": "destination"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "channelNumber"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "startInChannel"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "copyToChannel", 
                "Argument": [
                    {
                        "Type": "Float32Array", 
                        "Name": "source"
                    }, 
                    {
                        "Type": "long", 
                        "Name": "channelNumber"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "startInChannel"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "AudioBuffer", 
        "FileName": "AudioBuffer.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "AudioBuffer", 
                        "Name": "audioBuffer"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "AudioBufferCallback", 
        "FileName": "AudioBufferCallback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "AudioSourceNode", 
        "FileName": "AudioSourceNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "OscillatorType", 
                "Name": "type"
            }, 
            {
                "Type": "AudioParam", 
                "Name": "frequency"
            }, 
            {
                "Type": "AudioParam", 
                "Name": "detune"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onended"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "start", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "when"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "stop", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "when"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setPeriodicWave", 
                "Argument": [
                    {
                        "Type": "PeriodicWave", 
                        "Name": "periodicWave"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "OscillatorNode", 
        "FileName": "OscillatorNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "value"
            }, 
            {
                "Type": "float", 
                "Name": "defaultValue"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setValueAtTime", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "value"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "time"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "linearRampToValueAtTime", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "value"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "time"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "exponentialRampToValueAtTime", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "value"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "time"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setTargetAtTime", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "target"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "time"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "timeConstant"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setValueCurveAtTime", 
                "Argument": [
                    {
                        "Type": "Float32Array", 
                        "Name": "values"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "time"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "duration"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "cancelScheduledValues", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "startTime"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "AudioParam", 
        "FileName": "AudioParam.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "oncomplete"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "startRendering", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "OfflineAudioContext", 
        "FileName": "OfflineAudioContext.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Float32Array", 
                "Name": "curve"
            }, 
            {
                "Type": "OverSampleType", 
                "Name": "oversample"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "WaveShaperNode", 
        "FileName": "WaveShaperNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "PanningModelType", 
                "Name": "panningModel"
            }, 
            {
                "Type": "DistanceModelType", 
                "Name": "distanceModel"
            }, 
            {
                "Type": "double", 
                "Name": "refDistance"
            }, 
            {
                "Type": "double", 
                "Name": "maxDistance"
            }, 
            {
                "Type": "double", 
                "Name": "rolloffFactor"
            }, 
            {
                "Type": "double", 
                "Name": "coneInnerAngle"
            }, 
            {
                "Type": "double", 
                "Name": "coneOuterAngle"
            }, 
            {
                "Type": "double", 
                "Name": "coneOuterGain"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setPosition", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "z"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setOrientation", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "z"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setVelocity", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "z"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "PannerNode", 
        "FileName": "PannerNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AudioDestinationNode", 
                "Name": "destination"
            }, 
            {
                "Type": "double", 
                "Name": "currentTime"
            }, 
            {
                "Type": "float", 
                "Name": "sampleRate"
            }, 
            {
                "Type": "AudioListener", 
                "Name": "listener"
            }, 
            {
                "Type": "AudioContextState", 
                "Name": "state"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onstatechange"
            }
        ], 
        "Operation": [
            {
                "Type": "AudioBuffer", 
                "Name": "createBuffer", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "numberOfChannels"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "numberOfFrames"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "sampleRate"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "decodeAudioData", 
                "Argument": [
                    {
                        "Type": "ArrayBuffer", 
                        "Name": "audioData"
                    }, 
                    {
                        "Type": "AudioBufferCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "AudioBufferCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }, 
            {
                "Type": "AudioBufferSourceNode", 
                "Name": "createBufferSource", 
                "Argument": []
            }, 
            {
                "Type": "MediaElementAudioSourceNode", 
                "Name": "createMediaElementSource", 
                "Argument": [
                    {
                        "Type": "HTMLMediaElement", 
                        "Name": "mediaElement"
                    }
                ]
            }, 
            {
                "Type": "MediaStreamAudioSourceNode", 
                "Name": "createMediaStreamSource", 
                "Argument": [
                    {
                        "Type": "MediaStream", 
                        "Name": "mediaStream"
                    }
                ]
            }, 
            {
                "Type": "MediaStreamAudioDestinationNode", 
                "Name": "createMediaStreamDestination", 
                "Argument": []
            }, 
            {
                "Type": "GainNode", 
                "Name": "createGain", 
                "Argument": []
            }, 
            {
                "Type": "DelayNode", 
                "Name": "createDelay", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "maxDelayTime"
                    }
                ]
            }, 
            {
                "Type": "BiquadFilterNode", 
                "Name": "createBiquadFilter", 
                "Argument": []
            }, 
            {
                "Type": "WaveShaperNode", 
                "Name": "createWaveShaper", 
                "Argument": []
            }, 
            {
                "Type": "PannerNode", 
                "Name": "createPanner", 
                "Argument": []
            }, 
            {
                "Type": "ConvolverNode", 
                "Name": "createConvolver", 
                "Argument": []
            }, 
            {
                "Type": "DynamicsCompressorNode", 
                "Name": "createDynamicsCompressor", 
                "Argument": []
            }, 
            {
                "Type": "AnalyserNode", 
                "Name": "createAnalyser", 
                "Argument": []
            }, 
            {
                "Type": "ScriptProcessorNode", 
                "Name": "createScriptProcessor", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "bufferSize"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "numberOfInputChannels"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "numberOfOutputChannels"
                    }
                ]
            }, 
            {
                "Type": "StereoPannerNode", 
                "Name": "createStereoPanner", 
                "Argument": []
            }, 
            {
                "Type": "OscillatorNode", 
                "Name": "createOscillator", 
                "Argument": []
            }, 
            {
                "Type": "PeriodicWave", 
                "Name": "createPeriodicWave", 
                "Argument": [
                    {
                        "Type": "Float32Array", 
                        "Name": "real"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "imag"
                    }, 
                    {
                        "Type": "Dictionary", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "ChannelSplitterNode", 
                "Name": "createChannelSplitter", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "numberOfOutputs"
                    }
                ]
            }, 
            {
                "Type": "ChannelMergerNode", 
                "Name": "createChannelMerger", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "numberOfInputs"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "close", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "suspend", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "resume", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "AudioContext", 
        "FileName": "AudioContext.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AudioBuffer", 
                "Name": "buffer"
            }, 
            {
                "Type": "boolean", 
                "Name": "normalize"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ConvolverNode", 
        "FileName": "ConvolverNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AudioParam", 
                "Name": "pan"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "StereoPannerNode", 
        "FileName": "StereoPannerNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "HTMLMediaElement", 
                "Name": "mediaElement"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MediaElementAudioSourceNode", 
        "FileName": "MediaElementAudioSourceNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AudioBuffer", 
                "Name": "renderedBuffer"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "OfflineAudioCompletionEvent", 
        "FileName": "OfflineAudioCompletionEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MediaStream", 
                "Name": "stream"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MediaStreamAudioDestinationNode", 
        "FileName": "MediaStreamAudioDestinationNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "float", 
                "Name": "dopplerFactor"
            }, 
            {
                "Type": "float", 
                "Name": "speedOfSound"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setPosition", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "z"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setOrientation", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "z"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "xUp"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "yUp"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "zUp"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setVelocity", 
                "Argument": [
                    {
                        "Type": "float", 
                        "Name": "x"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "y"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "z"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "AudioListener", 
        "FileName": "AudioListener.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MediaStream", 
                "Name": "mediaStream"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MediaStreamAudioSourceNode", 
        "FileName": "MediaStreamAudioSourceNode.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "ChannelSplitterNode", 
        "FileName": "ChannelSplitterNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "BiquadFilterType", 
                "Name": "type"
            }, 
            {
                "Type": "AudioParam", 
                "Name": "frequency"
            }, 
            {
                "Type": "AudioParam", 
                "Name": "detune"
            }, 
            {
                "Type": "AudioParam", 
                "Name": "Q"
            }, 
            {
                "Type": "AudioParam", 
                "Name": "gain"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "getFrequencyResponse", 
                "Argument": [
                    {
                        "Type": "Float32Array", 
                        "Name": "frequencyHz"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "magResponse"
                    }, 
                    {
                        "Type": "Float32Array", 
                        "Name": "phaseResponse"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "BiquadFilterNode", 
        "FileName": "BiquadFilterNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AudioBuffer", 
                "Name": "buffer"
            }, 
            {
                "Type": "AudioParam", 
                "Name": "playbackRate"
            }, 
            {
                "Type": "AudioParam", 
                "Name": "detune"
            }, 
            {
                "Type": "boolean", 
                "Name": "loop"
            }, 
            {
                "Type": "double", 
                "Name": "loopStart"
            }, 
            {
                "Type": "double", 
                "Name": "loopEnd"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onended"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "start", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "when"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "grainOffset"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "grainDuration"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "stop", 
                "Argument": [
                    {
                        "Type": "double", 
                        "Name": "when"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "AudioBufferSourceNode", 
        "FileName": "AudioBufferSourceNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AudioContextConstructor", 
                "Name": "AudioContext"
            }, 
            {
                "Type": "OfflineAudioContextConstructor", 
                "Name": "OfflineAudioContext"
            }, 
            {
                "Type": "AudioContextConstructor", 
                "Name": "webkitAudioContext"
            }, 
            {
                "Type": "OfflineAudioContextConstructor", 
                "Name": "webkitOfflineAudioContext"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowWebAudio.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AudioParam", 
                "Name": "threshold"
            }, 
            {
                "Type": "AudioParam", 
                "Name": "knee"
            }, 
            {
                "Type": "AudioParam", 
                "Name": "ratio"
            }, 
            {
                "Type": "AudioParam", 
                "Name": "reduction"
            }, 
            {
                "Type": "AudioParam", 
                "Name": "attack"
            }, 
            {
                "Type": "AudioParam", 
                "Name": "release"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "DynamicsCompressorNode", 
        "FileName": "DynamicsCompressorNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AudioContext", 
                "Name": "context"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "numberOfInputs"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "numberOfOutputs"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "channelCount"
            }, 
            {
                "Type": "ChannelCountMode", 
                "Name": "channelCountMode"
            }, 
            {
                "Type": "ChannelInterpretation", 
                "Name": "channelInterpretation"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "connect", 
                "Argument": [
                    {
                        "Type": "AudioNode", 
                        "Name": "destination"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "output"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "input"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "connect", 
                "Argument": [
                    {
                        "Type": "AudioParam", 
                        "Name": "destination"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "output"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "disconnect", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "disconnect", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "output"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "disconnect", 
                "Argument": [
                    {
                        "Type": "AudioNode", 
                        "Name": "destination"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "disconnect", 
                "Argument": [
                    {
                        "Type": "AudioNode", 
                        "Name": "destination"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "output"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "disconnect", 
                "Argument": [
                    {
                        "Type": "AudioNode", 
                        "Name": "destination"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "output"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "input"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "disconnect", 
                "Argument": [
                    {
                        "Type": "AudioParam", 
                        "Name": "destination"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "disconnect", 
                "Argument": [
                    {
                        "Type": "AudioParam", 
                        "Name": "destination"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "output"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "AudioNode", 
        "FileName": "AudioNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "playbackTime"
            }, 
            {
                "Type": "AudioBuffer", 
                "Name": "inputBuffer"
            }, 
            {
                "Type": "AudioBuffer", 
                "Name": "outputBuffer"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "AudioProcessingEvent", 
        "FileName": "AudioProcessingEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onaudioprocess"
            }, 
            {
                "Type": "long", 
                "Name": "bufferSize"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ScriptProcessorNode", 
        "FileName": "ScriptProcessorNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "fftSize"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "frequencyBinCount"
            }, 
            {
                "Type": "double", 
                "Name": "minDecibels"
            }, 
            {
                "Type": "double", 
                "Name": "maxDecibels"
            }, 
            {
                "Type": "double", 
                "Name": "smoothingTimeConstant"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "getFloatFrequencyData", 
                "Argument": [
                    {
                        "Type": "Float32Array", 
                        "Name": "array"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "getByteFrequencyData", 
                "Argument": [
                    {
                        "Type": "Uint8Array", 
                        "Name": "array"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "getFloatTimeDomainData", 
                "Argument": [
                    {
                        "Type": "Float32Array", 
                        "Name": "array"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "getByteTimeDomainData", 
                "Argument": [
                    {
                        "Type": "Uint8Array", 
                        "Name": "array"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "AnalyserNode", 
        "FileName": "AnalyserNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AudioParam", 
                "Name": "gain"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "GainNode", 
        "FileName": "GainNode.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "ChannelMergerNode", 
        "FileName": "ChannelMergerNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "AudioParam", 
                "Name": "delayTime"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "DelayNode", 
        "FileName": "DelayNode.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "maxChannelCount"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "AudioDestinationNode", 
        "FileName": "AudioDestinationNode.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [], 
        "Const": [], 
        "Name": "PeriodicWave", 
        "FileName": "PeriodicWave.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "unsigned long", 
                "Name": "audioHandlerCount", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Internals", 
        "FileName": "InternalsWebAudio.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "USVString", 
                "Name": "url"
            }, 
            {
                "Type": "ContextFrameType", 
                "Name": "frameType"
            }, 
            {
                "Type": "DOMString", 
                "Name": "id"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "postMessage", 
                "Argument": [
                    {
                        "Type": "SerializedScriptValue", 
                        "Name": "message"
                    }, 
                    {
                        "Type": null, 
                        "Name": "transfer"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Client", 
        "FileName": "Client.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "USVString", 
                "Name": "scriptURL"
            }, 
            {
                "Type": "ServiceWorkerState", 
                "Name": "state"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onstatechange"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "postMessage", 
                "Argument": [
                    {
                        "Type": "SerializedScriptValue", 
                        "Name": "message"
                    }, 
                    {
                        "Type": null, 
                        "Name": "transfer"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "ServiceWorker", 
        "FileName": "ServiceWorker.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "ServiceWorker", 
                "Name": "controller"
            }, 
            {
                "Type": "Promise", 
                "Name": "ready"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oncontrollerchange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmessage"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "register", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "url"
                    }, 
                    {
                        "Type": "RegistrationOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "getRegistration", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "documentURL"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "getRegistrations", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "ServiceWorkerContainer", 
        "FileName": "ServiceWorkerContainer.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "matchAll", 
                "Argument": [
                    {
                        "Type": "ClientQueryOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "openWindow", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "url"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "claim", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Clients", 
        "FileName": "Clients.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "waitUntil", 
                "Argument": [
                    {
                        "Type": "Promise", 
                        "Name": "f"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "ExtendableEvent", 
        "FileName": "ExtendableEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "ServiceWorkerContainer", 
                "Name": "serviceWorker"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorServiceWorker.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Request", 
                "Name": "request"
            }, 
            {
                "Type": "boolean", 
                "Name": "isReload"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "respondWith", 
                "Argument": [
                    {
                        "Type": "Promise", 
                        "Name": "r"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "FetchEvent", 
        "FileName": "FetchEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": null, 
                "Name": "data"
            }, 
            {
                "Type": "DOMString", 
                "Name": "origin"
            }, 
            {
                "Type": "DOMString", 
                "Name": "lastEventId"
            }, 
            {
                "Type": null, 
                "Name": "source"
            }, 
            {
                "Type": "MessagePort", 
                "Name": "ports"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ServiceWorkerMessageEvent", 
        "FileName": "ServiceWorkerMessageEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "VisibilityState", 
                "Name": "visibilityState"
            }, 
            {
                "Type": "boolean", 
                "Name": "focused"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "focus", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "navigate", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "url"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "WindowClient", 
        "FileName": "WindowClient.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "ServiceWorker", 
                "Name": "installing"
            }, 
            {
                "Type": "ServiceWorker", 
                "Name": "waiting"
            }, 
            {
                "Type": "ServiceWorker", 
                "Name": "active"
            }, 
            {
                "Type": "USVString", 
                "Name": "scope"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onupdatefound"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "update", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "unregister", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "ServiceWorkerRegistration", 
        "FileName": "ServiceWorkerRegistration.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Clients", 
                "Name": "clients"
            }, 
            {
                "Type": "ServiceWorkerRegistration", 
                "Name": "registration"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onactivate"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onfetch"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "oninstall"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmessage"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "fetch", 
                "Argument": [
                    {
                        "Type": "RequestInfo", 
                        "Name": "input"
                    }, 
                    {
                        "Type": "Dictionary", 
                        "Name": "init"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "skipWaiting", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "ServiceWorkerGlobalScope", 
        "FileName": "ServiceWorkerGlobalScope.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "terminateServiceWorker", 
                "Argument": [
                    {
                        "Type": "ServiceWorker", 
                        "Name": "worker"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Internals", 
        "FileName": "InternalsServiceWorker.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "getBattery", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorBattery.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "charging"
            }, 
            {
                "Type": "double", 
                "Name": "chargingTime"
            }, 
            {
                "Type": "double", 
                "Name": "dischargingTime"
            }, 
            {
                "Type": "double", 
                "Name": "level"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onchargingchange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onchargingtimechange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ondischargingtimechange"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onlevelchange"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "BatteryManager", 
        "FileName": "BatteryManager.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "MimeType", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "MimeType", 
                "Name": "namedItem", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "MimeType", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "MimeTypeArray", 
        "FileName": "MimeTypeArray.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "suffixes"
            }, 
            {
                "Type": "DOMString", 
                "Name": "description"
            }, 
            {
                "Type": "Plugin", 
                "Name": "enabledPlugin"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MimeType", 
        "FileName": "MimeType.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "filename"
            }, 
            {
                "Type": "DOMString", 
                "Name": "description"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "MimeType", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "MimeType", 
                "Name": "namedItem", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "MimeType", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Plugin", 
        "FileName": "Plugin.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "PluginArray", 
                "Name": "plugins"
            }, 
            {
                "Type": "MimeTypeArray", 
                "Name": "mimeTypes"
            }
        ], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "javaEnabled", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorPlugins.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "Plugin", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "Plugin", 
                "Name": "namedItem", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "Plugin", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "refresh", 
                "Argument": [
                    {
                        "Type": "boolean", 
                        "Name": "reload"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "PluginArray", 
        "FileName": "PluginArray.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onsessionconnect"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "start", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "join", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "id"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "getAvailability", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "PresentationRequest", 
        "FileName": "PresentationRequest.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "PresentationSessionState", 
                "Name": "state"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onstatechange"
            }, 
            {
                "Type": "BinaryType", 
                "Name": "binaryType"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmessage"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "message"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": "ArrayBuffer", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "data"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "PresentationSession", 
        "FileName": "PresentationSession.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Presentation", 
                "Name": "presentation"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorPresentation.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "value"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onchange"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "PresentationAvailability", 
        "FileName": "PresentationAvailability.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "PresentationRequest", 
                "Name": "defaultRequest"
            }, 
            {
                "Type": "PresentationSession", 
                "Name": "session"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Presentation", 
        "FileName": "Presentation.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "PresentationSession", 
                "Name": "session"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "DefaultSessionStartEvent", 
        "FileName": "DefaultSessionStartEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "NetworkInformation", 
                "Name": "connection"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "WorkerNavigator", 
        "FileName": "WorkerNavigatorNetworkInformation.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "NetworkInformation", 
                "Name": "connection"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorNetworkInformation.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "ConnectionType", 
                "Name": "type"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ontypechange"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "NetworkInformation", 
        "FileName": "NetworkInformation.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "ResponseType", 
                "Name": "type"
            }, 
            {
                "Type": "USVString", 
                "Name": "url"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "status"
            }, 
            {
                "Type": "boolean", 
                "Name": "ok"
            }, 
            {
                "Type": "ByteString", 
                "Name": "statusText"
            }, 
            {
                "Type": "Headers", 
                "Name": "headers"
            }, 
            {
                "Type": "ReadableByteStream", 
                "Name": "body"
            }
        ], 
        "Operation": [
            {
                "Type": "Response", 
                "Name": "error", 
                "Argument": []
            }, 
            {
                "Type": "Response", 
                "Name": "redirect", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "url"
                    }, 
                    {
                        "Type": "unsigned short", 
                        "Name": "status"
                    }
                ]
            }, 
            {
                "Type": "Response", 
                "Name": "clone", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Response", 
        "FileName": "Response.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "append", 
                "Argument": [
                    {
                        "Type": "ByteString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "ByteString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "delete", 
                "Argument": [
                    {
                        "Type": "ByteString", 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": "ByteString", 
                "Name": "get", 
                "Argument": [
                    {
                        "Type": "ByteString", 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "getAll", 
                "Argument": [
                    {
                        "Type": "ByteString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "has", 
                "Argument": [
                    {
                        "Type": "ByteString", 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "set", 
                "Argument": [
                    {
                        "Type": "ByteString", 
                        "Name": "key"
                    }, 
                    {
                        "Type": "ByteString", 
                        "Name": "value"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Headers", 
        "FileName": "Headers.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "ByteString", 
                "Name": "method"
            }, 
            {
                "Type": "USVString", 
                "Name": "url"
            }, 
            {
                "Type": "Headers", 
                "Name": "headers"
            }, 
            {
                "Type": "RequestContext", 
                "Name": "context"
            }, 
            {
                "Type": "DOMString", 
                "Name": "referrer"
            }, 
            {
                "Type": "RequestMode", 
                "Name": "mode"
            }, 
            {
                "Type": "RequestCredentials", 
                "Name": "credentials"
            }
        ], 
        "Operation": [
            {
                "Type": "Request", 
                "Name": "clone", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Request", 
        "FileName": "Request.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "fetch", 
                "Argument": [
                    {
                        "Type": "RequestInfo", 
                        "Name": "input"
                    }, 
                    {
                        "Type": "Dictionary", 
                        "Name": "init"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "WorkerGlobalScope", 
        "FileName": "WorkerFetch.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "bodyUsed"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "arrayBuffer", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "blob", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "json", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "text", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Body", 
        "FileName": "Body.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "fetch", 
                "Argument": [
                    {
                        "Type": "RequestInfo", 
                        "Name": "input"
                    }, 
                    {
                        "Type": "Dictionary", 
                        "Name": "init"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowFetch.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "initDataType"
            }, 
            {
                "Type": "ArrayBuffer", 
                "Name": "initData"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MediaEncryptedEvent", 
        "FileName": "MediaEncryptedEvent.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "requestMediaKeySystemAccess", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "keySystem"
                    }, 
                    {
                        "Type": null, 
                        "Name": "supportedConfigurations"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorRequestMediaKeySystemAccess.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "sessionId"
            }, 
            {
                "Type": "double", 
                "Name": "expiration"
            }, 
            {
                "Type": "Promise", 
                "Name": "closed"
            }, 
            {
                "Type": "MediaKeyStatusMap", 
                "Name": "keyStatuses"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "generateRequest", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "initDataType"
                    }, 
                    {
                        "Type": "BufferSource", 
                        "Name": "initData"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "load", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "sessionId"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "update", 
                "Argument": [
                    {
                        "Type": "BufferSource", 
                        "Name": "response"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "close", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "remove", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "MediaKeySession", 
        "FileName": "MediaKeySession.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "size"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MediaKeyStatusMap", 
        "FileName": "MediaKeyStatusMap.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onwebkitkeyadded"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwebkitkeyerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwebkitkeymessage"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onwebkitneedkey"
            }, 
            {
                "Type": "MediaKeys", 
                "Name": "mediaKeys"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onencrypted"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "webkitGenerateKeyRequest", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "keySystem"
                    }, 
                    {
                        "Type": "Uint8Array", 
                        "Name": "initData"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "webkitAddKey", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "keySystem"
                    }, 
                    {
                        "Type": "Uint8Array", 
                        "Name": "key"
                    }, 
                    {
                        "Type": "Uint8Array", 
                        "Name": "initData"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "sessionId"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "webkitCancelKeyRequest", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "keySystem"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "sessionId"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "setMediaKeys", 
                "Argument": [
                    {
                        "Type": "MediaKeys", 
                        "Name": "mediaKeys"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLMediaElement", 
        "FileName": "HTMLMediaElementEncryptedMedia.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "MediaKeySession", 
                "Name": "createSession", 
                "Argument": [
                    {
                        "Type": "MediaKeySessionType", 
                        "Name": "sessionType"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "setServerCertificate", 
                "Argument": [
                    {
                        "Type": "BufferSource", 
                        "Name": "serverCertificate"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "MediaKeys", 
        "FileName": "MediaKeys.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "keySystem"
            }
        ], 
        "Operation": [
            {
                "Type": "MediaKeySystemConfiguration", 
                "Name": "getConfiguration", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "createMediaKeys", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "MediaKeySystemAccess", 
        "FileName": "MediaKeySystemAccess.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MediaKeyMessageType", 
                "Name": "messageType"
            }, 
            {
                "Type": "ArrayBuffer", 
                "Name": "message"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MediaKeyMessageEvent", 
        "FileName": "MediaKeyMessageEvent.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "registerProtocolHandler", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "scheme"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "title"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "isProtocolHandlerRegistered", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "scheme"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "unregisterProtocolHandler", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "scheme"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorContentUtils.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setNavigatorContentUtilsClientMock", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Internals", 
        "FileName": "InternalsNavigatorContentUtils.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "unsigned long", 
                "Name": "numberOfLiveAXObjects", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Internals", 
        "FileName": "InternalsAccessibility.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onmessage"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "postMessage", 
                "Argument": [
                    {
                        "Type": "SerializedScriptValue", 
                        "Name": "message"
                    }, 
                    {
                        "Type": null, 
                        "Name": "transfer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "terminate", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "CompositorWorker", 
        "FileName": "CompositorWorker.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onmessage"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "postMessage", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "message"
                    }, 
                    {
                        "Type": null, 
                        "Name": "transfer"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "requestAnimationFrame", 
                "Argument": [
                    {
                        "Type": "FrameRequestCallback", 
                        "Name": "callback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "cancelAnimationFrame", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "handle"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CompositorWorkerGlobalScope", 
        "FileName": "CompositorWorkerGlobalScope.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "requestMIDIAccess", 
                "Argument": [
                    {
                        "Type": "MIDIOptions", 
                        "Name": "options"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorWebMIDI.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MIDIPort", 
                "Name": "port"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MIDIConnectionEvent", 
        "FileName": "MIDIConnectionEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "size"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MIDIInputMap", 
        "FileName": "MIDIInputMap.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MIDIInputMap", 
                "Name": "inputs"
            }, 
            {
                "Type": "MIDIOutputMap", 
                "Name": "outputs"
            }, 
            {
                "Type": "boolean", 
                "Name": "sysexEnabled"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onstatechange"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MIDIAccess", 
        "FileName": "MIDIAccess.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": "Uint8Array", 
                        "Name": "data"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "timestamp"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "data"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "timestamp"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "MIDIOutput", 
        "FileName": "MIDIOutput.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onmidimessage"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MIDIInput", 
        "FileName": "MIDIInput.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "receivedTime"
            }, 
            {
                "Type": "Uint8Array", 
                "Name": "data"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MIDIMessageEvent", 
        "FileName": "MIDIMessageEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "size"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "MIDIOutputMap", 
        "FileName": "MIDIOutputMap.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "MIDIPortConnectionState", 
                "Name": "connection"
            }, 
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "DOMString", 
                "Name": "manufacturer"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "MIDIPortDeviceState", 
                "Name": "state"
            }, 
            {
                "Type": "MIDIPortType", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "version"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onstatechange"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "open", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "close", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "MIDIPort", 
        "FileName": "MIDIPort.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "encoding"
            }, 
            {
                "Type": "boolean", 
                "Name": "fatal"
            }, 
            {
                "Type": "boolean", 
                "Name": "ignoreBOM"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "decode", 
                "Argument": [
                    {
                        "Type": "BufferSource", 
                        "Name": "input"
                    }, 
                    {
                        "Type": "TextDecodeOptions", 
                        "Name": "options"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TextDecoder", 
        "FileName": "TextDecoder.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "encoding"
            }
        ], 
        "Operation": [
            {
                "Type": "Uint8Array", 
                "Name": "encode", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "input"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "TextEncoder", 
        "FileName": "TextEncoder.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "id"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "GeofencingRegion", 
        "FileName": "GeofencingRegion.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "GeofencingRegion", 
                "Name": "region"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "GeofencingEvent", 
        "FileName": "GeofencingEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Geofencing", 
                "Name": "geofencing"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ServiceWorkerRegistration", 
        "FileName": "ServiceWorkerRegistrationGeofencing.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Geofencing", 
                "Name": "geofencing"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "WorkerNavigator", 
        "FileName": "WorkerNavigatorGeofencing.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "latitude"
            }, 
            {
                "Type": "double", 
                "Name": "longitude"
            }, 
            {
                "Type": "double", 
                "Name": "radius"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "double", 
                "Name": "MIN_RADIUS", 
                "Value": null
            }, 
            {
                "Type": "double", 
                "Name": "MAX_RADIUS", 
                "Value": null
            }
        ], 
        "Name": "CircularGeofencingRegion", 
        "FileName": "CircularGeofencingRegion.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "ongeofenceenter"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "ongeofenceleave"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ServiceWorkerGlobalScope", 
        "FileName": "ServiceWorkerGlobalScopeGeofencing.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "registerRegion", 
                "Argument": [
                    {
                        "Type": "GeofencingRegion", 
                        "Name": "region"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "unregisterRegion", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "regionId"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "getRegisteredRegions", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Geofencing", 
        "FileName": "Geofencing.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "vibrate", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "pattern"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "vibrate", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "pattern"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorVibration.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "isVibrating", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": null, 
                "Name": "pendingVibrationPattern", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Internals", 
        "FileName": "InternalsVibration.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "doNotTrack"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorDoNotTrack.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "instanceID"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "deviceClass"
            }, 
            {
                "Type": "VendorIDSource", 
                "Name": "vendorIDSource"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "vendorID"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "productID"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "productVersion"
            }, 
            {
                "Type": "boolean", 
                "Name": "paired"
            }, 
            {
                "Type": "UUID", 
                "Name": "uuids"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "connectGATT", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "BluetoothDevice", 
        "FileName": "BluetoothDevice.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "connected"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "getPrimaryService", 
                "Argument": [
                    {
                        "Type": "BluetoothServiceUUID", 
                        "Name": "service"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "BluetoothGATTRemoteServer", 
        "FileName": "BluetoothGATTRemoteServer.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "UUID", 
                "Name": "uuid"
            }, 
            {
                "Type": "boolean", 
                "Name": "isPrimary"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "getCharacteristic", 
                "Argument": [
                    {
                        "Type": "BluetoothCharacteristicUUID", 
                        "Name": "characteristic"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "BluetoothGATTService", 
        "FileName": "BluetoothGATTService.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "requestDevice", 
                "Argument": [
                    {
                        "Type": "RequestDeviceOptions", 
                        "Name": "options"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Bluetooth", 
        "FileName": "Bluetooth.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "UUID", 
                "Name": "uuid"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "readValue", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "writeValue", 
                "Argument": [
                    {
                        "Type": "BufferSource", 
                        "Name": "value"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "BluetoothGATTCharacteristic", 
        "FileName": "BluetoothGATTCharacteristic.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Bluetooth", 
                "Name": "bluetooth"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorBluetooth.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "UUID", 
                "Name": "getService", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "UUID", 
                "Name": "getCharacteristic", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "UUID", 
                "Name": "getDescriptor", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "UUID", 
                "Name": "canonicalUUID", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "alias"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "BluetoothUUID", 
        "FileName": "BluetoothUUID.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onnotificationclick"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onnotificationerror"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ServiceWorkerGlobalScope", 
        "FileName": "ServiceWorkerGlobalScopeNotifications.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "permission"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "NotificationPermissionCallback", 
        "FileName": "NotificationPermissionCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "NotificationPermission", 
                "Name": "permission"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "maxActions"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onclick"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onshow"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onclose"
            }, 
            {
                "Type": "DOMString", 
                "Name": "title"
            }, 
            {
                "Type": "DOMString", 
                "Name": "dir"
            }, 
            {
                "Type": "DOMString", 
                "Name": "lang"
            }, 
            {
                "Type": "DOMString", 
                "Name": "body"
            }, 
            {
                "Type": "DOMString", 
                "Name": "tag"
            }, 
            {
                "Type": "DOMString", 
                "Name": "icon"
            }, 
            {
                "Type": null, 
                "Name": "vibrate"
            }, 
            {
                "Type": "boolean", 
                "Name": "silent"
            }, 
            {
                "Type": null, 
                "Name": "data"
            }, 
            {
                "Type": null, 
                "Name": "actions"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "requestPermission", 
                "Argument": [
                    {
                        "Type": "NotificationPermissionCallback", 
                        "Name": "deprecatedCallback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Notification", 
        "FileName": "Notification.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "showNotification", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "title"
                    }, 
                    {
                        "Type": "NotificationOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "getNotifications", 
                "Argument": [
                    {
                        "Type": "GetNotificationOptions", 
                        "Name": "filter"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "ServiceWorkerRegistration", 
        "FileName": "ServiceWorkerRegistrationNotifications.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Notification", 
                "Name": "notification"
            }, 
            {
                "Type": "DOMString", 
                "Name": "action"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "NotificationEvent", 
        "FileName": "NotificationEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "code"
            }, 
            {
                "Type": "DOMString", 
                "Name": "message"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "PERMISSION_DENIED", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "POSITION_UNAVAILABLE", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "TIMEOUT", 
                "Value": "3"
            }
        ], 
        "Name": "PositionError", 
        "FileName": "PositionError.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "latitude"
            }, 
            {
                "Type": "double", 
                "Name": "longitude"
            }, 
            {
                "Type": "double", 
                "Name": "altitude"
            }, 
            {
                "Type": "double", 
                "Name": "accuracy"
            }, 
            {
                "Type": "double", 
                "Name": "altitudeAccuracy"
            }, 
            {
                "Type": "double", 
                "Name": "heading"
            }, 
            {
                "Type": "double", 
                "Name": "speed"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Coordinates", 
        "FileName": "Coordinates.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Geolocation", 
                "Name": "geolocation"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorGeolocation.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "Geoposition", 
                        "Name": "position"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "PositionCallback", 
        "FileName": "PositionCallback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "PositionError", 
                        "Name": "error"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "PositionErrorCallback", 
        "FileName": "PositionErrorCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Coordinates", 
                "Name": "coords"
            }, 
            {
                "Type": "DOMTimeStamp", 
                "Name": "timestamp"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Geoposition", 
        "FileName": "Geoposition.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "getCurrentPosition", 
                "Argument": [
                    {
                        "Type": "PositionCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "PositionErrorCallback", 
                        "Name": "errorCallback"
                    }, 
                    {
                        "Type": "PositionOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "watchPosition", 
                "Argument": [
                    {
                        "Type": "PositionCallback", 
                        "Name": "successCallback"
                    }, 
                    {
                        "Type": "PositionErrorCallback", 
                        "Name": "errorCallback"
                    }, 
                    {
                        "Type": "PositionOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clearWatch", 
                "Argument": [
                    {
                        "Type": "long", 
                        "Name": "watchID"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Geolocation", 
        "FileName": "Geolocation.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "setGeolocationClientMock", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setGeolocationPosition", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "latitude"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "longitude"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "accuracy"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setGeolocationPositionUnavailableError", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "message"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setGeolocationPermission", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "allowed"
                    }
                ]
            }, 
            {
                "Type": "long", 
                "Name": "numberOfPendingGeolocationPermissionRequests", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Internals", 
        "FileName": "InternalsGeolocation.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "ondevicelight"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowDeviceLight.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "value"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "DeviceLightEvent", 
        "FileName": "DeviceLightEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "targetURL"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": null, 
                "Name": "data"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "postMessage", 
                "Argument": [
                    {
                        "Type": "SerializedScriptValue", 
                        "Name": "message"
                    }, 
                    {
                        "Type": null, 
                        "Name": "transfer"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "ServicePort", 
        "FileName": "ServicePort.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "onconnect"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmessage"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onclose"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "connect", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }, 
                    {
                        "Type": "ServicePortConnectOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "match", 
                "Argument": [
                    {
                        "Type": "ServicePortMatchOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "matchAll", 
                "Argument": [
                    {
                        "Type": "ServicePortMatchOptions", 
                        "Name": "options"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "ServicePortCollection", 
        "FileName": "ServicePortCollection.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "targetURL"
            }, 
            {
                "Type": "DOMString", 
                "Name": "origin"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "respondWith", 
                "Argument": [
                    {
                        "Type": "Promise", 
                        "Name": "response"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "ServicePortConnectEvent", 
        "FileName": "ServicePortConnectEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "ServicePortCollection", 
                "Name": "services"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "WorkerNavigator", 
        "FileName": "WorkerNavigatorServices.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "origin"
            }, 
            {
                "Type": "DOMString", 
                "Name": "targetUrl"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "postMessage", 
                "Argument": [
                    {
                        "Type": "SerializedScriptValue", 
                        "Name": "message"
                    }, 
                    {
                        "Type": null, 
                        "Name": "transfer"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CrossOriginServiceWorkerClient", 
        "FileName": "CrossOriginServiceWorkerClient.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "oncrossoriginmessage"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "ServiceWorkerGlobalScope", 
        "FileName": "ServiceWorkerGlobalScopeNavigatorConnect.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "ServicePortCollection", 
                "Name": "services"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorServices.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "code"
            }, 
            {
                "Type": "DOMString", 
                "Name": "message"
            }
        ], 
        "Operation": [], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "UNKNOWN_ERR", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "DATABASE_ERR", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "VERSION_ERR", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "TOO_LARGE_ERR", 
                "Value": "3"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "QUOTA_ERR", 
                "Value": "4"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "SYNTAX_ERR", 
                "Value": "5"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CONSTRAINT_ERR", 
                "Value": "6"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "TIMEOUT_ERR", 
                "Value": "7"
            }
        ], 
        "Name": "SQLError", 
        "FileName": "SQLError.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SQLResultSetRowList", 
                "Name": "rows"
            }, 
            {
                "Type": "long", 
                "Name": "insertId"
            }, 
            {
                "Type": "long", 
                "Name": "rowsAffected"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SQLResultSet", 
        "FileName": "SQLResultSet.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "Database", 
                        "Name": "database"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DatabaseCallback", 
        "FileName": "DatabaseCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": null, 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SQLResultSetRowList", 
        "FileName": "SQLResultSetRowList.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "SQLTransaction", 
                        "Name": "transaction"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SQLTransactionCallback", 
        "FileName": "SQLTransactionCallback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "SQLTransaction", 
                        "Name": "transaction"
                    }, 
                    {
                        "Type": "SQLError", 
                        "Name": "error"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SQLStatementErrorCallback", 
        "FileName": "SQLStatementErrorCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "version"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "changeVersion", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "oldVersion"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "newVersion"
                    }, 
                    {
                        "Type": "SQLTransactionCallback", 
                        "Name": "callback"
                    }, 
                    {
                        "Type": "SQLTransactionErrorCallback", 
                        "Name": "errorCallback"
                    }, 
                    {
                        "Type": "VoidCallback", 
                        "Name": "successCallback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "transaction", 
                "Argument": [
                    {
                        "Type": "SQLTransactionCallback", 
                        "Name": "callback"
                    }, 
                    {
                        "Type": "SQLTransactionErrorCallback", 
                        "Name": "errorCallback"
                    }, 
                    {
                        "Type": "VoidCallback", 
                        "Name": "successCallback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "readTransaction", 
                "Argument": [
                    {
                        "Type": "SQLTransactionCallback", 
                        "Name": "callback"
                    }, 
                    {
                        "Type": "SQLTransactionErrorCallback", 
                        "Name": "errorCallback"
                    }, 
                    {
                        "Type": "VoidCallback", 
                        "Name": "successCallback"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Database", 
        "FileName": "Database.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "SQLTransaction", 
                        "Name": "transaction"
                    }, 
                    {
                        "Type": "SQLResultSet", 
                        "Name": "resultSet"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SQLStatementCallback", 
        "FileName": "SQLStatementCallback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "SQLError", 
                        "Name": "error"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SQLTransactionErrorCallback", 
        "FileName": "SQLTransactionErrorCallback.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Database", 
                "Name": "openDatabase", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "version"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "displayName"
                    }, 
                    {
                        "Type": "unsigned long", 
                        "Name": "estimatedSize"
                    }, 
                    {
                        "Type": "DatabaseCallback", 
                        "Name": "creationCallback"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowWebDatabase.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "executeSql", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "sqlStatement"
                    }, 
                    {
                        "Type": "ObjectArray", 
                        "Name": "arguments"
                    }, 
                    {
                        "Type": "SQLStatementCallback", 
                        "Name": "callback"
                    }, 
                    {
                        "Type": "SQLStatementErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SQLTransaction", 
        "FileName": "SQLTransaction.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "getVRDevices", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorVRDevice.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "VREyeParameters", 
                "Name": "getEyeParameters", 
                "Argument": [
                    {
                        "Type": "VREye", 
                        "Name": "whichEye"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setFieldOfView", 
                "Argument": [
                    {
                        "Type": "VRFieldOfView", 
                        "Name": "leftFov"
                    }, 
                    {
                        "Type": "VRFieldOfView", 
                        "Name": "rightFov"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HMDVRDevice", 
        "FileName": "HMDVRDevice.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "hardwareUnitId"
            }, 
            {
                "Type": "DOMString", 
                "Name": "deviceId"
            }, 
            {
                "Type": "DOMString", 
                "Name": "deviceName"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "VRDevice", 
        "FileName": "VRDevice.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "timeStamp"
            }, 
            {
                "Type": "DOMPoint", 
                "Name": "position"
            }, 
            {
                "Type": "DOMPoint", 
                "Name": "linearVelocity"
            }, 
            {
                "Type": "DOMPoint", 
                "Name": "linearAcceleration"
            }, 
            {
                "Type": "DOMPoint", 
                "Name": "orientation"
            }, 
            {
                "Type": "DOMPoint", 
                "Name": "angularVelocity"
            }, 
            {
                "Type": "DOMPoint", 
                "Name": "angularAcceleration"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "VRPositionState", 
        "FileName": "VRPositionState.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "VRFieldOfView", 
                "Name": "minimumFieldOfView"
            }, 
            {
                "Type": "VRFieldOfView", 
                "Name": "maximumFieldOfView"
            }, 
            {
                "Type": "VRFieldOfView", 
                "Name": "recommendedFieldOfView"
            }, 
            {
                "Type": "DOMPoint", 
                "Name": "eyeTranslation"
            }, 
            {
                "Type": "VRFieldOfView", 
                "Name": "currentFieldOfView"
            }, 
            {
                "Type": "DOMRect", 
                "Name": "renderRect"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "VREyeParameters", 
        "FileName": "VREyeParameters.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "VRPositionState", 
                "Name": "getState", 
                "Argument": []
            }, 
            {
                "Type": "VRPositionState", 
                "Name": "getImmediateState", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "resetSensor", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "PositionSensorVRDevice", 
        "FileName": "PositionSensorVRDevice.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "upDegrees"
            }, 
            {
                "Type": "double", 
                "Name": "downDegrees"
            }, 
            {
                "Type": "double", 
                "Name": "leftDegrees"
            }, 
            {
                "Type": "double", 
                "Name": "rightDegrees"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "VRFieldOfView", 
        "FileName": "VRFieldOfView.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "sinkId"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "setSinkId", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "sinkId"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "HTMLMediaElement", 
        "FileName": "HTMLMediaElementAudioOutputDevice.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "boolean", 
                "Name": "sendBeacon", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "url"
                    }, 
                    {
                        "Type": null, 
                        "Name": "data"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorBeacon.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "USVString", 
                "Name": "provider"
            }, 
            {
                "Type": "DOMString", 
                "Name": "protocol"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "FederatedCredential", 
        "FileName": "FederatedCredential.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "CredentialsContainer", 
                "Name": "credentials"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorCredentials.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "id"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "iconURL"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Credential", 
        "FileName": "Credential.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "get", 
                "Argument": [
                    {
                        "Type": "CredentialRequestOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "store", 
                "Argument": [
                    {
                        "Type": "Credential", 
                        "Name": "credential"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "requireUserMediation", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "CredentialsContainer", 
        "FileName": "CredentialsContainer.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "password"
            }, 
            {
                "Type": "FormData", 
                "Name": "formData"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "PasswordCredential", 
        "FileName": "PasswordCredential.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "match", 
                "Argument": [
                    {
                        "Type": "RequestInfo", 
                        "Name": "request"
                    }, 
                    {
                        "Type": "CacheQueryOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "matchAll", 
                "Argument": [
                    {
                        "Type": "RequestInfo", 
                        "Name": "request"
                    }, 
                    {
                        "Type": "CacheQueryOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "add", 
                "Argument": [
                    {
                        "Type": "RequestInfo", 
                        "Name": "request"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "addAll", 
                "Argument": [
                    {
                        "Type": null, 
                        "Name": "requests"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "put", 
                "Argument": [
                    {
                        "Type": "RequestInfo", 
                        "Name": "request"
                    }, 
                    {
                        "Type": "Response", 
                        "Name": "response"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "delete", 
                "Argument": [
                    {
                        "Type": "RequestInfo", 
                        "Name": "request"
                    }, 
                    {
                        "Type": "CacheQueryOptions", 
                        "Name": "options"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "keys", 
                "Argument": [
                    {
                        "Type": "RequestInfo", 
                        "Name": "request"
                    }, 
                    {
                        "Type": "CacheQueryOptions", 
                        "Name": "options"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Cache", 
        "FileName": "Cache.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "has", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "cacheName"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "open", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "cacheName"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "delete", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "cacheName"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "keys", 
                "Argument": []
            }, 
            {
                "Type": "Promise", 
                "Name": "match", 
                "Argument": [
                    {
                        "Type": "RequestInfo", 
                        "Name": "request"
                    }, 
                    {
                        "Type": "CacheQueryOptions", 
                        "Name": "options"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "CacheStorage", 
        "FileName": "CacheStorage.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "CacheStorage", 
                "Name": "caches"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "WorkerGlobalScope", 
        "FileName": "WorkerCacheStorage.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "CacheStorage", 
                "Name": "caches"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowCacheStorage.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "alpha"
            }, 
            {
                "Type": "double", 
                "Name": "beta"
            }, 
            {
                "Type": "double", 
                "Name": "gamma"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "DeviceRotationRate", 
        "FileName": "DeviceRotationRate.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DeviceAcceleration", 
                "Name": "acceleration"
            }, 
            {
                "Type": "DeviceAcceleration", 
                "Name": "accelerationIncludingGravity"
            }, 
            {
                "Type": "DeviceRotationRate", 
                "Name": "rotationRate"
            }, 
            {
                "Type": "double", 
                "Name": "interval"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "initDeviceMotionEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "bubbles"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "cancelable"
                    }, 
                    {
                        "Type": "DeviceAcceleration", 
                        "Name": "acceleration"
                    }, 
                    {
                        "Type": "DeviceAcceleration", 
                        "Name": "accelerationIncludingGravity"
                    }, 
                    {
                        "Type": "DeviceRotationRate", 
                        "Name": "rotationRate"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "interval"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DeviceMotionEvent", 
        "FileName": "DeviceMotionEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "ondeviceorientation"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowDeviceOrientation.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "x"
            }, 
            {
                "Type": "double", 
                "Name": "y"
            }, 
            {
                "Type": "double", 
                "Name": "z"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "DeviceAcceleration", 
        "FileName": "DeviceAcceleration.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "double", 
                "Name": "alpha"
            }, 
            {
                "Type": "double", 
                "Name": "beta"
            }, 
            {
                "Type": "double", 
                "Name": "gamma"
            }, 
            {
                "Type": "boolean", 
                "Name": "absolute"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "initDeviceOrientationEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "type"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "bubbles"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "cancelable"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "alpha"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "beta"
                    }, 
                    {
                        "Type": "double", 
                        "Name": "gamma"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "absolute"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DeviceOrientationEvent", 
        "FileName": "DeviceOrientationEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "EventHandler", 
                "Name": "ondevicemotion"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowDeviceMotion.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "keepAwake"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Screen", 
        "FileName": "ScreenWakeLock.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "queryUsageAndQuota", 
                "Argument": [
                    {
                        "Type": "StorageUsageCallback", 
                        "Name": "usageCallback"
                    }, 
                    {
                        "Type": "StorageErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "requestQuota", 
                "Argument": [
                    {
                        "Type": "unsigned long long", 
                        "Name": "newQuotaInBytes"
                    }, 
                    {
                        "Type": "StorageQuotaCallback", 
                        "Name": "quotaCallback"
                    }, 
                    {
                        "Type": "StorageErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "DeprecatedStorageQuota", 
        "FileName": "DeprecatedStorageQuota.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "StorageType", 
                "Name": "supportedTypes"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "queryInfo", 
                "Argument": [
                    {
                        "Type": "StorageType", 
                        "Name": "type"
                    }
                ]
            }, 
            {
                "Type": "Promise", 
                "Name": "requestPersistentQuota", 
                "Argument": [
                    {
                        "Type": "unsigned long long", 
                        "Name": "newQuota"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "StorageQuota", 
        "FileName": "StorageQuota.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long long", 
                "Name": "usage"
            }, 
            {
                "Type": "unsigned long long", 
                "Name": "quota"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "StorageInfo", 
        "FileName": "StorageInfo.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DeprecatedStorageQuota", 
                "Name": "webkitTemporaryStorage"
            }, 
            {
                "Type": "DeprecatedStorageQuota", 
                "Name": "webkitPersistentStorage"
            }, 
            {
                "Type": "StorageQuota", 
                "Name": "storageQuota"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Navigator", 
        "FileName": "NavigatorStorageQuota.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "unsigned long long", 
                        "Name": "currentUsageInBytes"
                    }, 
                    {
                        "Type": "unsigned long long", 
                        "Name": "currentQuotaInBytes"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "StorageUsageCallback", 
        "FileName": "StorageUsageCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DeprecatedStorageInfo", 
                "Name": "webkitStorageInfo"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowQuota.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "queryUsageAndQuota", 
                "Argument": [
                    {
                        "Type": "unsigned short", 
                        "Name": "storageType"
                    }, 
                    {
                        "Type": "StorageUsageCallback", 
                        "Name": "usageCallback"
                    }, 
                    {
                        "Type": "StorageErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "requestQuota", 
                "Argument": [
                    {
                        "Type": "unsigned short", 
                        "Name": "storageType"
                    }, 
                    {
                        "Type": "unsigned long long", 
                        "Name": "newQuotaInBytes"
                    }, 
                    {
                        "Type": "StorageQuotaCallback", 
                        "Name": "quotaCallback"
                    }, 
                    {
                        "Type": "StorageErrorCallback", 
                        "Name": "errorCallback"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "TEMPORARY", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "PERSISTENT", 
                "Value": "1"
            }
        ], 
        "Name": "DeprecatedStorageInfo", 
        "FileName": "DeprecatedStorageInfo.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "unsigned long long", 
                        "Name": "grantedQuotaInBytes"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "StorageQuotaCallback", 
        "FileName": "StorageQuotaCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DeprecatedStorageQuota", 
                "Name": "webkitTemporaryStorage"
            }, 
            {
                "Type": "DeprecatedStorageQuota", 
                "Name": "webkitPersistentStorage"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "WorkerNavigator", 
        "FileName": "WorkerNavigatorStorageQuota.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "handleEvent", 
                "Argument": [
                    {
                        "Type": "DOMError", 
                        "Name": "error"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "StorageErrorCallback", 
        "FileName": "StorageErrorCallback.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__deleter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "__setter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "value"
                    }
                ]
            }, 
            {
                "Type": "boolean", 
                "Name": "__deleter__", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "name"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "key", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "DOMString", 
                "Name": "getItem", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "setItem", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "key"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "removeItem", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "key"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "clear", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "Storage", 
        "FileName": "Storage.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "Storage", 
                "Name": "sessionStorage"
            }, 
            {
                "Type": "Storage", 
                "Name": "localStorage"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowStorage.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "key"
            }, 
            {
                "Type": "DOMString", 
                "Name": "oldValue"
            }, 
            {
                "Type": "DOMString", 
                "Name": "newValue"
            }, 
            {
                "Type": "DOMString", 
                "Name": "url"
            }, 
            {
                "Type": "Storage", 
                "Name": "storageArea"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "initStorageEvent", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "typeArg"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "canBubbleArg"
                    }, 
                    {
                        "Type": "boolean", 
                        "Name": "cancelableArg"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "keyArg"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "oldValueArg"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "newValueArg"
                    }, 
                    {
                        "Type": "DOMString", 
                        "Name": "urlArg"
                    }, 
                    {
                        "Type": "Storage", 
                        "Name": "storageAreaArg"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "StorageEvent", 
        "FileName": "StorageEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "wasClean"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "code"
            }, 
            {
                "Type": "DOMString", 
                "Name": "reason"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "CloseEvent", 
        "FileName": "CloseEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "url"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "readyState"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "bufferedAmount"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onopen"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onclose"
            }, 
            {
                "Type": "DOMString", 
                "Name": "extensions"
            }, 
            {
                "Type": "DOMString", 
                "Name": "protocol"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmessage"
            }, 
            {
                "Type": "BinaryType", 
                "Name": "binaryType"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "close", 
                "Argument": [
                    {
                        "Type": "unsigned short", 
                        "Name": "code"
                    }, 
                    {
                        "Type": "USVString", 
                        "Name": "reason"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": "USVString", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": "Blob", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": "ArrayBuffer", 
                        "Name": "data"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "send", 
                "Argument": [
                    {
                        "Type": "ArrayBufferView", 
                        "Name": "data"
                    }
                ]
            }
        ], 
        "Const": [
            {
                "Type": "unsigned short", 
                "Name": "CONNECTING", 
                "Value": "0"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "OPEN", 
                "Value": "1"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CLOSING", 
                "Value": "2"
            }, 
            {
                "Type": "unsigned short", 
                "Name": "CLOSED", 
                "Value": "3"
            }
        ], 
        "Name": "WebSocket", 
        "FileName": "WebSocket.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "ScreenOrientation", 
                "Name": "orientation"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Screen", 
        "FileName": "ScreenScreenOrientation.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned short", 
                "Name": "angle"
            }, 
            {
                "Type": "DOMString", 
                "Name": "type"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onchange"
            }
        ], 
        "Operation": [
            {
                "Type": "Promise", 
                "Name": "lock", 
                "Argument": [
                    {
                        "Type": "OrientationLockType", 
                        "Name": "orientation"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "unlock", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "ScreenOrientation", 
        "FileName": "ScreenOrientation.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "SpeechGrammar", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "addFromUri", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "src"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "weight"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "addFromString", 
                "Argument": [
                    {
                        "Type": "DOMString", 
                        "Name": "string"
                    }, 
                    {
                        "Type": "float", 
                        "Name": "weight"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SpeechGrammarList", 
        "FileName": "SpeechGrammarList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "src"
            }, 
            {
                "Type": "float", 
                "Name": "weight"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SpeechGrammar", 
        "FileName": "SpeechGrammar.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "text"
            }, 
            {
                "Type": "DOMString", 
                "Name": "lang"
            }, 
            {
                "Type": "SpeechSynthesisVoice", 
                "Name": "voice"
            }, 
            {
                "Type": "float", 
                "Name": "volume"
            }, 
            {
                "Type": "float", 
                "Name": "rate"
            }, 
            {
                "Type": "float", 
                "Name": "pitch"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onend"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onpause"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onresume"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onmark"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onboundary"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SpeechSynthesisUtterance", 
        "FileName": "SpeechSynthesisUtterance.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SpeechSynthesisUtterance", 
                "Name": "utterance"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "charIndex"
            }, 
            {
                "Type": "float", 
                "Name": "elapsedTime"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SpeechSynthesisEvent", 
        "FileName": "SpeechSynthesisEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "resultIndex"
            }, 
            {
                "Type": "SpeechRecognitionResultList", 
                "Name": "results"
            }, 
            {
                "Type": "Document", 
                "Name": "interpretation"
            }, 
            {
                "Type": "Document", 
                "Name": "emma"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SpeechRecognitionEvent", 
        "FileName": "SpeechRecognitionEvent.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "boolean", 
                "Name": "pending"
            }, 
            {
                "Type": "boolean", 
                "Name": "speaking"
            }, 
            {
                "Type": "boolean", 
                "Name": "paused"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onvoiceschanged"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "speak", 
                "Argument": [
                    {
                        "Type": "SpeechSynthesisUtterance", 
                        "Name": "utterance"
                    }
                ]
            }, 
            {
                "Type": "void", 
                "Name": "cancel", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "pause", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "resume", 
                "Argument": []
            }, 
            {
                "Type": null, 
                "Name": "getVoices", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "SpeechSynthesis", 
        "FileName": "SpeechSynthesis.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "voiceURI"
            }, 
            {
                "Type": "DOMString", 
                "Name": "name"
            }, 
            {
                "Type": "DOMString", 
                "Name": "lang"
            }, 
            {
                "Type": "boolean", 
                "Name": "localService"
            }, 
            {
                "Type": "boolean", 
                "Name": "default"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SpeechSynthesisVoice", 
        "FileName": "SpeechSynthesisVoice.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "transcript"
            }, 
            {
                "Type": "float", 
                "Name": "confidence"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SpeechRecognitionAlternative", 
        "FileName": "SpeechRecognitionAlternative.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }
        ], 
        "Operation": [
            {
                "Type": "SpeechRecognitionResult", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SpeechRecognitionResultList", 
        "FileName": "SpeechRecognitionResultList.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SpeechGrammarConstructor", 
                "Name": "webkitSpeechGrammar"
            }, 
            {
                "Type": "SpeechGrammarListConstructor", 
                "Name": "webkitSpeechGrammarList"
            }, 
            {
                "Type": "SpeechRecognitionConstructor", 
                "Name": "webkitSpeechRecognition"
            }, 
            {
                "Type": "SpeechRecognitionErrorConstructor", 
                "Name": "webkitSpeechRecognitionError"
            }, 
            {
                "Type": "SpeechRecognitionEventConstructor", 
                "Name": "webkitSpeechRecognitionEvent"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowSpeech.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SpeechSynthesis", 
                "Name": "speechSynthesis"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "Window", 
        "FileName": "WindowSpeechSynthesis.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "unsigned long", 
                "Name": "length"
            }, 
            {
                "Type": "boolean", 
                "Name": "isFinal"
            }
        ], 
        "Operation": [
            {
                "Type": "SpeechRecognitionAlternative", 
                "Name": "__getter__", 
                "Argument": [
                    {
                        "Type": "unsigned long", 
                        "Name": "index"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "SpeechRecognitionResult", 
        "FileName": "SpeechRecognitionResult.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "DOMString", 
                "Name": "error"
            }, 
            {
                "Type": "DOMString", 
                "Name": "message"
            }
        ], 
        "Operation": [], 
        "Const": [], 
        "Name": "SpeechRecognitionError", 
        "FileName": "SpeechRecognitionError.idl"
    }, 
    {
        "Attribute": [
            {
                "Type": "SpeechGrammarList", 
                "Name": "grammars"
            }, 
            {
                "Type": "DOMString", 
                "Name": "lang"
            }, 
            {
                "Type": "DOMString", 
                "Name": "serviceURI"
            }, 
            {
                "Type": "boolean", 
                "Name": "continuous"
            }, 
            {
                "Type": "boolean", 
                "Name": "interimResults"
            }, 
            {
                "Type": "unsigned long", 
                "Name": "maxAlternatives"
            }, 
            {
                "Type": "MediaStreamTrack", 
                "Name": "audioTrack"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onaudiostart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onsoundstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onspeechstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onspeechend"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onsoundend"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onaudioend"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onresult"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onnomatch"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onerror"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onstart"
            }, 
            {
                "Type": "EventHandler", 
                "Name": "onend"
            }
        ], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "start", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "stop", 
                "Argument": []
            }, 
            {
                "Type": "void", 
                "Name": "abort", 
                "Argument": []
            }
        ], 
        "Const": [], 
        "Name": "SpeechRecognition", 
        "FileName": "SpeechRecognition.idl"
    }, 
    {
        "Attribute": [], 
        "Operation": [
            {
                "Type": "void", 
                "Name": "enableMockSpeechSynthesizer", 
                "Argument": [
                    {
                        "Type": "Document", 
                        "Name": "document"
                    }
                ]
            }
        ], 
        "Const": [], 
        "Name": "Internals", 
        "FileName": "InternalsSpeechSynthesis.idl"
    }
]
